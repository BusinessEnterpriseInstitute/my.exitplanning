<?php
/**2
 * @file
 * Installation file for miniOrange OAuth Server Module.
 */

//include 'oauth_server_sso_feedback.php';

 /**
 * Implements hook_uninstall().
 */
 function oauth_server_sso_uninstall() {
  variable_del('oauth_server_sso_add_client_status');
  variable_del('oauth_server_sso_customer_admin_email');
  variable_del('oauth_server_sso_customer_admin_phone');
  variable_del('oauth_server_sso_customer_admin_token');
  variable_del('oauth_server_sso_customer_id');
  variable_del('oauth_server_sso_customer_api_key');
  db_drop_table('oauth_server_sso_token');
  variable_del('oauth_server_sso_client_name');
  variable_del('oauth_server_sso_client_id');
  variable_del('oauth_server_sso_client_secret');
  variable_del('oauth_server_sso_redirect_url');
  variable_del('oauth_server_sso_status');

}

  /**
  * Implementing hook_schema
  **/

function oauth_server_sso_schema() {
  $schema['oauth_server_sso_token'] = array(
    'description' => t('User Tokens'),
    'fields' => array(
    'user_id_val' => array(
    'type' => 'int',
    'not null' => TRUE,
		'unsigned' => TRUE,
    'description' => t('The UserIn of the user.'),
      ),
	  'auth_code' => array(
        'type' => 'varchar',
        'length' => 256,
        'description' => t('The one time authorization code.'),
    ),
    'auth_code_expiry_time' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => t('The one time authorization code expiry time.'),
    ),
	  'access_token' => array(
        'description' => 'The access token.',
        'type' => 'varchar',
        'length' => 256,
	  ),
    'access_token_request_time' => array(
        'description' => 'The access token expiry time.',
        'type' => 'int',
        'not null' => FALSE,
	  ),
	),
	'primary key' => array('user_id_val'),
  );
  return $schema;
}