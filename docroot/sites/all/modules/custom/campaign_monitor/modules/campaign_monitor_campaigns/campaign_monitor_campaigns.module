<?php

/**
 * Implements hook_menu().
 */
function campaign_monitor_campaigns_menu() {
  $items = array();
  /*
  $items['cm-client/%cm_client/lists'] = array(
    'title' => 'Lists',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cm_client_lists_form', 1),
    'access callback' => 'entity_access',
    'access arguments' => array('update', 'cm_client', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/campaign_monitor_lists.admin.inc',
    'weight' => -8,
  );
  */
  $items['cm-list/%cm_list/campaigns/add'] = array(
    'title' => 'Create campaign',
    'description' => 'Add campaign to Campaign Monitor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cm_campaign_form', NULL, 1),
    'access arguments' => array('administer campaign monitor'),
    'file' => 'includes/campaign_monitor_campaigns.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  // Campaigns
  $items['cm-campaign/%cm_campaign'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Campaign',
    'title callback' => 'entity_label',
    'title arguments' => array('cm_campaign', 1),
    'page callback' => 'campaign_monitor_campaigns_cm_campaign_view', // change to 'entity_ui_entity_page_view' to show default extra fields.
    'page arguments' => array(1),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'cm_campaign', 1),
    'file' => 'includes/campaign_monitor_campaigns.pages.inc',
  );
  $items['cm-campaign/%cm_campaign/view'] = array(
    'title' => 'Summary',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['cm-campaign/%cm_campaign/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'entity_ui_get_form',
    'page arguments' => array('cm_campaign', 1, 'edit'),
    'access callback' => 'entity_access',
    'access arguments' => array('update', 'cm_campaign', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/campaign_monitor_campaigns.admin.inc',
    'weight' => -9,
  );
  /*
  $items['cm-list/%cm_list/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cm_list_delete_form', 1),
    'access callback' => 'entity_access',
    'access arguments' => array('delete', 'cm_list', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/campaign_monitor_lists.admin.inc',
    'weight' => -8,
  );
  */
  $items['cm-campaign/%cm_campaign/raw'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Campaign',
    'title callback' => 'entity_label',
    'title arguments' => array('cm_campaign', 1),
    'page callback' => 'campaign_monitor_campaigns_cm_campaign_view', // change to 'entity_ui_entity_page_view' to show default extra fields.
    'page arguments' => array(1, 'raw'),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'cm_campaign', 1),
    'file' => 'includes/campaign_monitor_campaigns.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function campaign_monitor_campaigns_permission() {
  return array(
    'create campaign' => array(
      'title' => t('Create campaign'),
      'description' => t('Access to create Campaign Monitor campaigns'),
    ),
    'view own campaigns' => array(
      'title' => t('View own campaigns'),
      'description' => t('Access to view own Campaign Monitor campaigns'),
    ),
    'edit own campaigns' => array(
      'title' => t('Edit own campaigns in design status'),
      'description' => t('Access to edit own Campaign Monitor campaigns'),
    ),
  );
}

/**
 * Implements hook_entity_info().
 * Inform the base system and the Field API about one or more entity types.
 */
function campaign_monitor_campaigns_entity_info() {
  $info = array();
  $info['cm_campaign'] = array(
    'label' => t('Campaign'),
    'plural label' => t('Campaigns'),
    'base table' => 'campaign_monitor_campaigns',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'name',
    ),
    'static cache' => TRUE,
    'entity class' => 'CampaignEntity',
    'controller class' => 'EntityAPIController',
    'views controller class' => 'EntityDefaultViewsController',
    'module' => 'campaign_monitor_campaigns',
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => TRUE,
      ),
      'raw' => array(
        'label' => t('Raw content'),
        'custom settings' => FALSE,
      ),
    ),
    'fieldable' => TRUE,
    'bundles' => array(
      'cm_campaign' => array(
        'label' => t('Campaign Monitor Campaign'),
        'admin' => array(
          'path' => 'admin/config/campaign-monitor/campaigns',
        ),
      ),
    ),
    'access callback' => 'campaign_monitor_campaigns_access',
    'admin ui' => array(
      'path' => 'admin/config/campaign-monitor/campaigns',
      'controller class' => 'EntityDefaultUIController',
      'access arguments' => array('administer campaign monitor'),
      'file' => 'includes/campaign_monitor_campaigns.admin.inc',
    ),
    'uri callback' => 'entity_class_uri',
    'load hook' => 'cm_campaign_load',
  );
  return $info;
}
/**
 * Implements hook_entity_property_info_alter().
 */
function campaign_monitor_campaigns_entity_property_info_alter(&$info) {
  $properties = &$info['cm_campaign']['properties'];
  $properties['uid'] = array(
    'label' => t('User'),
    'type' => 'user',
    'description' => t('The user associated with the list'),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer campaign monitor',
    'schema field' => 'uid',
  );
  $properties['lid'] = array(
    'label' => t('List'),
    'type' => 'cm_list',
    'description' => t('The list entity associated with the campaign'),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer campaign monitor',
    'schema field' => 'lid',
  );
}

/*******************************************************************************
 ********************************* Campaign API's ****************************
 ******************************************************************************/
/**
 * Access callback for Campaign entities.
 */
function campaign_monitor_campaigns_access($op, $campaign = NULL, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer campaign monitor', $account) ||
      user_access('create campaign', $account);
    case 'view':
      return user_access('administer campaign monitor', $account) ||
      (user_access('view own campaigns', $account) && ($campaign->uid === $account->uid));
    case 'update':
      return user_access('administer campaign monitor', $account) ||
      (user_access('edit own campaigns', $account) && ($campaign->uid === $account->uid));
    case 'delete':
      return user_access('administer campaign monitor', $account);
  }
}
/**
 *  Load a campaign.
 */
function cm_campaign_load($id = NULL, $reset = FALSE){
  $ids = (isset ($id) ? array($id) : array());
  $campaign = cm_campaign_load_multiple($ids, $reset);
  return $campaign ? reset ($campaign) : FALSE;
}
function cm_campaign_load_multiple($ids = array(), $conditions = array(), $reset = FALSE){
  return entity_load('cm_campaign', $ids, $conditions, $reset);
}
/**
 * Delete single campaign.
 */
function cm_campaign_delete($campaign) {
   // Delete the campaign entity
   entity_delete('cm_campaign', entity_id('cm_campaign', $campaign));
}
/**
 * Delete multiple campaigns.
 */
function cm_campaign_delete_multiple($ids) {
  entity_delete_multiple('cm_campaign', $ids);
}

/**
 * Implements hook_views_api().
 */
function campaign_monitor_campaigns_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'campaign_monitor_campaigns') . '/views',
  );
}
