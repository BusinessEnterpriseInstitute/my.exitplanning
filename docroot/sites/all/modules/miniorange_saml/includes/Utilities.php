<?php


class Utilities
{
    public static function generateCertificate($Y7, $gk, $Yp, $BG)
    {
        $oH = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\162\145\x73\157\165\162\x63\145\163" . DIRECTORY_SEPARATOR . "\157\160\145\x6e\163\x73\x6c\x2e\143\156\x66";
        $B8 = array("\x63\x6f\156\146\151\147" => $oH, "\144\x69\147\x65\x73\164\x5f\x61\x6c\147" => "{$gk}", "\x70\x72\151\166\141\x74\x65\137\153\x65\x79\137\142\x69\x74\x73" => $Yp, "\x70\162\151\x76\141\x74\x65\x5f\x6b\x65\x79\x5f\164\x79\x70\x65" => OPENSSL_KEYTYPE_RSA);
        $hK = openssl_pkey_new($B8);
        $Wa = openssl_csr_new($Y7, $hK, $B8);
        if (!($Wa === FALSE)) {
            goto LO;
        }
        drupal_set_message(t("\x46\141\x63\151\156\147\x20\151\x73\163\x75\x65\163\40\x77\x68\x69\154\x65\40\x67\x65\x6e\x65\x72\141\164\x69\156\x67\40\143\x75\x73\164\x6f\x6d\x20\143\x65\162\164\x69\x66\x69\x63\x61\164\x65\56\40\x50\x6c\x65\141\163\x65\40\x63\x68\x65\x63\153\40\x69\x66\x20\143\x6f\165\x6e\x74\162\x79\40\143\x6f\144\x65\40\x69\163\40\x63\157\x72\162\x65\143\164\x2e"), "\x65\162\x72\x6f\162");
        return FALSE;
        LO:
        $UK = openssl_csr_sign($Wa, null, $hK, $BG, $B8, time());
        openssl_x509_export($UK, $So);
        openssl_pkey_export($hK, $r8, null, $B8);
        openssl_csr_export($Wa, $r5);
        PU:
        if (!(($l3 = openssl_error_string()) !== false)) {
            goto OK;
        }
        error_log($l3);
        goto PU;
        OK:
        $KX = array("\x70\x75\142\154\x69\143\x5f\x6b\145\171" => $So, "\160\162\151\x76\x61\x74\145\137\x6b\x65\x79" => $r8);
        variable_set("\155\151\156\x69\157\162\141\x6e\x67\145\137\x73\141\x6d\x6c\x5f\160\165\x62\154\x5f\143\x65\162\x74\151\x66\151\x63\141\164\x65", $KX["\160\x75\142\154\x69\143\137\153\x65\x79"]);
        variable_set("\155\x69\x6e\151\x6f\x72\x61\x6e\x67\x65\137\163\x61\155\154\137\160\162\x69\x76\x61\164\x65\x5f\143\145\x72\164\151\146\151\143\141\x74\145", $KX["\160\x72\x69\x76\x61\x74\x65\x5f\x6b\x65\171"]);
        file_put_contents(self::getCertificatePath(), $KX["\160\x75\x62\x6c\151\143\x5f\x6b\x65\171"]);
        file_put_contents(self::getKeyPath(), $KX["\x70\x72\151\166\141\x74\145\137\153\145\171"]);
        return TRUE;
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $ln = $base_url . "\57\141\x64\155\151\156\57\x63\157\156\x66\x69\147\57\x70\145\157\x70\154\x65\x2f\x6d\x69\x6e\151\x6f\162\x61\156\147\x65\x5f\x73\x61\x6d\154\x2f\x63\x75\163\164\x6f\155\x65\x72\x5f\163\145\x74\x75\160\x2f";
        if (variable_get("\155\151\x6e\x69\x6f\162\141\x6e\147\145\137\163\141\x6d\154\137\x63\x75\x73\x74\157\155\x65\162\137\x61\144\x6d\151\x6e\x5f\x65\x6d\141\151\154", NULL) == NULL || variable_get("\155\151\156\x69\157\162\141\156\x67\145\137\x73\141\155\154\x5f\143\165\163\x74\157\x6d\x65\162\137\x69\x64", NULL) == NULL || variable_get("\155\x69\156\151\157\x72\x61\x6e\147\x65\x5f\163\x61\x6d\154\x5f\x63\x75\163\x74\157\x6d\145\x72\137\141\144\x6d\x69\156\x5f\164\x6f\153\x65\x6e", NULL) == NULL || variable_get("\155\151\x6e\151\x6f\162\x61\x6e\147\145\137\x73\141\x6d\x6c\137\143\x75\x73\x74\x6f\155\145\162\x5f\x61\x70\151\x5f\x6b\145\171", NULL) == NULL) {
            goto A6;
        }
        if (!(variable_get("\155\151\156\151\x6f\162\x61\156\x67\x65\x5f\163\141\x6d\154\137\x6c\151\x63\x65\156\163\x65\x5f\x6b\145\x79") == NULL && variable_get("\155\151\156\151\157\x72\x61\x6e\147\x65\x5f\x73\x61\x6d\154\x5f\x63\x75\x73\x74\x6f\155\x65\x72\137\x61\x64\x6d\x69\x6e\x5f\x65\x6d\141\151\x6c") != NULL)) {
            goto yx;
        }
        $form["\155\x61\162\x6b\165\x70\x5f\155\x73\147"] = array("\43\x6d\141\162\x6b\165\x70" => "\74\x64\x69\x76\40\x63\154\x61\x73\x73\x3d\42\155\157\x5f\x73\x61\x6d\x6c\x5f\x72\145\x67\x69\x73\x74\145\162\137\x6d\145\163\163\141\147\x65\42\76\74\160\76\131\x6f\165\x20\156\x65\x65\144\40\x74\x6f\40\x3c\141\x20\x68\162\x65\146\x3d\42" . $ln . "\x22\40\x20\76\166\x65\x72\151\146\x79\x20\74\57\x61\x3e\40\171\x6f\x75\x72\40\x6c\x69\143\145\x6e\163\145\x20\153\x65\171\x20\142\145\146\x6f\162\x65\x20\x75\163\151\156\x67\x20\164\x68\151\163\x20\x6d\157\144\165\154\x65\56\x3c\x2f\x61\76\x3c\x2f\x70\x3e\74\x2f\144\151\166\x3e");
        return TRUE;
        yx:
        goto qg;
        A6:
        $form["\x6d\x61\162\153\x75\x70\x5f\x72\x65\x67\x5f\155\163\147"] = array("\43\155\141\162\153\165\160" => "\74\144\x69\x76\x20\x63\154\141\x73\163\x3d\x22\155\x6f\x5f\x73\141\155\154\x5f\x72\x65\147\151\x73\x74\x65\x72\x5f\155\x65\163\x73\141\x67\x65\x22\x3e\x59\x6f\165\40\156\145\x65\144\x20\164\157\40\x3c\x61\40\150\162\x65\146\75\42" . $ln . "\x22\40\76\x4c\x6f\147\x69\156\x3c\x2f\x61\x3e\40\167\151\x74\x68\40\x6d\x69\x6e\151\117\x72\141\156\x67\x65\40\x61\x63\143\157\x75\156\164\40\x62\x65\x66\x6f\x72\145\x20\165\163\151\x6e\x67\40\x74\x68\x69\x73\x20\x6d\157\144\165\x6c\x65\x2e\x3c\57\x63\145\x6e\x74\x65\162\x3e\x3c\57\x64\151\166\76");
        return TRUE;
        qg:
        if (!(variable_get("\x6d\x69\x6e\x69\157\x72\x61\x6e\147\x65\x5f\x73\141\155\154\x5f\154\x69\143\x65\x6e\163\145\137\153\145\x79") != NULL && variable_get("\155\151\156\151\157\162\x61\156\147\x65\137\x73\x61\155\x6c\137\143\165\x73\164\x6f\155\145\162\x5f\x61\144\155\x69\x6e\x5f\x65\x6d\x61\x69\x6c") != NULL)) {
            goto WZ;
        }
        return FALSE;
        WZ:
    }
    public static function createUpdateUrl($re, $lq, $AK, $Fr, $xX, $HZ)
    {
        $Qt = "\x31\x31\61\x31\x31\61\x31\61\x31\x31\61\61\61\x31\x31\x31" . $re;
        $ae = $HZ . "\x2f\155\x6f\x61\x73\57\141\x70\151\57\160\x6c\165\x67\x69\x6e\57\x64\x72\x75\160\141\x6c\112\157\x6f\x6d\154\x61\125\x70\x64\141\x74\145\x2f" . $xX . "\57" . $lq . "\57" . $AK . "\57";
        $Jw = openssl_cipher_iv_length($fB = "\101\105\123\55\x31\x32\70\55\x43\102\103");
        $pI = openssl_random_pseudo_bytes($Jw);
        $H6 = openssl_encrypt($Qt, $fB, $Fr, $B0 = OPENSSL_RAW_DATA, $pI);
        return $ae . str_replace(["\53", "\x2f", "\75"], ["\x2d", "\137", ''], base64_encode($H6));
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $form["\x6d\x61\x72\153\x75\160\x5f\x69\x64\x70\x5f\141\x74\x74\162\137\x68\145\x61\x64\145\x72\x5f\164\x6f\x70\x5f\163\x75\160\160\157\x72\164"] = array("\x23\155\141\162\x6b\x75\160" => "\x3c\144\x69\166\x20\143\154\141\163\x73\x3d\42\155\157\137\163\141\155\x6c\x5f\x74\141\x62\154\x65\137\154\141\171\x6f\x75\x74\137\163\165\160\160\x6f\162\164\x5f\x31\42\x3e");
        $form["\155\x61\x72\x6b\165\160\137\163\x75\160\160\157\162\x74\137\x31"] = array("\43\155\141\162\153\x75\160" => "\x3c\x68\x33\76\x46\x65\x61\164\x75\x72\145\40\x52\x65\161\x75\x65\163\164\x2f\x43\x6f\156\164\x61\x63\x74\x20\x55\x73\72\74\57\x68\x33\76\74\144\151\166\76\x4e\x65\x65\x64\x20\141\156\x79\x20\x68\145\154\x70\x3f\x20\x57\145\40\143\x61\156\40\x68\145\x6c\160\x20\171\x6f\x75\x20\167\151\164\x68\x20\143\157\x6e\x66\151\x67\165\x72\151\156\147\x20\x79\x6f\165\x72\x20\x53\145\x72\x76\151\x63\145\x20\120\162\x6f\166\x69\144\x65\162\56\x20\x4a\165\x73\164\40\x73\x65\156\x64\40\165\163\x20\x61\40\x71\165\145\x72\171\x20\x61\x6e\x64\x20\x77\x65\40\167\x69\154\x6c\40\147\x65\164\x20\142\141\143\153\40\164\x6f\40\x79\157\165\40\x73\x6f\x6f\156\56\74\x62\162\40\57\x3e\74\57\144\x69\166\76\74\x62\162\76");
        $form["\155\x69\156\151\157\162\x61\156\x67\145\137\x73\x61\x6d\154\x5f\145\x6d\141\151\x6c\137\141\144\x64\162\x65\163\x73"] = array("\x23\x74\x79\x70\145" => "\164\x65\x78\x74\x66\x69\145\154\144", "\43\x61\x74\x74\x72\151\142\x75\164\145\x73" => array("\163\x74\x79\x6c\x65" => "\x77\151\144\164\x68\72\61\60\x30\x25", "\160\154\x61\x63\145\150\x6f\154\144\145\x72" => "\105\156\x74\x65\x72\x20\x79\x6f\x75\162\40\105\x6d\141\x69\x6c"), "\43\144\x65\146\x61\x75\154\x74\137\x76\141\154\165\x65" => variable_get("\x6d\x69\x6e\151\157\x72\141\156\147\x65\137\x73\x61\155\154\137\x63\x75\x73\164\157\x6d\x65\x72\137\141\144\155\x69\x6e\137\145\x6d\x61\151\x6c", ''));
        $form["\x6d\151\x6e\x69\x6f\162\x61\156\x67\145\x5f\163\x61\x6d\154\137\x70\x68\x6f\156\x65\137\156\x75\x6d\142\145\162"] = array("\x23\164\171\x70\145" => "\x74\145\x78\x74\146\151\145\154\144", "\43\141\164\164\162\x69\142\165\164\145\x73" => array("\163\x74\x79\x6c\145" => "\167\151\x64\x74\x68\x3a\61\x30\x30\x25", "\x70\x6c\x61\x63\x65\x68\157\154\x64\145\x72" => "\105\x6e\164\x65\x72\x20\x79\x6f\x75\162\40\x70\150\157\156\145\40\x6e\165\155\142\145\x72\40\x77\151\x74\x68\x20\143\x6f\165\x6e\x74\x72\171\40\x63\x6f\x64\x65\40\145\x67\56\50\x2b\61\51"), "\x23\x64\x65\146\141\x75\x6c\164\x5f\x76\141\x6c\x75\x65" => variable_get("\x6d\151\156\151\157\x72\141\156\147\145\137\163\141\x6d\x6c\x5f\x63\x75\163\x74\157\155\x65\162\x5f\x61\x64\155\151\156\x5f\160\x68\x6f\x6e\x65", ''));
        $form["\x6d\151\156\x69\x6f\162\141\x6e\x67\145\x5f\x73\141\155\x6c\x5f\163\x75\160\160\157\x72\164\x5f\161\x75\x65\x72\x79"] = array("\43\164\171\160\x65" => "\164\x65\170\164\x61\162\145\x61", "\43\x63\157\154\x73" => "\x31\x30", "\x23\162\x6f\x77\x73" => "\65", "\43\x61\x74\164\x72\x69\x62\x75\164\x65\163" => array("\163\x74\171\154\x65" => "\x77\151\144\x74\x68\x3a\61\60\x30\x25\73\142\157\162\144\x65\162\55\162\x61\x64\151\165\x73\72\x32\160\170\73\x62\141\x63\153\x67\x72\157\165\156\x64\72\43\146\x63\146\143\x66\141\x3b\142\x6f\170\x2d\x73\150\x61\144\x6f\167\72\40\151\x6e\x73\x65\164\x20\x30\x20\61\x70\170\x20\x32\160\170\40\x72\x67\142\141\50\60\54\40\60\54\x20\x30\x2c\40\60\56\61\x32\65\x29\x3b\146\x6f\x6e\164\x2d\x66\x61\x6d\151\154\171\x3a\x20\x48\145\x6c\166\145\x74\x69\x63\x61\40\x4e\x65\x75\x65\54\40\110\145\154\166\x65\164\151\x63\141\54\40\x41\162\x69\141\x6c\x2c\40\x73\141\x6e\x73\x2d\163\x65\x72\x69\146\x3b", "\x70\154\141\x63\x65\x68\157\154\x64\145\x72" => "\127\x72\x69\x74\145\40\171\157\165\x72\40\161\x75\x65\x72\171\40\x68\x65\162\145\x2e"), "\x23\162\145\163\x69\172\x61\x62\x6c\x65" => False);
        $form["\x6d\151\156\151\x6f\x72\141\x6e\x67\145\x5f\163\x61\155\x6c\137\x73\x75\160\x70\x6f\x72\164\x5f\163\165\x62\155\151\x74\137\x63\154\x69\x63\153"] = array("\x23\x74\x79\x70\x65" => "\x73\x75\142\x6d\x69\x74", "\x23\x76\x61\x6c\165\145" => t("\123\x75\x62\x6d\x69\164\x20\121\165\x65\162\171"), "\43\163\165\x62\155\151\164" => array("\125\x74\151\154\x69\164\151\x65\x73\72\72\x73\x65\x6e\x64\x5f\x73\165\160\x70\157\162\x74\x5f\161\x75\145\162\171"), "\43\141\x74\x74\x72\x69\142\x75\x74\145\163" => array("\163\x74\x79\x6c\x65" => "\142\x61\143\153\x67\x72\157\x75\156\144\x3a\40\43\x33\63\67\x61\142\67\x3b\x63\157\154\157\x72\x3a\x20\x23\146\146\146\146\146\146\73\164\x65\x78\x74\x2d\163\150\x61\x64\157\167\x3a\40\60\40\55\x31\x70\x78\x20\x31\x70\170\x20\x23\x33\63\67\141\142\x37\54\40\61\160\170\x20\60\x20\61\x70\x78\x20\43\x33\63\67\141\142\67\x2c\40\60\40\x31\x70\x78\x20\x31\160\170\40\43\x33\x33\67\141\x62\x37\x2c\40\x2d\x31\160\170\40\60\x20\61\160\170\40\43\63\x33\x37\x61\142\67\73\x62\157\170\55\x73\150\x61\144\157\x77\72\x20\60\x20\x31\x70\170\40\60\40\43\63\x33\67\141\x62\x37\73\x62\x6f\x72\x64\x65\x72\x2d\x63\x6f\154\157\162\x3a\x20\x23\x33\x33\x37\x61\x62\x37\40\43\63\x33\x37\x61\142\67\40\x23\x33\x33\x37\x61\142\x37\x3b\x64\x69\x73\x70\154\x61\171\x3a\x62\154\x6f\143\153\x3b\155\141\x72\x67\x69\156\x2d\154\x65\146\164\72\141\165\164\157\73\x6d\x61\162\147\151\156\x2d\162\151\x67\150\164\72\x61\165\164\x6f\73"));
        $form["\x6d\x69\156\x69\157\x72\x61\x6e\147\145\137\163\141\155\154\x5f\x73\x75\160\160\x6f\162\164\137\156\x6f\x74\x65"] = array("\43\155\141\x72\x6b\165\x70" => "\x3c\144\x69\x76\x3e\x49\146\40\171\157\165\40\x77\141\156\164\x20\x63\165\x73\164\157\x6d\40\x66\145\x61\x74\x75\x72\x65\x73\x20\x69\x6e\40\x74\150\x65\x20\160\154\165\147\151\156\54\40\152\x75\163\164\x20\144\162\x6f\160\x20\141\156\x20\145\x6d\141\151\x6c\x20\x74\x6f\40\74\x61\x20\150\x72\x65\146\x3d\x22\155\x61\x69\x6c\x74\157\x3a\144\162\165\160\141\x6c\163\165\x70\160\x6f\162\x74\x40\170\x65\143\x75\x72\x69\146\171\56\143\157\155\x22\x3e\144\162\x75\160\x61\154\163\x75\x70\160\x6f\x72\164\100\170\x65\x63\x75\x72\151\x66\x79\56\x63\x6f\155\x3c\57\x61\76\x3c\57\x64\151\x76\x3e");
        $form["\155\x69\156\151\x6f\x72\x61\156\147\x65\x5f\x66\141\x71"] = array("\x23\155\x61\162\x6b\165\160" => "\74\x62\x72\76\74\x64\151\x76\x20\163\x74\171\x6c\145\75\x22\x74\x65\170\164\55\x61\x6c\x69\x67\x6e\x3a\40\x63\145\x6e\x74\x65\x72\73\x22\76\74\x61\40\143\154\x61\163\163\75\x22\x6d\x6f\x5f\x73\141\155\x6c\137\142\164\156\x20\155\x6f\137\163\x61\155\154\137\142\x74\x6e\x2d\160\162\x69\x6d\x61\162\171\55\146\x61\x71\x20\155\157\137\163\x61\x6d\154\x5f\x62\x74\x6e\x2d\154\x61\162\x67\x65\40\155\x6f\137\x73\x61\x6d\154\x5f\x62\x74\x6e\x5f\146\x61\x71\x5f\x62\x75\164\x74\x6f\156\x73\x22\x20\x73\x74\171\154\145\75\x22\146\154\x6f\x61\164\72\x20\x69\x6e\x68\x65\162\x69\x74\73\x70\141\x64\144\x69\x6e\x67\x3a\x20\63\160\170\x20\66\x70\170\x20\x21\151\x6d\160\x6f\x72\164\x61\x6e\164\x3b\143\157\154\157\162\72\40\43\x34\70\141\x30\144\x63\x3b\142\157\162\144\x65\x72\72\x20\62\160\x78\x20\163\x6f\x6c\x69\144\x20\x23\x34\x38\x61\60\144\x63\73\42\40\150\x72\x65\146\75\42\150\x74\164\x70\x73\x3a\57\x2f\x66\141\x71\56\x6d\x69\x6e\151\157\x72\x61\156\x67\145\x2e\x63\x6f\155\x2f\x6b\142\57\x64\x72\x75\x70\141\154\57\163\x61\155\x6c\55\144\162\x75\160\141\x6c\x2f\42\40\x74\x61\x72\x67\x65\x74\75\x22\137\142\154\x61\156\x6b\x22\76" . "\x46\x41\121\163\x3c\57\141\76");
        $form["\155\x69\x6e\151\157\162\x61\156\x67\145\x5f\147\165\x69\x64\x65"] = array("\x23\x6d\141\162\x6b\x75\160" => "\x3c\141\x20\143\154\x61\x73\163\x3d\x22\155\x6f\x5f\x73\141\155\154\137\142\x74\x6e\40\155\x6f\137\x73\x61\155\154\137\x62\x74\156\x2d\160\162\151\155\141\x72\171\x2d\x66\141\161\x20\x6d\x6f\137\163\x61\155\154\x5f\142\x74\x6e\x2d\154\141\162\147\x65\40\x6d\x6f\x5f\163\141\x6d\154\137\142\164\x6e\x5f\146\141\161\x5f\142\165\x74\x74\x6f\156\163\42\x20\x73\x74\x79\154\x65\75\42\146\154\x6f\x61\164\x3a\40\x69\x6e\150\x65\x72\x69\164\x3b\160\x61\x64\x64\x69\156\x67\x3a\40\63\x70\x78\x20\66\x70\170\40\x21\x69\155\160\x6f\x72\164\x61\156\x74\x3b\143\157\154\157\x72\72\40\43\64\70\141\x30\x64\x63\x3b\142\x6f\x72\x64\x65\x72\x3a\x20\62\160\170\40\163\x6f\x6c\151\144\40\x23\64\70\141\60\144\143\73\x22\x20\150\x72\145\x66\75\x22\x68\x74\x74\x70\x73\x3a\x2f\57\x70\x6c\x75\x67\x69\x6e\163\56\155\151\156\x69\157\162\141\156\x67\145\x2e\143\x6f\155\57\x63\157\156\146\151\x67\x75\162\145\x2d\144\x72\165\x70\x61\x6c\55\163\x61\155\x6c\55\x73\x69\x6e\147\x6c\145\55\x73\x69\x67\156\55\x6f\156\x22\40\x74\x61\162\x67\x65\x74\75\x22\x5f\x62\x6c\141\x6e\153\42\76" . "\123\145\164\x75\x70\40\x47\165\x69\144\x65\x73\x3c\57\x61\x3e");
        $form["\x6d\151\156\x69\x6f\162\141\156\x67\x65\x5f\146\157\162\165\x6d"] = array("\x23\x6d\141\x72\x6b\165\x70" => "\74\142\76\74\x2f\142\x3e\x3c\x61\x20\143\154\x61\163\x73\75\x22\155\157\x5f\163\x61\155\x6c\137\142\x74\156\40\155\157\x5f\163\x61\155\x6c\x5f\x62\x74\156\x2d\x70\162\151\155\141\x72\x79\x2d\146\141\161\40\155\x6f\137\x73\x61\x6d\154\137\142\164\156\x2d\x6c\141\162\147\145\40\155\x6f\x5f\163\141\155\154\x5f\x62\x74\x6e\x5f\146\141\x71\137\x62\x75\x74\x74\157\156\x73\42\x20\x73\164\x79\x6c\x65\75\42\x6d\x61\162\x67\x69\x6e\55\x6c\145\x66\164\x3a\40\x31\60\160\x78\x3b\40\x66\x6c\x6f\x61\x74\x3a\40\x69\156\x68\x65\x72\151\x74\73\x70\141\144\x64\x69\x6e\147\72\x20\63\x70\x78\x20\x36\x70\170\40\41\x69\x6d\160\x6f\x72\x74\141\156\164\x3b\143\157\154\157\x72\x3a\x20\x23\x34\x38\141\60\144\143\x3b\x62\157\162\144\x65\162\x3a\x20\62\x70\170\x20\163\157\154\x69\x64\x20\x23\64\70\141\x30\x64\x63\73\x22\40\x68\162\x65\146\75\42\x68\x74\x74\x70\x73\72\x2f\x2f\x66\157\x72\165\155\x2e\155\151\x6e\151\157\x72\x61\x6e\x67\x65\56\x63\x6f\x6d\x2f\x22\x20\164\141\x72\x67\x65\x74\x3d\x22\137\142\x6c\x61\156\153\x22\76" . "\x41\163\153\x20\x71\165\145\163\164\151\x6f\x6e\x73\40\x6f\156\40\146\157\162\165\155\x3c\x2f\141\x3e\x3c\x2f\144\x69\x76\76\x3c\57\144\151\x76\x3e");
    }
    public static function Is_Restricted_Domain($U6)
    {
        $Al = variable_get("\x6d\151\x6e\151\x6f\162\x61\156\x67\x65\x5f\163\x61\155\x6c\x5f\145\156\141\x62\x6c\145\x5f\x64\157\x6d\141\151\x6e\137\x72\x65\163\164\x72\x69\143\164\x69\157\156");
        if (!($Al === FALSE)) {
            goto gE;
        }
        return FALSE;
        gE:
        $TS = explode("\100", $U6)[1];
        if (!(is_null($TS) || empty($TS))) {
            goto w4;
        }
        return FALSE;
        w4:
        $of = variable_get("\x6d\151\x6e\151\157\x72\141\156\147\x65\x5f\163\141\x6d\154\x5f\x64\x6f\155\x61\x69\x6e\x73");
        $zT = variable_get("\155\x69\156\x69\x6f\x72\x61\156\x67\x65\137\163\141\x6d\x6c\137\144\x6f\155\x61\x69\156\163\x5f\141\x72\145\x5f\167\150\151\x74\x65\137\157\x72\x5f\x62\154\141\x63\x6b");
        $of = explode("\x3b", $of);
        if ($zT === "\167\x68\151\164\145") {
            goto cV;
        }
        if ($zT == "\142\x6c\141\x63\x6b") {
            goto LU;
        }
        goto u2;
        cV:
        if (array_search($TS, $of) === FALSE) {
            goto qY;
        }
        return FALSE;
        goto yQ;
        qY:
        return TRUE;
        yQ:
        goto u2;
        LU:
        if (array_search($TS, $of) === FALSE) {
            goto bi;
        }
        return TRUE;
        goto EA;
        bi:
        return FALSE;
        EA:
        u2:
    }
    public static function send_support_query(&$form, $form_state)
    {
        $aa = trim($form["\155\151\156\151\157\x72\x61\156\x67\145\x5f\163\x61\155\x6c\137\145\x6d\141\151\154\x5f\x61\144\144\162\x65\163\x73"]["\x23\166\141\154\165\x65"]);
        $wK = trim($form["\x6d\x69\156\x69\157\x72\141\156\147\145\137\163\141\x6d\154\137\160\150\157\x6e\145\x5f\156\x75\155\x62\x65\162"]["\x23\x76\141\154\x75\x65"]);
        $PI = trim($form["\155\x69\x6e\151\x6f\x72\141\156\147\145\x5f\x73\141\x6d\154\137\x73\x75\160\x70\157\x72\x74\x5f\x71\165\x65\162\171"]["\x23\x76\x61\x6c\x75\x65"]);
        Utilities::send_query($aa, $wK, $PI);
    }
    public static function send_query($aa, $wK, $PI)
    {
        if (empty($aa) || empty($PI)) {
            goto Jz;
        }
        if (!valid_email_address($aa)) {
            goto n2;
        }
        goto hJ;
        Jz:
        drupal_set_message(t("\x54\150\145\x20\x3c\x62\x3e\x3c\165\76\105\155\141\151\154\x3c\57\165\x3e\x3c\57\142\76\40\141\156\x64\40\x3c\x62\76\x3c\165\x3e\121\165\145\x72\x79\x3c\x2f\165\x3e\x3c\57\142\76\40\146\x69\x65\x6c\x64\163\40\x61\162\x65\x20\162\145\161\165\x69\x72\145\x64\56"), "\x65\x72\x72\157\162");
        return;
        goto hJ;
        n2:
        drupal_set_message(t("\x54\x68\x65\x20\145\155\x61\x69\x6c\x20\x61\144\144\162\145\x73\x73\x20\x3c\x62\x3e\74\x69\76" . $aa . "\74\57\x69\x3e\74\x2f\x62\x3e\40\151\x73\40\156\x6f\164\40\166\141\x6c\x69\x64\56"), "\x65\162\162\x6f\x72");
        return;
        hJ:
        $EF = new MiniOrangeSamlSupport($aa, $wK, $PI);
        $yz = $EF->sendSupportQuery();
        if ($yz) {
            goto ui;
        }
        drupal_set_message(t("\105\162\x72\157\x72\40\163\145\156\x64\x69\x6e\x67\40\163\165\x70\160\157\x72\164\x20\161\x75\145\162\171"), "\x65\x72\162\x6f\162");
        goto mN;
        ui:
        drupal_set_message(t("\123\x75\x70\x70\x6f\x72\x74\40\x71\x75\145\x72\171\x20\163\x75\x63\x63\145\x73\163\x66\x75\x6c\154\171\40\163\145\156\x74"));
        mN:
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $ae = variable_get("\155\151\x6e\151\157\162\x61\156\147\145\137\x73\x61\155\x6c\137\142\x61\x73\x65\x5f\165\x72\x6c", '');
        $p6 = isset($ae) && !empty($ae) ? $ae : $base_url;
        return $p6;
    }
    public static function getIssuer()
    {
        $k3 = variable_get("\x6d\151\x6e\151\157\162\x61\x6e\147\x65\137\163\141\155\154\137\x65\156\164\151\164\171\x5f\x69\x64", '');
        $p6 = Utilities::miniorange_get_baseURL();
        $Cn = isset($k3) && !empty($k3) ? $k3 : $p6;
        return $Cn;
    }
    public static function getCertificatePath($w0 = false)
    {
        $p6 = '';
        if (!$w0) {
            goto lE;
        }
        $p6 = self::miniorange_get_baseURL() . "\x2f";
        lE:
        $kg = drupal_get_path("\155\x6f\144\x75\x6c\x65", "\x6d\x69\x6e\x69\157\x72\141\x6e\147\145\x5f\x73\141\x6d\x6c");
        return $p6 . $kg . "\57\162\145\163\x6f\165\x72\x63\x65\163\57" . self::getCertficateName();
    }
    public static function getCertficateName()
    {
        $XQ = variable_get("\x6d\151\x6e\151\157\162\141\156\147\x65\137\163\x61\155\x6c\x5f\160\165\x62\x6c\137\x63\145\x72\x74\x69\146\x69\143\x61\x74\x65", '');
        if (empty($XQ)) {
            goto az;
        }
        return MiniorangeSAMLConstants::CUSTOM_PUBLIC_CERT_NAME;
        goto RD;
        az:
        return MiniorangeSAMLConstants::DEFAULT_PUBLIC_CERT_NAME;
        RD:
    }
    public static function getKeyPath()
    {
        $kg = drupal_get_path("\155\157\144\165\154\x65", "\x6d\151\156\x69\x6f\162\x61\156\x67\x65\x5f\x73\x61\155\x6c");
        return $kg . "\57\162\x65\x73\x6f\165\x72\143\145\163\x2f" . self::getKeyName();
    }
    public static function getKeyName()
    {
        $EJ = variable_get("\x6d\x69\156\151\x6f\x72\141\x6e\147\x65\x5f\163\141\x6d\x6c\x5f\160\x72\x69\166\x61\164\145\x5f\143\145\x72\x74\x69\x66\151\143\x61\164\x65", '');
        if (empty($EJ)) {
            goto k2;
        }
        return MiniorangeSAMLConstants::CUSTOM_PRIVATE_KEY_NAME;
        goto XP;
        k2:
        return MiniorangeSAMLConstants::DEFAULT_PRIVATE_KEY_NAME;
        XP:
    }
    public static function getTabNames()
    {
        $KR = array("\x49\x64\145\x6e\x74\x69\164\171\137\120\162\157\x76\151\x64\x65\x72" => "\x6d\157\137\157\x70\164\x69\x6f\156\x73\x5f\145\156\165\x6d\x5f\x69\x64\145\x6e\x74\151\x74\171\x5f\x70\x72\157\166\151\144\x65\162", "\123\x65\162\x76\x69\143\145\137\x50\162\x6f\166\151\144\145\162" => "\x6d\x6f\x5f\157\160\164\x69\x6f\x6e\163\137\145\x6e\165\155\x5f\x73\145\x72\166\x69\x63\x65\137\160\162\x6f\x76\151\144\145\162", "\x4d\x61\x70\160\x69\156\x67" => "\155\157\x5f\x6f\160\164\x69\x6f\156\163\137\x65\156\x75\155\x5f\x6d\141\x70\160\151\156\x67", "\x53\151\x67\x6e\137\x49\156\x5f\123\x65\x74\x74\x69\156\147\163" => "\x6d\x6f\x5f\157\x70\164\151\x6f\x6e\x73\137\x65\156\x75\155\137\163\151\147\156\x5f\x69\x6e\137\x73\145\164\x74\151\156\147\163", "\x43\x75\x73\164\157\x6d\137\x43\x65\x72\164\x69\146\x69\143\141\x74\x65" => "\155\x6f\x5f\157\160\x74\x69\157\x6e\x73\x5f\145\156\165\155\137\x63\165\163\164\157\x6d\x5f\143\x65\162\x74\151\146\x69\x63\141\x74\145");
        return $KR;
    }
    public static function getVariableNames($DL)
    {
        if ($DL == "\155\157\x5f\x6f\160\x74\151\157\x6e\163\x5f\x65\x6e\x75\x6d\137\151\x64\x65\156\x74\x69\164\171\137\160\162\157\166\151\x64\145\x72") {
            goto mk;
        }
        if ($DL == "\x6d\x6f\137\x6f\160\x74\151\157\156\x73\137\145\156\x75\x6d\137\163\x65\x72\x76\151\x63\145\x5f\160\162\157\166\x69\x64\x65\162") {
            goto PS;
        }
        if ($DL == "\155\157\x5f\157\160\164\151\157\x6e\163\x5f\145\x6e\165\x6d\x5f\155\141\160\160\x69\156\x67") {
            goto f0;
        }
        if ($DL == "\x6d\x6f\x5f\x6f\x70\164\x69\157\x6e\x73\137\x65\156\165\155\x5f\163\x69\147\x6e\137\x69\x6e\x5f\x73\x65\164\164\x69\156\147\163") {
            goto MC;
        }
        if (!($DL == "\x6d\x6f\137\x6f\160\x74\151\157\156\163\x5f\145\x6e\x75\155\137\x63\165\x73\164\x6f\x6d\137\143\145\x72\x74\x69\146\x69\x63\141\x74\x65")) {
            goto k1;
        }
        $T4 = array("\103\165\x73\164\x6f\x6d\137\160\162\x69\166\x61\x74\145\137\143\145\162\x74" => "\155\x69\x6e\151\x6f\162\141\x6e\147\145\x5f\163\141\x6d\x6c\x5f\x70\162\151\x76\141\164\145\137\x63\145\x72\x74\x69\146\151\143\x61\164\145", "\x43\x75\163\x74\x6f\x6d\137\160\165\x62\154\x69\x63\x5f\143\x65\x72\164" => "\155\x69\156\x69\x6f\162\x61\156\147\145\x5f\163\141\155\154\137\160\x75\x62\x6c\137\143\145\x72\x74\x69\146\151\143\141\x74\145");
        k1:
        goto HJ;
        MC:
        $T4 = array("\x50\x72\x6f\164\145\143\164\x5f\x77\x68\157\154\x65\137\163\x69\x74\145" => "\155\x69\156\151\x6f\x72\x61\x6e\147\145\x5f\x73\x61\155\154\137\x66\x6f\162\143\145\137\x61\165\164\150", "\x41\x75\x74\157\137\162\x65\x64\151\162\x65\x63\x74" => "\x6d\x69\x6e\151\157\x72\x61\x6e\x67\145\x5f\163\141\155\154\137\141\x75\164\x6f\x5f\x72\145\144\151\162\145\143\x74\137\x74\x6f\x5f\151\x64\160", "\102\x61\143\153\144\x6f\x6f\x72\137\x4c\157\x67\x69\x6e" => "\x6d\x69\156\x69\157\162\x61\156\x67\x65\x5f\x73\141\x6d\x6c\137\145\x6e\x61\x62\x6c\x65\137\x62\x61\x63\x6b\144\x6f\157\162", "\x44\145\146\x61\165\154\x74\x5f\162\x65\x64\151\162\x65\x63\x74\137\165\162\x6c" => "\x6d\151\156\x69\x6f\162\141\156\147\x65\x5f\163\141\x6d\x6c\x5f\x64\x65\x66\x61\165\x6c\164\x5f\162\145\154\141\x79\x73\x74\141\x74\145", "\142\141\x63\153\x64\x6f\157\x72\x51\165\145\x72\171" => "\155\x69\156\x69\x6f\x72\x61\x6e\x67\x65\137\x62\141\143\x6b\x64\157\157\162\x5f\x71\165\145\162\171", "\145\156\141\x62\x6c\x65\137\144\157\155\x61\151\x6e\x5f\x72\x65\163\x74\162\151\143\164\151\157\156" => "\x6d\x69\156\x69\157\162\141\156\x67\x65\x5f\x73\x61\x6d\x6c\137\145\156\141\x62\x6c\x65\137\x64\x6f\155\141\151\x6e\x5f\x72\x65\x73\164\162\x69\x63\x74\x69\157\x6e", "\155\x69\x6e\151\x6f\x72\141\156\x67\x65\137\x73\x61\155\154\x5f\144\157\155\141\x69\x6e\163\x5f\141\x72\x65\137\x77\150\151\x74\145\x5f\157\x72\x5f\x62\154\x61\143\153" => "\x6d\x69\x6e\151\157\x72\x61\x6e\x67\145\137\x73\x61\155\x6c\137\x64\157\x6d\141\x69\156\163\x5f\x61\162\145\x5f\167\150\151\164\x65\137\157\x72\137\142\154\x61\x63\153", "\x6d\x69\x6e\x69\x6f\162\x61\x6e\147\x65\x5f\x73\141\x6d\x6c\137\x64\157\155\141\151\x6e\163" => "\x6d\151\156\151\x6f\162\x61\156\x67\145\x5f\163\141\155\154\137\x64\157\155\141\151\156\163");
        HJ:
        goto gR;
        f0:
        $T4 = array("\125\x73\x65\x72\156\141\x6d\145\x5f\141\164\x74\x72" => "\155\151\156\x69\157\x72\141\156\147\x65\x5f\163\141\155\154\x5f\x75\x73\145\x72\156\x61\155\x65\137\141\x74\x74\162\151\x62\165\164\145", "\105\155\141\151\154\x5f\141\x74\164\x72" => "\155\x69\x6e\151\157\162\141\x6e\x67\145\137\x73\x61\155\154\137\145\155\141\x69\x6c\137\141\x74\164\162\x69\x62\165\x74\x65", "\122\157\154\x65" => "\x6d\x69\x6e\x69\x6f\x72\x61\x6e\x67\145\137\163\141\x6d\154\137\151\144\x70\137\x61\164\x74\x72\61\x5f\156\141\x6d\145", "\122\157\x6c\145\137\155\x61\160\160\x69\156\147" => "\155\x69\156\x69\x6f\162\x61\156\x67\145\137\163\x61\155\x6c\137\x65\156\141\x62\154\145\x5f\x72\x6f\x6c\x65\x6d\x61\160\x70\x69\x6e\x67", "\x44\151\163\x61\x62\154\145\137\141\165\164\157\x5f\x63\162\x65\x61\x74\x65\137\165\x73\x65\162" => "\x6d\x69\x6e\151\x6f\x72\141\x6e\x67\145\137\x73\x61\155\154\137\144\151\x73\141\x62\154\x65\x5f\141\165\x74\x6f\143\x72\145\141\164\145\137\x75\163\x65\162\x73", "\104\x65\x66\141\x75\154\164\x5f\162\157\154\145" => "\x6d\x69\156\x69\x6f\162\141\156\147\x65\137\x73\141\155\154\x5f\x64\x65\x66\141\x75\154\x74\x5f\162\157\x6c\145", "\x44\x6f\137\156\157\x74\137\165\160\144\x61\164\x65\137\x75\163\145\x72\x5f\x72\157\x6c\145\x73" => "\155\151\156\151\x6f\162\x61\156\147\x65\x5f\x73\141\155\154\137\x64\151\163\x61\x62\154\x65\137\162\157\x6c\x65\x5f\x75\x70\144\141\x74\x65");
        gR:
        goto eN;
        PS:
        $T4 = array("\x49\144\145\x6e\164\151\x74\x79\137\156\x61\155\x65" => "\x6d\x69\156\151\157\162\x61\x6e\147\145\137\x73\x61\x6d\x6c\137\151\144\x70\137\x6e\141\155\x65", "\x49\x73\163\165\x65\x72" => "\155\151\x6e\x69\157\162\x61\x6e\147\145\137\x73\141\x6d\154\137\x69\x64\x70\137\x69\163\x73\165\x65\162", "\105\x6e\x61\142\154\x65\137\123\151\x67\156\x65\144\137\123\x53\x4f\x5f\x61\x6e\144\137\x53\x4c\117" => "\155\x69\x6e\x69\157\x72\141\156\147\145\x5f\x73\x61\x6d\x6c\x5f\162\145\161\165\x65\x73\164\137\x73\x69\x67\x6e\x65\144", "\116\141\x6d\145\x5f\x49\x44\137\146\x6f\162\155\x61\164" => "\x6d\151\x6e\x69\157\x72\141\156\x67\x65\137\156\x61\x6d\x65\151\x64\137\146\157\162\x6d\x61\x74", "\102\x69\x6e\x64\151\156\x67\x5f\x53\x53\117" => "\155\x69\156\x69\157\x72\141\x6e\147\x65\x5f\x73\x61\155\x6c\137\150\x74\164\160\x5f\142\151\x6e\x64\151\156\x67", "\x42\151\156\144\151\156\x67\137\123\x4c\x4f" => "\155\x69\156\x69\x6f\162\x61\156\147\x65\x5f\x73\141\x6d\154\137\x68\x74\164\x70\x5f\142\x69\156\144\151\156\147\x5f\163\154\157", "\114\x6f\147\x69\156\x5f\125\x52\x4c" => "\155\x69\x6e\151\x6f\162\x61\156\147\145\137\163\x61\155\154\137\151\144\x70\137\x6c\157\x67\151\156\137\x75\162\x6c", "\x45\x6e\141\x62\154\145\137\x6c\x6f\147\x6f\165\x74\137\x77\x69\x74\x68\157\165\x74\x5f\x72\x65\x73\160\x6f\156\x73\145" => "\x6d\151\156\x69\x6f\162\x61\156\147\x65\x5f\163\x61\155\x6c\x5f\x65\156\141\x62\x6c\x65\137\x6c\x6f\147\x6f\165\x74", "\114\x6f\147\x6f\165\x74\137\125\122\114" => "\x6d\151\156\151\157\162\141\x6e\x67\145\137\163\x61\x6d\x6c\x5f\x69\144\x70\x5f\x6c\x6f\x67\157\165\164\x5f\165\162\x6c", "\x58\65\60\71\137\143\145\x72\x74\151\x66\151\x63\141\164\x65" => "\x6d\151\156\x69\157\162\141\156\147\145\x5f\163\x61\155\154\137\x69\144\x70\137\x78\65\60\71\137\x63\145\162\164\x69\146\x69\143\141\164\x65", "\105\156\141\142\154\x65\x5f\x6c\157\147\x69\x6e\x5f\167\x69\x74\150\x5f\123\x41\115\114" => "\x6d\x69\156\151\x6f\162\x61\x6e\x67\145\137\x73\141\155\154\x5f\145\x6e\x61\142\154\x65\x5f\x6c\x6f\147\x69\156", "\123\151\x67\x6e\141\164\x75\x72\x65\137\x41\x6c\x67\x6f" => "\x73\x65\x63\x75\162\151\164\x79\x5f\163\151\x67\156\141\x74\x75\162\x65\x5f\x61\x6c\147\157\162\151\x74\x68\155");
        eN:
        goto N2;
        mk:
        $T4 = array("\x42\162\157\153\x65\162\137\x73\x65\162\166\x69\143\x65" => "\x6d\157\x5f\163\x61\155\x6c\x5f\145\156\x61\142\154\145\137\x63\x6c\157\x75\144\137\142\162\x6f\x6b\x65\162", "\x53\x50\137\x42\x61\x73\x65\x5f\x55\162\154" => "\x6d\151\x6e\x69\157\162\x61\x6e\147\145\137\163\141\155\x6c\137\142\x61\163\145\x5f\165\162\154", "\123\x50\137\x45\x6e\164\x69\164\171\x5f\111\104" => "\x6d\151\x6e\151\157\162\141\156\147\x65\x5f\x73\x61\x6d\154\x5f\x65\x6e\164\x69\164\171\137\x69\x64");
        N2:
        return $T4;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\x63\165\x72\x6c", get_loaded_extensions())) {
            goto TQ;
        }
        return 0;
        goto Rk;
        TQ:
        return 1;
        Rk:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($V6)
    {
        $Gy = '';
        $Pg = 0;
        m3:
        if (!($Pg < strlen($V6))) {
            goto Nx;
        }
        $Gy .= sprintf("\x25\60\62\x78", ord($V6[$Pg]));
        xP:
        $Pg++;
        goto m3;
        Nx:
        return $Gy;
    }
    public static function generateRandomBytes($L3, $Ch = TRUE)
    {
        return openssl_random_pseudo_bytes($L3);
    }
    public static function insertSignature(XMLSecurityKey $hG, array $KX, DOMElement $qs = NULL, DOMNode $Oz = NULL)
    {
        $ip = new XMLSecurityDSig();
        $ip->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($hG->type) {
            case XMLSecurityKey::RSA_SHA256:
                $NX = XMLSecurityDSig::SHA256;
                goto PE;
            case XMLSecurityKey::RSA_SHA384:
                $NX = XMLSecurityDSig::SHA384;
                goto PE;
            case XMLSecurityKey::RSA_SHA512:
                $NX = XMLSecurityDSig::SHA512;
                goto PE;
            default:
                $NX = XMLSecurityDSig::SHA1;
        }
        wq:
        PE:
        $ip->addReferenceList(array($qs), $NX, array("\150\164\164\160\72\57\57\167\167\167\x2e\x77\x33\56\157\x72\147\x2f\62\60\x30\x30\57\x30\71\57\x78\155\x6c\144\163\151\x67\x23\145\x6e\x76\145\x6c\157\x70\x65\144\x2d\163\x69\147\156\x61\164\x75\x72\x65", XMLSecurityDSig::EXC_C14N), array("\x69\144\137\156\141\x6d\145" => "\x49\x44", "\x6f\x76\x65\162\x77\162\x69\164\145" => FALSE));
        $ip->sign($hG);
        foreach ($KX as $db) {
            $ip->add509Cert($db, TRUE);
            TF:
        }
        CD:
        $ip->insertSignature($qs, $Oz);
    }
    public static function signXML($r2, $ZA, $I3, $Q0 = '', $dN)
    {
        $PE = array("\x74\x79\x70\x65" => "\160\x72\x69\166\141\x74\145");
        if ($dN == "\x52\123\101\137\123\110\x41\x32\65\x36") {
            goto Um;
        }
        if ($dN == "\122\x53\x41\x5f\123\110\101\x33\x38\x34") {
            goto Z2;
        }
        if ($dN == "\122\x53\101\137\123\110\101\65\61\62") {
            goto C7;
        }
        if ($dN == "\122\123\101\x5f\x53\x48\x41\61") {
            goto yi;
        }
        goto l8;
        Um:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $PE);
        goto l8;
        Z2:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $PE);
        goto l8;
        C7:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $PE);
        goto l8;
        yi:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $PE);
        l8:
        $hG->loadKey($I3, TRUE);
        $uI = file_get_contents($ZA);
        $LC = new DOMDocument();
        $LC->loadXML($r2);
        $y0 = $LC->firstChild;
        if (!empty($Q0)) {
            goto GB;
        }
        self::insertSignature($hG, array($uI), $y0);
        goto gb;
        GB:
        $g3 = $LC->getElementsByTagName($Q0)->item(0);
        self::insertSignature($hG, array($uI), $y0, $g3);
        gb:
        $Wm = $y0->ownerDocument->saveXML($y0);
        $uV = base64_encode($Wm);
        return $uV;
    }
    public static function postSAMLRequest($ae, $xH, $Cx)
    {
        echo "\x3c\150\164\155\154\76\x3c\150\145\141\144\x3e\xd\12\x20\x20\40\40\40\x20\x20\x20\x20\40\40\x20\40\40\x20\40\40\x20\x3c\x73\x63\162\151\160\x74\40\x73\162\x63\75\47\x68\164\x74\160\163\72\57\57\143\157\144\x65\x2e\x6a\x71\165\145\x72\171\56\x63\157\x6d\57\152\x71\165\x65\162\x79\55\61\56\x31\61\56\63\56\x6d\x69\156\x2e\152\163\47\76\74\x2f\x73\143\162\x69\x70\164\76\xd\xa\x20\40\40\40\40\40\x20\x20\x20\x20\x20\40\40\x20\x20\40\x20\x20\x3c\163\x63\162\151\160\164\x20\x74\171\x70\145\75\42\x74\145\170\x74\57\x6a\x61\x76\141\x73\x63\162\151\160\164\42\x3e\44\x28\x66\165\156\143\164\151\x6f\156\50\x29\173\x64\157\x63\165\x6d\x65\156\164\x2e\x66\157\162\x6d\x73\x5b\x27\163\x61\155\x6c\x2d\162\x65\161\x75\x65\x73\x74\55\x66\157\162\x6d\47\135\x2e\x73\165\x62\x6d\151\x74\50\x29\73\x7d\51\x3b\x3c\x2f\163\x63\162\151\x70\164\x3e\x3c\x2f\x68\x65\141\x64\x3e\xd\xa\40\x20\x20\40\40\40\40\x20\40\x20\40\40\x20\40\40\40\x20\40\74\142\157\144\171\x3e\120\154\x65\141\x73\x65\40\167\x61\x69\x74\x2e\56\56\74\146\x6f\x72\155\40\141\143\x74\x69\157\156\x3d\42" . $ae . "\42\40\x6d\145\164\x68\x6f\x64\x3d\42\x70\x6f\x73\x74\x22\x20\x69\144\x3d\42\163\x61\155\154\55\162\x65\x71\165\145\x73\164\x2d\146\x6f\x72\155\42\x3e\15\12\40\40\40\40\40\40\40\40\40\40\40\40\x20\40\40\x20\40\40\x20\x20\x3c\151\x6e\160\165\x74\40\x74\171\160\145\75\x22\150\151\144\144\145\156\42\x20\x6e\141\x6d\x65\75\42\123\101\115\x4c\x52\x65\161\165\145\163\x74\42\x20\166\141\x6c\165\145\75\42" . $xH . "\42\40\x2f\76\xd\12\40\x20\40\x20\40\40\40\40\40\x20\x20\40\40\x20\40\40\40\x20\40\40\x3c\151\156\160\x75\164\x20\x74\x79\160\145\x3d\42\150\x69\x64\x64\x65\156\42\x20\x6e\x61\155\x65\75\x22\x52\145\x6c\141\x79\x53\x74\141\164\x65\42\x20\x76\x61\154\165\x65\75\42" . htmlentities($Cx) . "\x22\40\x2f\x3e\74\x2f\146\157\162\x6d\x3e\15\12\x20\x20\x20\x20\40\40\x20\40\40\40\40\40\40\x20\40\40\x20\40\x20\40\x3c\57\142\157\x64\x79\76\xd\xa\40\x20\40\x20\x20\x20\40\x20\40\40\40\x20\x20\x20\x3c\x2f\150\164\155\154\76";
        exit;
    }
    public static function createAuthnRequest($gi, $k3, $Uu, $oW, $dq = "\146\x61\154\163\x65", $Hb)
    {
        $aE = "\x3c\77\x78\155\154\x20\x76\x65\x72\x73\151\157\156\x3d\x22\x31\x2e\60\x22\x20\145\156\x63\157\x64\x69\156\147\75\42\125\x54\106\55\x38\42\77\x3e" . "\x3c\x73\141\x6d\154\x70\72\x41\x75\164\x68\156\122\145\161\165\x65\163\164\x20\170\155\x6c\156\163\x3a\x73\141\155\154\160\75\42\165\x72\x6e\72\x6f\x61\x73\x69\163\72\156\x61\155\x65\x73\72\x74\143\72\123\x41\115\x4c\72\62\56\x30\x3a\160\162\x6f\164\157\143\x6f\154\x22\40\x78\155\154\156\163\x3d\x22\x75\162\x6e\x3a\157\x61\163\x69\163\x3a\x6e\x61\155\145\x73\72\164\143\x3a\123\x41\115\114\72\62\56\60\x3a\x61\163\x73\145\x72\x74\x69\157\156\x22\40\x49\x44\x3d\x22" . self::generateID() . "\x22\40\126\x65\x72\163\151\x6f\x6e\75\x22\62\x2e\60\x22\40\x49\163\x73\x75\145\x49\x6e\163\164\141\156\164\x3d\42" . self::generateTimestamp() . "\x22";
        if (!($dq == "\164\x72\x75\145")) {
            goto iC;
        }
        $aE .= "\40\106\157\162\143\145\101\165\x74\x68\x6e\75\42\164\x72\x75\145\x22";
        iC:
        $aE .= "\x20\120\x72\x6f\x74\x6f\143\x6f\154\x42\151\x6e\144\x69\156\147\75\42\x75\162\x6e\x3a\x6f\x61\163\151\163\x3a\156\x61\155\x65\x73\72\x74\143\72\123\x41\115\114\x3a\x32\x2e\x30\x3a\142\x69\156\144\151\156\147\x73\72\110\x54\x54\x50\x2d\x50\117\123\124\x22\x20\101\163\163\x65\162\164\x69\157\156\103\x6f\x6e\x73\165\155\145\x72\123\x65\162\x76\x69\143\145\x55\122\x4c\75\42" . $gi . "\x22\40\x44\x65\163\164\151\x6e\141\164\x69\157\x6e\x3d\x22" . $Uu . "\42\76\x3c\x73\141\x6d\154\72\x49\163\163\165\x65\162\x20\x78\155\x6c\156\x73\72\163\141\x6d\154\x3d\42\x75\162\156\72\157\141\163\x69\163\72\x6e\x61\155\x65\163\x3a\x74\x63\72\x53\101\115\114\72\x32\x2e\x30\72\141\x73\163\145\162\x74\151\x6f\156\42\x3e" . $k3 . "\74\x2f\x73\x61\x6d\154\72\111\x73\x73\165\x65\162\76\x3c\163\x61\x6d\154\160\x3a\116\141\155\x65\x49\104\120\x6f\154\x69\x63\x79\x20\101\154\x6c\x6f\167\103\162\x65\x61\x74\145\75\x22\164\x72\x75\x65\42\x20\106\x6f\162\155\x61\x74\x3d\42" . $oW . "\x22\xd\xa\x20\40\x20\40\40\x20\40\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\x20\x20\40\40\40\x2f\x3e\x3c\x2f\163\141\155\x6c\x70\x3a\x41\165\164\150\156\x52\x65\161\165\145\163\164\76";
        if (!(empty($Hb) || $Hb == "\110\x54\124\x50\x2d\x52\x65\x64\x69\x72\x65\x63\x74")) {
            goto wW;
        }
        $eN = gzdeflate($aE);
        $Gv = base64_encode($eN);
        $sx = urlencode($Gv);
        $aE = $sx;
        wW:
        return $aE;
    }
    public static function createSAMLRequest($gi, $k3, $Uu, $oW, $dq = "\x66\141\154\x73\145")
    {
        $aE = "\74\77\x78\155\x6c\x20\166\x65\162\x73\x69\157\156\x3d\x22\61\x2e\x30\42\x20\145\156\143\157\144\x69\156\147\75\42\125\124\106\x2d\x38\x22\x3f\x3e" . "\x3c\x73\141\x6d\154\160\72\x41\165\164\x68\x6e\x52\145\x71\x75\145\x73\x74\x20\x78\155\x6c\156\x73\72\x73\x61\x6d\154\x70\75\x22\165\162\x6e\72\157\x61\163\151\x73\72\156\x61\x6d\x65\163\x3a\x74\x63\72\123\101\115\x4c\x3a\x32\56\60\x3a\x70\162\157\x74\x6f\x63\157\x6c\42\40\111\x44\x3d\42" . self::generateID() . "\42\40\x56\145\162\x73\151\x6f\156\75\42\x32\56\x30\x22\x20\x49\x73\x73\165\145\x49\156\x73\x74\x61\x6e\x74\75\x22" . self::generateTimestamp() . "\42";
        if (!($dq == "\x74\x72\165\145")) {
            goto qv;
        }
        $aE .= "\x20\x46\157\162\x63\145\101\165\164\x68\156\x3d\x22\x74\x72\x75\145\42";
        qv:
        $aE .= "\x20\x50\x72\157\164\157\143\157\x6c\102\151\x6e\144\151\156\x67\75\42\x75\162\156\72\157\x61\x73\151\163\72\x6e\x61\155\x65\x73\72\x74\x63\x3a\x53\x41\x4d\x4c\x3a\x32\56\x30\72\x62\151\156\x64\151\x6e\x67\x73\x3a\x48\124\x54\120\55\120\x4f\x53\x54\42\x20\x41\x73\163\145\x72\164\x69\x6f\156\x43\157\x6e\x73\165\155\x65\162\x53\x65\162\166\x69\143\x65\x55\x52\x4c\x3d\42" . $gi . "\42\40\x44\x65\163\164\151\156\141\164\x69\x6f\156\x3d\42" . $Uu . "\x22\x3e\74\163\x61\155\x6c\x3a\x49\x73\x73\165\x65\x72\x20\x78\155\154\156\163\x3a\163\141\x6d\154\75\x22\165\162\x6e\x3a\157\x61\x73\151\163\72\x6e\141\155\x65\163\x3a\x74\143\72\123\x41\115\114\72\x32\56\x30\72\141\x73\x73\x65\162\164\x69\x6f\x6e\x22\x3e" . $k3 . "\74\57\163\141\155\x6c\72\x49\163\163\x75\145\162\76\x3c\x73\141\155\x6c\160\72\116\x61\155\145\x49\104\x50\157\x6c\x69\143\171\40\x41\154\154\157\x77\x43\x72\x65\x61\x74\145\75\42\164\162\165\145\42\x20\106\x6f\x72\x6d\141\164\x3d\42" . $oW . "\42\xd\xa\x20\40\x20\40\x20\40\x20\40\40\x20\40\40\x20\x20\x20\40\40\x20\40\x20\40\x20\40\40\57\76\x3c\x2f\x73\141\x6d\x6c\160\72\101\165\x74\150\156\x52\x65\161\x75\145\163\164\76";
        return $aE;
    }
    public static function mo_saml_logout()
    {
        $Wp = variable_get("\x6d\151\x6e\x69\x6f\x72\141\x6e\x67\x65\x5f\163\141\155\x6c\x5f\151\144\160\137\x6c\157\x67\157\165\x74\137\165\162\x6c", '');
        $LQ = variable_get("\155\151\156\151\x6f\x72\141\156\147\145\x5f\x73\141\x6d\154\137\150\164\164\x70\x5f\x62\x69\x6e\144\151\x6e\x67\137\x73\x6c\x6f", '');
        $dN = variable_get("\163\145\x63\165\x72\151\x74\171\137\163\151\147\x6e\141\x74\x75\162\145\137\141\154\147\157\162\151\164\x68\155");
        if (empty($Wp)) {
            goto DB;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto LH;
        }
        session_start();
        LH:
        if (isset($_SESSION["\155\157\x5f\163\141\155\x6c\x5f\x6c\x6f\x67\x6f\165\x74\137\162\145\x71\x75\145\x73\x74"])) {
            goto Qz;
        }
        if (isset($_SESSION["\x6d\157\x5f\x73\141\155\154"]["\x6c\157\x67\147\x65\144\137\x69\156\x5f\x77\x69\x74\x68\137\151\x64\x70"])) {
            goto MP;
        }
        session_destroy();
        if (!(isset($_REQUEST["\122\x65\154\x61\x79\x53\x74\x61\x74\145"]) && !empty($_REQUEST["\122\x65\154\141\x79\x53\164\141\x74\x65"]))) {
            goto GD;
        }
        drupal_goto($_REQUEST["\x52\x65\154\141\171\123\x74\141\164\x65"]);
        exit;
        GD:
        goto HD;
        Qz:
        goto HD;
        MP:
        global $base_url;
        unset($_SESSION["\155\157\x5f\163\x61\x6d\154"]);
        $S9 = $_SESSION["\x73\x65\x73\163\151\157\x6e\111\156\x64\x65\x78"];
        $cz = $_SESSION["\x4e\x61\x6d\145\111\x44"];
        $IX = variable_get("\155\151\156\151\x6f\x72\141\x6e\x67\145\137\163\x61\155\154\x5f\x65\156\141\142\x6c\x65\137\x6c\x6f\147\x6f\165\164");
        if (!($IX == 1 || $IX == true)) {
            goto Pk;
        }
        session_destroy();
        Pk:
        if (isset($_SESSION["\154\x6f\147\157\165\164"]) && !empty($_SESSION["\154\157\147\157\165\164"])) {
            goto Bh;
        }
        $Ml = Utilities::miniorange_get_baseURL();
        goto lf;
        Bh:
        $Ml = $_SESSION["\154\x6f\x67\x6f\x75\164"];
        lf:
        $DR = Utilities::getIssuer();
        $IJ = variable_get("\x6d\151\156\x69\157\x72\x61\x6e\x67\x65\137\x73\141\155\x6c\x5f\162\x65\x71\x75\145\x73\164\137\x73\151\x67\x6e\145\144");
        $Uu = $Wp;
        $eW = $Ml;
        $FN = Utilities::createLogoutRequest($cz, $S9, $DR, $Uu, $LQ);
        $kg = drupal_get_path("\155\157\x64\x75\154\x65", "\155\151\x6e\x69\x6f\x72\x61\x6e\147\x65\137\163\141\x6d\154");
        if (empty($LQ) || $LQ == "\110\x74\164\160\x52\x65\144\x69\162\x65\x63\164") {
            goto Mr;
        }
        if ($IJ) {
            goto BK;
        }
        $uV = base64_encode($FN);
        Utilities::postSAMLRequest($Wp, $uV, $eW);
        exit;
        BK:
        $I3 = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $kg . DIRECTORY_SEPARATOR . "\162\145\163\157\x75\162\143\145\x73" . DIRECTORY_SEPARATOR . Utilities::getKeyName();
        $ZA = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $kg . DIRECTORY_SEPARATOR . "\162\145\x73\157\165\x72\143\x65\163" . DIRECTORY_SEPARATOR . self::getCertficateName();
        $uV = Utilities::signXML($FN, $ZA, $I3, "\x4e\x61\x6d\145\x49\104", $dN);
        Utilities::postSAMLRequest($Wp, $uV, $eW);
        goto fq;
        Mr:
        $j6 = $Wp;
        if (strpos($Wp, "\77") !== false) {
            goto Ab;
        }
        $j6 .= "\x3f";
        goto Pq;
        Ab:
        $j6 .= "\46";
        Pq:
        if ($IJ) {
            goto ap;
        }
        $j6 .= "\123\101\x4d\x4c\x52\145\161\165\145\x73\x74\x3d" . $FN . "\46\122\145\x6c\x61\x79\x53\164\x61\x74\x65\x3d" . urlencode($eW);
        header("\x4c\157\x63\141\x74\151\x6f\156\x3a\x20" . $j6);
        exit;
        ap:
        if ($dN == "\122\123\x41\x5f\123\110\101\x32\x35\66") {
            goto Tc;
        }
        if ($dN == "\x52\x53\101\137\123\110\x41\x33\70\64") {
            goto mG;
        }
        if ($dN == "\x52\x53\x41\137\123\x48\x41\x35\61\62") {
            goto ga;
        }
        if ($dN == "\x52\123\101\x5f\x53\x48\101\x31") {
            goto A0;
        }
        goto on;
        Tc:
        $FN = "\123\101\x4d\114\x52\x65\x71\x75\x65\163\x74\x3d" . $FN . "\46\122\145\x6c\141\x79\x53\164\141\164\x65\75" . urlencode($eW) . "\x26\123\151\x67\101\x6c\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto on;
        mG:
        $FN = "\123\101\x4d\114\x52\x65\x71\165\145\x73\164\x3d" . $FN . "\x26\x52\x65\154\x61\x79\x53\x74\141\164\145\x3d" . urlencode($eW) . "\46\123\x69\147\x41\x6c\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto on;
        ga:
        $FN = "\123\101\x4d\114\x52\145\x71\165\x65\163\164\x3d" . $FN . "\46\122\145\154\141\x79\x53\x74\x61\x74\x65\75" . urlencode($eW) . "\46\123\151\x67\x41\154\147\75" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto on;
        A0:
        $FN = "\x53\101\115\x4c\x52\145\x71\x75\x65\163\x74\x3d" . $FN . "\x26\122\145\154\x61\x79\123\164\141\x74\145\75" . urlencode($eW) . "\x26\123\151\x67\x41\154\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA1);
        on:
        $PE = array("\x74\x79\160\145" => "\160\x72\x69\166\x61\164\145");
        if ($dN == "\x52\x53\x41\x5f\x53\110\101\62\65\66") {
            goto hB;
        }
        if ($dN == "\x52\123\101\137\x53\110\101\63\x38\x34") {
            goto HK;
        }
        if ($dN == "\x52\x53\101\137\x53\110\x41\x35\x31\62") {
            goto R5;
        }
        if ($dN == "\x52\x53\101\x5f\x53\x48\101\x31") {
            goto fz;
        }
        goto WD;
        hB:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $PE);
        goto WD;
        HK:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $PE);
        goto WD;
        R5:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $PE);
        goto WD;
        fz:
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $PE);
        WD:
        $XW = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $kg . DIRECTORY_SEPARATOR . "\x72\x65\163\157\165\x72\x63\x65\x73" . DIRECTORY_SEPARATOR . self::getKeyName();
        $hG->loadKey($XW, FALSE);
        $hX = new XMLSecurityDSig();
        $lv = $hG->signData($FN);
        $lv = base64_encode($lv);
        $j6 .= $FN . "\x26\x53\151\x67\x6e\x61\164\165\162\145\75" . urlencode($lv);
        header("\x4c\157\x63\x61\164\x69\157\156\x3a\x20" . $j6);
        exit;
        fq:
        HD:
        DB:
    }
    public static function createLogoutRequest($cz, $S9 = '', $k3, $Uu, $oS = "\x48\x74\x74\x70\x52\145\144\x69\162\x65\143\x74")
    {
        $aE = "\74\x3f\170\x6d\154\x20\x76\x65\162\x73\x69\x6f\156\75\x22\x31\x2e\60\42\40\x65\x6e\143\157\144\x69\x6e\x67\75\42\125\124\106\55\70\x22\x3f\x3e" . "\74\x73\141\x6d\x6c\x70\72\x4c\157\147\157\x75\164\x52\x65\161\x75\x65\163\164\40\170\x6d\x6c\156\163\x3a\x73\141\155\x6c\160\75\42\165\x72\x6e\x3a\x6f\x61\163\x69\x73\72\x6e\141\x6d\x65\163\x3a\x74\143\72\x53\101\115\x4c\x3a\x32\x2e\60\x3a\160\162\157\x74\157\143\157\x6c\x22\40\x78\x6d\154\x6e\x73\x3a\x73\x61\155\x6c\75\42\x75\162\156\x3a\x6f\141\163\151\163\x3a\156\x61\x6d\145\163\72\164\x63\x3a\123\x41\115\x4c\72\62\x2e\60\72\141\163\163\x65\x72\164\x69\157\x6e\42\x20\x49\104\x3d\x22" . self::generateID() . "\x22\40\x49\x73\x73\x75\145\111\x6e\163\164\x61\156\x74\x3d\x22" . self::generateTimestamp() . "\42\40\126\x65\x72\163\151\157\x6e\75\42\x32\x2e\x30\42\40\x44\145\163\164\x69\156\141\164\151\157\x6e\x3d\x22" . $Uu . "\42\x3e\xd\12\x9\11\x9\11\11\x9\74\163\141\155\154\x3a\x49\163\x73\165\145\x72\40\x78\x6d\154\x6e\x73\x3a\163\141\x6d\154\75\x22\x75\162\156\x3a\x6f\x61\163\x69\163\72\156\x61\x6d\x65\x73\72\164\143\x3a\x53\101\115\x4c\x3a\62\x2e\x30\72\141\163\163\x65\162\x74\x69\x6f\x6e\x22\76" . $k3 . "\74\57\163\141\155\154\x3a\111\163\163\x75\145\x72\x3e\xd\12\x9\11\11\11\11\11\x3c\163\141\155\x6c\x3a\116\x61\x6d\x65\x49\x44\x20\x78\155\154\156\163\72\x73\x61\155\x6c\x3d\x22\165\162\x6e\x3a\x6f\x61\x73\x69\163\72\156\141\x6d\x65\x73\x3a\x74\143\x3a\x53\101\x4d\x4c\72\62\56\x30\x3a\x61\163\x73\145\162\x74\151\x6f\156\x22\76" . $cz . "\74\57\163\x61\155\154\x3a\116\141\155\145\111\x44\x3e";
        if (empty($S9)) {
            goto He;
        }
        $aE .= "\74\x73\x61\155\154\x70\x3a\x53\145\163\x73\x69\157\156\x49\156\144\145\x78\76" . $S9 . "\x3c\x2f\163\x61\155\x6c\160\x3a\x53\145\x73\163\x69\157\156\x49\156\144\145\x78\x3e";
        He:
        $aE .= "\74\57\x73\141\x6d\x6c\x70\72\x4c\x6f\147\x6f\x75\x74\122\145\161\x75\145\163\164\76";
        if (!(empty($oS) || $oS == "\x48\x74\164\160\x52\145\144\151\x72\x65\x63\164")) {
            goto XU;
        }
        $eN = gzdeflate($aE);
        $Gv = base64_encode($eN);
        $sx = urlencode($Gv);
        $aE = $sx;
        XU:
        return $aE;
    }
    public static function upload_metadata($Bn, $x5 = false)
    {
        if (empty(variable_get("\155\151\x6e\151\157\x72\x61\x6e\147\145\x5f\163\141\155\154\x5f\151\144\x70\x5f\156\x61\155\145"))) {
            goto QJ;
        }
        variable_set("\x6d\x69\156\151\157\x72\141\156\x67\145\x5f\x73\x61\155\x6c\137\x69\x64\x70\x5f\x6e\141\155\x65", "\111\144\x65\156\x74\x69\x74\x79\x20\x50\162\x6f\166\x69\x64\145\162");
        QJ:
        global $base_url;
        require_once drupal_get_path("\155\157\x64\x75\x6c\x65", "\x6d\151\x6e\151\157\162\141\x6e\147\145\x5f\163\x61\155\154") . DIRECTORY_SEPARATOR . "\x69\x6e\143\154\165\144\145\163" . DIRECTORY_SEPARATOR . "\x4d\x65\164\141\144\141\x74\141\122\x65\141\x64\x65\162\x2e\x70\150\x70";
        $LC = new DOMDocument();
        $LC->loadXML($Bn);
        restore_error_handler();
        $On = $LC->firstChild;
        if (!empty($On)) {
            goto nS;
        }
        drupal_set_message(t("\x50\154\x65\x61\163\145\x20\160\162\x6f\166\x69\144\145\40\x61\40\x76\x61\154\x69\144\x20\x6d\x65\x74\x61\x64\x61\164\141\x20\146\151\154\x65\56"), "\x65\162\x72\x6f\162");
        return;
        goto Gd;
        nS:
        $r4 = new IDPMetadataReader($LC);
        $p7 = $r4->getIdentityProviders();
        if (!empty($p7)) {
            goto sH;
        }
        drupal_set_message(t("\x50\x6c\x65\141\x73\x65\40\160\162\x6f\166\x69\x64\145\x20\141\x20\166\141\x6c\151\x64\40\155\x65\164\141\144\141\x74\x61\x20\x66\151\154\145\56"), "\x65\162\x72\x6f\162");
        return;
        sH:
        foreach ($p7 as $hG => $iu) {
            $z9 = $iu->getLoginURL("\x48\x54\x54\x50\55\x52\x65\144\x69\x72\145\143\x74");
            $Wp = $iu->getLogoutURL("\x48\124\x54\120\55\x52\x65\144\x69\162\145\x63\164");
            if (!empty($z9)) {
                goto MQ;
            }
            $z9 = $iu->getLoginURL("\110\x54\x54\120\55\x50\117\x53\124");
            MQ:
            if (!empty($Wp)) {
                goto cc;
            }
            $Wp = $iu->getLogoutURL("\x48\124\124\120\55\x50\x4f\123\124");
            cc:
            $rL = $iu->getEntityID();
            $Hc = $iu->getSigningCertificate();
            $j5 = $base_url;
            if (!($x5 == true)) {
                goto b0;
            }
            variable_set("\155\151\156\x69\157\x72\x61\156\x67\x65\x5f\x73\x61\x6d\x6c\x5f\x69\x64\160\137\154\157\x67\x69\x6e\x5f\165\162\154", $z9);
            variable_set("\155\x69\156\x69\157\x72\141\156\147\145\x5f\x73\141\x6d\154\137\x69\x64\x70\137\x6c\x6f\147\x6f\165\x74\x5f\165\x72\154", $Wp);
            b0:
            variable_set("\155\151\156\151\x6f\162\x61\x6e\147\145\x5f\163\141\155\154\x5f\151\x64\160\x5f\151\163\163\165\x65\162", $rL);
            variable_set("\x6d\x69\156\151\x6f\x72\141\156\x67\x65\x5f\x73\x61\x6d\x6c\x5f\151\144\160\137\170\65\60\71\137\143\145\x72\164\x69\x66\151\143\x61\164\x65", $Hc);
            ve:
        }
        Bq:
        if (!($x5 == true)) {
            goto hU;
        }
        drupal_set_message(t("\111\144\145\x6e\x74\151\x74\171\x20\120\x72\x6f\x76\151\144\x65\x72\40\103\x6f\156\146\x69\x67\165\162\141\x74\151\x6f\156\40\163\x75\x63\143\145\x73\163\146\165\154\x6c\x79\40\163\x61\166\x65\144\56"));
        return;
        hU:
        Gd:
    }
    public static function generateTimestamp($wS = NULL)
    {
        if (!($wS === NULL)) {
            goto um;
        }
        $wS = time();
        um:
        return gmdate("\x59\x2d\155\x2d\144\134\x54\x48\x3a\x69\x3a\x73\134\132", $wS);
    }
    public static function xpQuery(DOMNode $fr, $PI)
    {
        static $tP = NULL;
        if ($fr instanceof DOMDocument) {
            goto LA;
        }
        $FU = $fr->ownerDocument;
        goto OS;
        LA:
        $FU = $fr;
        OS:
        if (!($tP === NULL || !$tP->document->isSameNode($FU))) {
            goto yV;
        }
        $tP = new DOMXPath($FU);
        $tP->registerNamespace("\x73\157\141\160\x2d\x65\x6e\x76", "\150\x74\x74\x70\x3a\x2f\x2f\163\x63\150\145\x6d\141\163\56\170\155\154\163\x6f\141\x70\56\157\x72\x67\x2f\x73\x6f\x61\160\57\145\x6e\166\x65\154\x6f\x70\x65\x2f");
        $tP->registerNamespace("\x73\141\155\x6c\x5f\x70\x72\157\x74\157\143\x6f\x6c", "\x75\162\156\x3a\157\141\163\x69\163\72\156\141\x6d\x65\163\72\164\x63\72\123\101\x4d\x4c\72\x32\x2e\60\72\160\x72\157\x74\157\143\x6f\154");
        $tP->registerNamespace("\163\x61\x6d\154\x5f\141\x73\163\x65\162\164\x69\157\156", "\x75\162\156\x3a\157\x61\163\151\x73\72\156\141\155\145\163\72\164\x63\72\123\x41\115\114\x3a\x32\x2e\60\72\141\163\163\x65\162\164\x69\157\156");
        $tP->registerNamespace("\x73\x61\x6d\154\x5f\x6d\x65\164\x61\144\x61\164\x61", "\165\x72\x6e\72\x6f\x61\x73\x69\x73\x3a\156\141\x6d\x65\163\72\164\143\72\x53\101\115\114\72\x32\x2e\x30\x3a\x6d\145\x74\141\144\x61\164\141");
        $tP->registerNamespace("\x64\x73", "\x68\164\164\160\x3a\57\x2f\167\167\x77\56\167\x33\56\x6f\162\147\x2f\x32\x30\60\x30\57\x30\x39\57\x78\x6d\154\x64\163\151\147\43");
        $tP->registerNamespace("\x78\145\156\x63", "\x68\164\164\160\x3a\x2f\x2f\x77\x77\167\56\167\x33\56\x6f\162\x67\x2f\62\x30\60\61\57\x30\64\x2f\170\155\x6c\145\156\143\x23");
        yV:
        $U8 = $tP->query($PI, $fr);
        $Gy = array();
        $Pg = 0;
        W1:
        if (!($Pg < $U8->length)) {
            goto Eg;
        }
        $Gy[$Pg] = $U8->item($Pg);
        ju:
        $Pg++;
        goto W1;
        Eg:
        return $Gy;
    }
    public static function parseNameId(DOMElement $r2)
    {
        $Gy = array("\126\x61\x6c\x75\x65" => trim($r2->textContent));
        foreach (array("\116\141\155\145\x51\x75\141\x6c\x69\146\x69\x65\162", "\x53\x50\116\141\155\x65\x51\x75\141\154\151\146\x69\x65\x72", "\x46\157\x72\155\x61\x74") as $ra) {
            if (!$r2->hasAttribute($ra)) {
                goto LM;
            }
            $Gy[$ra] = $r2->getAttribute($ra);
            LM:
            sP:
        }
        Wb:
        return $Gy;
    }
    public static function xsDateTimeToTimestamp($t7)
    {
        $oM = array();
        $FR = "\x2f\136\x28\x5c\x64\x5c\144\x5c\x64\134\144\x29\x2d\x28\134\144\134\x64\51\55\x28\x5c\144\x5c\x64\x29\x54\50\134\144\134\x64\x29\x3a\x28\134\144\x5c\x64\51\x3a\x28\x5c\x64\134\144\x29\50\x3f\72\134\x2e\x5c\x64\x2b\51\x3f\x5a\44\57\x44";
        if (!(preg_match($FR, $t7, $oM) == 0)) {
            goto L1;
        }
        echo sprintf("\x6e\166\141\x6c\x69\x64\40\123\x41\x4d\114\62\40\164\151\155\145\x73\164\141\x6d\160\40\x70\141\163\x73\x65\x64\40\x74\x6f\x20\x78\x73\x44\141\x74\145\124\151\155\145\124\x6f\x54\x69\x6d\145\x73\x74\x61\x6d\160\72\x20" . $t7);
        exit;
        L1:
        $f4 = intval($oM[1]);
        $Of = intval($oM[2]);
        $Eh = intval($oM[3]);
        $FM = intval($oM[4]);
        $sC = intval($oM[5]);
        $qE = intval($oM[6]);
        $lf = gmmktime($FM, $sC, $qE, $Of, $Eh, $f4);
        return $lf;
    }
    public static function extractStrings(DOMElement $y1, $iX, $E9)
    {
        $Gy = array();
        $fr = $y1->firstChild;
        wt:
        if (!($fr !== NULL)) {
            goto VE;
        }
        if (!($fr->namespaceURI !== $iX || $fr->localName !== $E9)) {
            goto g0;
        }
        goto su;
        g0:
        $Gy[] = trim($fr->textContent);
        su:
        $fr = $fr->nextSibling;
        goto wt;
        VE:
        return $Gy;
    }
    public static function validateElement(DOMElement $qs)
    {
        $ip = new XMLSecurityDSig();
        $ip->idKeys[] = "\x49\104";
        $aI = self::xpQuery($qs, "\56\57\x64\163\x3a\123\151\147\x6e\x61\164\x75\x72\145");
        if (count($aI) === 0) {
            goto vk;
        }
        if (count($aI) > 1) {
            goto zB;
        }
        goto ee;
        vk:
        return FALSE;
        goto ee;
        zB:
        echo sprintf("\x58\x4d\x4c\123\x65\143\72\40\155\x6f\162\145\x20\x74\x68\141\x6e\40\x6f\156\145\x20\x73\151\147\156\141\164\x75\162\x65\x20\145\154\145\155\x65\156\164\x20\x69\156\40\x72\157\157\x74\x2e");
        exit;
        ee:
        $aI = $aI[0];
        $ip->sigNode = $aI;
        $ip->canonicalizeSignedInfo();
        if ($ip->validateReference()) {
            goto ae;
        }
        echo sprintf("\x58\x4d\x4c\x73\x65\143\72\40\x64\151\147\x65\163\x74\x20\x76\141\x6c\151\144\x61\x74\151\157\156\x20\x66\x61\151\x6c\x65\144");
        exit;
        ae:
        $jx = FALSE;
        foreach ($ip->getValidatedNodes() as $f8) {
            if ($f8->isSameNode($qs)) {
                goto ar;
            }
            if ($qs->parentNode instanceof DOMDocument && $f8->isSameNode($qs->ownerDocument)) {
                goto f3;
            }
            goto DT;
            ar:
            $jx = TRUE;
            goto Px;
            goto DT;
            f3:
            $jx = TRUE;
            goto Px;
            DT:
            KY:
        }
        Px:
        if ($jx) {
            goto ot;
        }
        echo sprintf("\130\115\x4c\x53\145\143\x3a\40\x54\150\145\x20\x72\157\x6f\x74\x20\145\154\145\x6d\145\x6e\164\40\151\x73\40\x6e\157\x74\x20\x73\x69\147\156\x65\144\x2e");
        exit;
        ot:
        $KX = array();
        foreach (self::xpQuery($aI, "\x2e\57\144\163\72\x4b\145\171\x49\x6e\146\x6f\57\x64\x73\72\130\65\x30\71\104\x61\x74\x61\x2f\x64\163\x3a\x58\65\60\x39\103\x65\162\x74\x69\146\x69\x63\x61\x74\145") as $B6) {
            $gj = trim($B6->textContent);
            $gj = str_replace(array("\15", "\xa", "\11", "\x20"), '', $gj);
            $KX[] = $gj;
            cf:
        }
        n7:
        $Gy = array("\x53\151\147\156\x61\x74\165\162\x65" => $ip, "\103\x65\162\164\x69\x66\x69\143\141\164\145\x73" => $KX);
        return $Gy;
    }
    public static function validateSignature(array $Fg, XMLSecurityKey $hG)
    {
        $ip = $Fg["\x53\x69\147\156\141\x74\165\162\x65"];
        $P3 = self::xpQuery($ip->sigNode, "\x2e\x2f\144\163\72\123\x69\x67\156\x65\x64\x49\156\x66\157\57\144\163\72\123\151\147\156\x61\164\165\x72\x65\115\145\164\x68\157\144");
        if (!empty($P3)) {
            goto Hs;
        }
        echo sprintf("\115\151\x73\x73\x69\x6e\x67\x20\123\151\x67\x6e\x61\164\165\162\x65\115\x65\164\x68\x6f\x64\x20\x65\154\145\x6d\x65\156\x74");
        exit;
        Hs:
        $P3 = $P3[0];
        if ($P3->hasAttribute("\x41\154\147\x6f\x72\151\164\150\155")) {
            goto ks;
        }
        echo sprintf("\115\151\x73\x73\x69\156\x67\40\101\x6c\147\x6f\x72\x69\x74\x68\155\55\141\164\164\x72\x69\142\165\x74\145\40\x6f\x6e\x20\x53\151\x67\156\x61\164\165\162\145\115\x65\164\x68\x6f\144\40\145\154\145\x6d\145\x6e\164\56");
        exit;
        ks:
        $jK = $P3->getAttribute("\x41\x6c\147\x6f\162\151\x74\150\x6d");
        if (!($hG->type === XMLSecurityKey::RSA_SHA1 && $jK !== $hG->type)) {
            goto tr;
        }
        $hG = self::castKey($hG, $jK);
        tr:
        if ($ip->verify($hG)) {
            goto MW;
        }
        echo sprintf("\x55\156\x61\x62\154\x65\40\x74\x6f\x20\x76\141\x6c\x69\x64\x61\x74\x65\x20\123\147\156\141\x74\165\162\145");
        exit;
        MW:
    }
    public static function castKey(XMLSecurityKey $hG, $em, $NX = "\x70\x75\x62\x6c\x69\143")
    {
        if (!($hG->type === $em)) {
            goto KS;
        }
        return $hG;
        KS:
        $Zr = openssl_pkey_get_details($hG->key);
        if (!($Zr === FALSE)) {
            goto m5;
        }
        echo sprintf("\125\156\x61\142\154\145\x20\x74\x6f\40\147\x65\x74\40\x6b\145\x79\x20\x64\x65\x74\x61\151\154\163\x20\146\x72\157\x6d\x20\130\115\x4c\x53\x65\x63\x75\x72\151\x74\171\113\145\171\56");
        exit;
        m5:
        if (isset($Zr["\x6b\145\x79"])) {
            goto E8;
        }
        echo sprintf("\115\x69\x73\x73\x69\x6e\147\x20\x6b\145\x79\x20\151\156\40\x70\x75\x62\154\x69\x63\40\153\x65\171\40\144\145\x74\141\151\x6c\x73\56");
        exit;
        E8:
        $sv = new XMLSecurityKey($em, array("\x74\171\160\x65" => $NX));
        $sv->loadKey($Zr["\x6b\145\x79"]);
        return $sv;
    }
    public static function processResponse($wA, $Wh, $KD, SAML2_Response $x2, $Cx)
    {
        $ZK = $x2->getDestination();
        if (!($ZK !== NULL && $ZK !== $wA)) {
            goto ZD;
        }
        echo sprintf("\104\145\163\x74\151\x6e\141\164\151\x6f\156\40\x69\156\x20\x72\x65\x73\x70\157\156\x73\145\x20\x64\157\x65\x73\156\47\164\40\x6d\x61\x74\143\150\40\x74\150\x65\40\143\165\162\162\145\156\164\40\x55\x52\114\x2e\x20\x44\145\x73\164\x69\156\141\164\x69\157\x6e\40\151\163\x20\42" . $ZK . "\x22\x2c\40\143\165\162\x72\x65\156\x74\40\125\x52\x4c\40\x69\163\40\42" . $wA . "\x22\56");
        exit;
        ZD:
        $dz = self::checkSign($Wh, $KD, $Cx);
        return $dz;
    }
    public static function checkSign($Wh, $KD, $Cx)
    {
        $KX = $KD["\103\x65\162\x74\151\146\151\x63\x61\x74\145\x73"];
        if (!(count($KX) === 0)) {
            goto Pi;
        }
        return FALSE;
        Pi:
        $CP = self::findCertificate($Wh, $KX, $Cx);
        $tc = NULL;
        $hG = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\171\x70\x65" => "\160\x75\142\154\x69\x63"));
        $hG->loadKey($CP);
        try {
            self::validateSignature($KD, $hG);
            return TRUE;
        } catch (Exception $l3) {
            $tc = $l3;
        }
        if ($tc !== NULL) {
            goto XI;
        }
        return FALSE;
        goto eJ;
        XI:
        throw $tc;
        eJ:
    }
    private static function findCertificate(array $fW, array $KX, $Cx)
    {
        $CN = $KX[0];
        $CN = chunk_split($CN, 80);
        foreach ($KX as $GJ) {
            $Qu = strtolower(sha1(base64_decode($GJ)));
            if (!in_array($Qu, $fW, TRUE)) {
                goto bU;
            }
            $A1 = "\x2d\55\x2d\55\x2d\x42\x45\x47\111\116\40\103\105\122\x54\111\x46\x49\103\101\x54\x45\55\x2d\55\55\55\xa" . chunk_split($GJ, 64) . "\55\55\x2d\55\55\x45\x4e\104\40\103\105\122\124\x49\x46\111\x43\x41\124\105\x2d\x2d\55\x2d\55\12";
            return $A1;
            bU:
            FG:
        }
        Bn:
        if ($Cx == "\x74\x65\x73\x74\126\141\x6c\x69\x64\x61\164\145") {
            goto n5;
        }
        echo "\40\74\144\x69\166\40\163\x74\x79\154\145\75\x22\x63\157\154\157\162\72\40\43\x61\x39\64\x34\64\x32\x3b\146\157\x6e\x74\55\x73\151\172\145\72\61\x34\x70\x74\x3b\x20\155\x61\x72\x67\x69\x6e\55\x62\x6f\x74\x74\x6f\155\72\62\60\160\170\73\x22\x3e\x3c\160\76\74\x73\x74\x72\x6f\156\147\76\105\x72\x72\157\x72\72\x20\x3c\57\x73\164\162\157\156\147\x3e\x57\x65\x20\143\x6f\165\154\x64\40\x6e\157\164\x20\x73\x69\x67\156\40\171\x6f\165\40\151\156\x2e\x20\120\154\x65\x61\x73\145\40\x63\157\156\164\141\x63\x74\40\171\x6f\x75\x72\40\x41\x64\155\x69\x6e\151\x73\164\x72\141\x74\157\162\56\x3c\x2f\160\x3e\x3c\57\x64\x69\166\x3e";
        exit;
        goto N7;
        n5:
        echo "\x3c\144\x69\x76\x20\x73\164\171\154\145\75\x22\x66\157\x6e\x74\x2d\146\141\155\151\154\x79\72\103\x61\154\151\142\162\151\x3b\x70\x61\x64\144\151\x6e\147\x3a\x30\40\63\x25\73\42\76";
        echo "\x3c\x64\x69\166\x20\x73\x74\171\154\145\75\x22\x63\x6f\154\157\162\72\x20\43\x61\x39\64\64\x34\62\73\x62\x61\143\x6b\x67\162\x6f\x75\156\x64\x2d\143\x6f\x6c\x6f\x72\72\40\x23\x66\62\x64\x65\x64\145\x3b\x70\x61\x64\x64\151\156\147\72\40\x31\65\x70\x78\73\x6d\x61\162\147\x69\156\x2d\142\157\164\164\x6f\155\x3a\x20\62\x30\x70\x78\73\x74\x65\x78\164\55\x61\x6c\x69\x67\156\x3a\143\145\x6e\x74\x65\162\73\x62\x6f\162\144\145\x72\x3a\61\x70\x78\40\163\x6f\154\x69\144\x20\43\x45\66\x42\63\102\x32\73\146\x6f\156\x74\55\163\151\172\145\x3a\x31\70\160\x74\73\42\x3e\40\x45\x52\122\x4f\122\x3c\57\x64\151\166\76\15\xa\40\40\40\x20\x20\40\40\40\x20\40\x20\40\x3c\144\x69\x76\x20\x73\164\x79\154\x65\x3d\x22\x63\157\154\x6f\162\x3a\40\x23\141\71\x34\64\64\62\73\x66\157\156\164\x2d\x73\151\x7a\x65\72\61\x34\160\x74\x3b\40\x6d\141\x72\147\151\156\55\x62\157\x74\164\157\x6d\x3a\62\x30\x70\170\x3b\42\76\x3c\x70\x3e\74\x73\x74\x72\x6f\x6e\x67\76\105\x72\162\157\162\72\40\x3c\57\x73\x74\162\x6f\x6e\147\76\125\156\x61\x62\154\x65\x20\x74\157\x20\x66\151\156\x64\40\x61\x20\143\x65\x72\x74\151\x66\x69\143\141\x74\145\x20\155\x61\164\x63\x68\151\156\x67\x20\x74\150\x65\40\143\157\156\146\x69\147\165\x72\x65\x64\x20\146\151\x6e\x67\145\x72\x70\x72\x69\156\x74\56\74\x2f\x70\x3e\xd\xa\x20\40\x20\x20\x20\40\x20\x20\x20\40\40\40\x3c\160\76\x3c\x73\x74\162\157\156\x67\76\120\x6f\x73\163\151\142\x6c\x65\x20\x43\141\x75\x73\x65\x3a\x20\x3c\x2f\163\164\x72\157\156\147\76\x43\157\x6e\x74\x65\156\164\x20\157\146\x20\47\130\x2e\x35\x30\71\x20\103\x65\162\164\151\146\151\143\141\x74\x65\47\x20\146\x69\x65\x6c\x64\40\151\x6e\x20\x53\145\162\166\151\x63\145\x20\x50\162\x6f\166\151\x64\145\162\40\x53\145\x74\x74\151\x6e\x67\x73\x20\x69\163\40\x69\x6e\x63\x6f\x72\x72\x65\x63\164\74\57\x70\x3e\15\xa\x9\11\11\x3c\x70\x3e\x3c\142\x3e\x45\x78\x70\145\x63\x74\x65\x64\x20\x76\141\x6c\165\145\72\x20\x3c\x2f\x62\76" . $CN . "\x3c\57\x70\76";
        echo str_repeat("\46\x6e\142\x73\x70\73", 15);
        echo "\x3c\x2f\x64\x69\166\76\xd\12\x20\40\x20\x20\40\40\40\40\40\x20\40\x20\x20\x20\x20\x20\x3c\x64\151\166\x20\x73\x74\171\154\145\75\x22\155\141\162\x67\x69\156\x3a\63\45\73\x64\x69\163\x70\154\141\x79\x3a\x62\154\x6f\143\x6b\73\x74\145\x78\164\x2d\x61\x6c\x69\x67\x6e\72\x63\145\156\164\145\x72\73\42\x3e\xd\xa\x20\x20\40\40\40\40\40\40\40\40\40\40\x20\40\x20\40\74\146\x6f\x72\x6d\x20\x61\x63\x74\151\157\156\75\x22\x69\x6e\144\x65\x78\56\x70\150\x70\42\x3e\xd\12\x20\40\40\x20\40\x20\40\x20\x20\x20\40\40\x20\x20\x20\x20\74\144\151\166\x20\163\164\171\x6c\145\75\x22\155\x61\x72\x67\x69\x6e\x3a\x33\x25\73\144\151\x73\x70\x6c\141\x79\72\x62\154\x6f\143\153\73\164\145\170\x74\55\141\x6c\x69\147\156\x3a\x63\145\156\164\145\162\x3b\x22\x3e\74\x69\x6e\160\165\164\x20\x73\164\171\154\x65\75\x22\x70\141\144\144\151\156\x67\x3a\x31\45\x3b\x77\x69\x64\x74\150\72\x31\x30\60\x70\x78\x3b\x62\x61\143\x6b\147\162\157\x75\x6e\144\x3a\x20\x23\60\60\x39\61\x43\104\40\x6e\157\156\x65\x20\162\x65\160\x65\x61\x74\40\163\143\x72\157\x6c\x6c\x20\60\x25\x20\60\x25\73\x63\165\x72\163\x6f\x72\x3a\40\x70\x6f\151\156\164\x65\162\73\x66\157\156\x74\55\163\151\x7a\x65\72\61\x35\x70\x78\73\x62\x6f\x72\144\x65\x72\55\x77\x69\x64\164\x68\72\40\x31\x70\170\x3b\142\x6f\x72\x64\145\162\55\163\164\171\154\145\72\x20\x73\157\154\151\x64\73\x62\157\162\144\x65\162\55\162\x61\144\x69\x75\163\x3a\40\x33\160\170\x3b\x77\150\x69\164\145\55\163\x70\x61\143\x65\x3a\x20\x6e\157\x77\x72\x61\x70\73\142\x6f\x78\x2d\x73\151\x7a\x69\156\147\72\x20\142\x6f\x72\x64\x65\x72\55\142\157\170\73\142\157\x72\144\x65\x72\55\143\157\154\157\x72\x3a\40\43\x30\x30\67\x33\101\x41\73\142\x6f\170\55\163\x68\141\x64\157\167\x3a\x20\x30\160\x78\x20\x31\160\170\40\60\160\170\x20\162\147\142\141\50\x31\x32\x30\54\40\62\60\60\54\40\x32\x33\x30\x2c\x20\x30\x2e\x36\x29\40\x69\x6e\163\145\x74\x3b\x63\157\x6c\x6f\162\72\x20\x23\106\x46\106\x3b\x22\164\171\x70\x65\x3d\42\x62\165\164\164\x6f\x6e\42\40\x76\x61\x6c\x75\145\75\x22\x44\157\156\145\42\40\157\156\x43\x6c\x69\143\x6b\x3d\x22\x73\145\154\x66\x2e\x63\154\x6f\163\x65\x28\x29\73\42\76\74\x2f\144\x69\x76\76";
        exit;
        N7:
    }
    public static function validateIssuerAndAudience($ss, $Xr, $ci, $base_url, $Cx)
    {
        $k3 = current($ss->getAssertions())->getIssuer();
        $Zf = current(current($ss->getAssertions())->getValidAudiences());
        if (strcmp($ci, $k3) === 0) {
            goto dy;
        }
        if ($Cx == "\164\x65\163\164\x56\x61\154\151\144\141\164\x65") {
            goto AU;
        }
        echo "\x20\74\x64\x69\166\x20\163\x74\171\154\x65\x3d\x22\143\157\x6c\157\x72\72\x20\x23\x61\x39\x34\x34\x34\62\x3b\146\157\156\x74\55\x73\x69\172\x65\x3a\x31\64\160\x74\73\x20\155\x61\162\x67\151\156\x2d\142\157\x74\164\x6f\155\72\62\x30\x70\x78\x3b\x22\x3e\x3c\x70\76\74\x73\164\x72\x6f\x6e\x67\76\105\x72\162\x6f\x72\x3a\x20\74\x2f\x73\x74\162\x6f\x6e\147\76\x57\x65\40\143\x6f\x75\154\144\x20\x6e\157\x74\40\163\151\147\x6e\x20\171\x6f\x75\40\x69\x6e\x2e\40\120\x6c\x65\141\163\x65\40\x63\x6f\156\x74\x61\x63\164\40\x79\x6f\165\162\x20\101\x64\x6d\151\156\x69\x73\x74\162\141\164\157\162\56\74\x2f\x70\76\74\57\x64\x69\166\x3e\15\12\x20\x20\40\x20\40\40\40\40\x20\40\40\40\x20\40\40\x20\x20\x20\x3c\144\151\166\40\x73\x74\x79\154\145\x3d\x22\x6d\141\162\x67\151\x6e\x3a\63\45\x3b\x64\151\x73\x70\x6c\x61\x79\72\142\x6c\157\x63\153\73\x74\x65\x78\164\x2d\x61\x6c\151\x67\156\72\x63\145\x6e\x74\x65\162\73\42\x3e";
        exit;
        goto A_;
        AU:
        ob_end_clean();
        echo "\74\x64\151\x76\x20\x73\164\x79\154\145\75\42\146\157\156\x74\x2d\x66\141\x6d\x69\x6c\171\72\x43\141\x6c\x69\142\x72\x69\73\160\141\x64\144\151\156\147\x3a\x30\x20\63\45\x3b\x22\x3e";
        echo "\x3c\x64\151\166\x20\163\164\x79\154\145\75\42\x63\157\154\x6f\162\x3a\x20\x23\x61\71\x34\x34\64\62\x3b\142\x61\143\x6b\x67\162\157\x75\x6e\x64\55\143\157\x6c\x6f\162\x3a\40\x23\x66\x32\144\145\144\145\73\x70\x61\144\144\151\156\147\72\40\x31\65\160\x78\x3b\x6d\x61\162\147\151\x6e\55\142\x6f\x74\x74\x6f\x6d\x3a\40\x32\x30\160\x78\73\164\145\x78\x74\55\x61\x6c\151\147\156\72\143\145\x6e\164\x65\x72\73\x62\x6f\162\144\x65\x72\x3a\x31\160\x78\x20\163\157\x6c\151\144\x20\43\105\x36\102\63\x42\62\73\x66\x6f\156\164\55\163\x69\172\145\x3a\61\70\160\164\x3b\x22\x3e\x20\x45\122\122\x4f\x52\74\57\x64\151\x76\76\xd\xa\40\x20\40\x20\40\40\x20\x20\40\x20\40\x20\x20\40\x20\x20\74\144\x69\x76\x20\163\x74\x79\154\x65\75\42\x63\157\x6c\157\162\x3a\40\x23\141\x39\64\64\x34\62\73\146\x6f\x6e\164\x2d\x73\151\172\x65\72\x31\64\x70\164\73\40\155\141\x72\x67\151\x6e\55\x62\x6f\164\164\x6f\155\x3a\62\60\160\170\x3b\42\76\74\160\76\x3c\x73\164\162\157\x6e\x67\x3e\105\162\x72\x6f\x72\72\x20\74\57\x73\x74\x72\157\156\x67\76\x49\163\x73\165\x65\x72\x20\143\x61\156\x6e\157\x74\40\x62\145\x20\166\145\162\151\146\151\x65\x64\x2e\x3c\57\160\76\xd\12\40\x20\x20\x20\x20\x20\40\x20\40\40\x20\40\40\40\40\x20\74\160\76\120\x6c\x65\141\x73\x65\x20\143\157\x6e\164\x61\x63\164\40\x79\157\x75\162\x20\x61\144\155\x69\x6e\151\163\x74\x72\141\x74\x6f\162\40\x61\x6e\x64\40\162\145\x70\157\x72\x74\x20\164\150\145\x20\146\x6f\x6c\154\x6f\167\151\156\147\x20\x65\162\162\157\162\x3a\74\x2f\x70\76\xd\xa\x20\40\40\40\x20\40\40\40\40\x20\x20\40\x20\x20\40\x20\74\160\x3e\x3c\163\x74\162\x6f\x6e\x67\76\120\157\163\x73\151\x62\154\x65\40\x43\x61\165\x73\145\x3a\40\74\x2f\x73\x74\x72\157\x6e\147\x3e\x54\150\x65\x20\166\141\154\x75\x65\x20\151\x6e\x20\x27\111\x64\120\40\105\x6e\x74\151\x74\171\x20\111\104\x20\157\x72\40\111\163\x73\165\145\x72\x27\40\x66\151\x65\154\x64\40\x69\x6e\x20\123\145\x72\x76\151\143\145\x20\120\162\x6f\x76\151\x64\145\162\x20\x53\145\x74\164\151\156\147\x73\40\151\x73\40\x69\156\x63\x6f\x72\162\145\143\164\x3c\x2f\x70\x3e\15\xa\x20\x20\40\x20\x20\x20\x20\40\x20\x20\40\40\40\40\40\x20\x3c\x70\x3e\x3c\x73\x74\162\x6f\156\147\x3e\105\x78\x70\x65\143\x74\145\144\40\x45\156\x74\151\164\171\x20\111\104\x3a\x20\74\57\163\x74\x72\x6f\x6e\x67\x3e" . $k3 . "\x3c\x70\x3e\15\xa\40\40\x20\x20\x20\x20\x20\40\x20\40\40\x20\x20\x20\x20\40\74\x70\76\74\x73\164\x72\x6f\156\147\76\x45\156\x74\151\164\x79\x20\111\x44\40\x46\x6f\165\x6e\144\x3a\40\x3c\57\x73\164\162\157\156\x67\76" . $ci . "\x3c\x2f\160\x3e\15\xa\40\40\x20\40\x20\x20\40\40\x20\x20\x20\x20\40\x20\40\40\74\x2f\144\x69\x76\76\xd\xa\40\x20\40\x20\40\40\x20\x20\40\40\x20\x20\x20\x20\40\40\74\144\x69\166\x20\163\164\171\x6c\145\x3d\42\x6d\x61\162\147\151\156\x3a\63\45\73\144\151\x73\x70\154\141\x79\x3a\142\x6c\157\x63\x6b\x3b\164\x65\170\x74\x2d\141\x6c\151\x67\156\72\x63\x65\156\x74\x65\x72\73\42\76\xd\xa\40\40\x20\40\x20\40\40\x20\40\40\40\40\40\x20\40\x20\x3c\x64\151\166\x20\x73\x74\171\x6c\145\75\x22\x6d\x61\162\147\x69\156\x3a\x33\x25\73\144\151\x73\160\x6c\141\x79\72\142\154\157\143\x6b\x3b\x74\145\170\164\55\x61\x6c\x69\x67\x6e\72\143\x65\156\164\x65\162\73\42\x3e\74\x69\x6e\160\x75\164\x20\163\x74\x79\x6c\145\x3d\42\x70\x61\x64\x64\x69\x6e\147\x3a\x31\x25\73\167\x69\x64\164\x68\72\x31\x30\x30\x70\170\x3b\x62\x61\x63\x6b\147\x72\157\x75\156\144\x3a\x20\43\60\60\x39\61\103\104\40\156\157\156\x65\40\162\145\160\x65\141\x74\40\163\143\x72\157\x6c\x6c\40\60\45\x20\60\45\x3b\x63\x75\162\163\157\162\x3a\x20\x70\157\x69\x6e\x74\145\x72\73\146\157\x6e\x74\x2d\x73\x69\172\145\72\61\65\160\170\73\x62\157\162\x64\x65\162\x2d\167\151\x64\x74\x68\x3a\40\61\160\170\73\142\157\x72\x64\145\162\x2d\163\x74\x79\154\145\72\x20\x73\157\x6c\x69\x64\x3b\x62\x6f\x72\x64\145\x72\55\x72\141\x64\x69\165\163\72\40\63\x70\x78\x3b\167\x68\x69\164\145\x2d\x73\160\141\x63\x65\x3a\40\156\x6f\x77\162\x61\x70\x3b\142\x6f\x78\55\x73\x69\x7a\x69\156\x67\72\40\142\157\x72\x64\x65\x72\55\x62\157\170\x3b\x62\157\162\x64\145\x72\55\143\157\x6c\157\162\x3a\x20\43\60\60\x37\63\x41\101\x3b\142\157\170\x2d\163\x68\x61\144\157\x77\72\x20\60\160\170\40\61\160\x78\x20\60\160\170\x20\162\147\142\x61\50\61\62\x30\54\40\62\60\60\54\40\62\x33\60\x2c\x20\x30\56\66\x29\x20\x69\x6e\x73\145\164\x3b\x63\157\154\x6f\162\72\40\x23\x46\x46\106\x3b\x22\164\x79\x70\145\x3d\x22\x62\165\x74\164\157\156\42\40\166\x61\x6c\x75\145\x3d\x22\104\157\156\145\x22\40\x6f\x6e\103\x6c\x69\143\x6b\x3d\42\x73\145\154\x66\x2e\143\x6c\157\x73\145\50\x29\73\x22\x3e\x3c\x2f\x64\151\166\76";
        exit;
        A_:
        goto ca;
        dy:
        if (strcmp($Zf, $Xr) === 0) {
            goto zw;
        }
        echo sprintf("\111\156\166\141\x6c\x69\144\x20\141\x75\x64\151\x65\x6e\143\145");
        exit;
        goto IT;
        zw:
        return TRUE;
        IT:
        ca:
    }
    private static function doDecryptElement(DOMElement $X4, XMLSecurityKey $aB, array &$oI)
    {
        $la = new XMLSecEnc();
        $la->setNode($X4);
        $la->type = $X4->getAttribute("\x54\x79\x70\145");
        $Sw = $la->locateKey($X4);
        if ($Sw) {
            goto fh;
        }
        echo sprintf("\103\157\165\154\x64\x20\156\x6f\x74\x20\x6c\157\143\141\164\x65\40\153\x65\x79\40\x61\154\x67\x6f\x72\151\164\x68\155\x20\x69\x6e\40\x65\x6e\143\162\x79\160\164\145\144\40\x64\141\x74\x61\56");
        exit;
        fh:
        $Pj = $la->locateKeyInfo($Sw);
        if ($Pj) {
            goto FF;
        }
        echo sprintf("\x43\x6f\x75\x6c\144\x20\156\157\164\x20\x6c\x6f\143\x61\x74\x65\40\74\144\x73\x69\147\72\x4b\145\171\x49\x6e\146\x6f\76\40\x66\157\162\x20\164\x68\x65\x20\145\x6e\x63\x72\171\x70\164\145\144\40\153\x65\171\56");
        exit;
        FF:
        $P8 = $aB->getAlgorithm();
        if ($Pj->isEncrypted) {
            goto kU;
        }
        $Go = $Sw->getAlgorithm();
        if (!($P8 !== $Go)) {
            goto bO;
        }
        echo sprintf("\101\154\x67\157\x72\x69\x74\150\x6d\x20\x6d\151\x73\x6d\141\164\x63\x68\x20\142\x65\164\167\x65\145\x6e\40\151\156\x70\165\164\40\x6b\x65\x79\x20\x61\156\x64\x20\153\145\x79\40\x69\156\x20\x6d\x65\x73\163\x61\x67\145\x2e\40" . "\x4b\x65\171\40\167\141\163\72\x20" . var_export($P8, TRUE) . "\x3b\x20\x6d\x65\x73\x73\141\x67\x65\x20\167\141\x73\x3a\x20" . var_export($Go, TRUE));
        exit;
        bO:
        $Sw = $aB;
        goto bN;
        kU:
        $WX = $Pj->getAlgorithm();
        if (!in_array($WX, $oI, TRUE)) {
            goto h9;
        }
        echo sprintf("\101\x6c\x67\x6f\x72\x69\164\x68\155\40\144\151\x73\x61\142\154\145\144\x3a\40" . var_export($WX, TRUE));
        exit;
        h9:
        if (!($WX === XMLSecurityKey::RSA_OAEP_MGF1P && $P8 === XMLSecurityKey::RSA_1_5)) {
            goto yM;
        }
        $P8 = XMLSecurityKey::RSA_OAEP_MGF1P;
        yM:
        if (!($P8 !== $WX)) {
            goto nF;
        }
        echo sprintf("\x41\154\147\x6f\x72\x69\x74\150\x6d\x20\155\x69\163\x6d\x61\164\x63\x68\x20\x62\145\164\x77\145\x65\x6e\40\151\x6e\160\x75\164\x20\153\145\171\x20\x61\156\x64\x20\x6b\145\171\40\x75\x73\145\x64\40\164\157\40\145\x6e\x63\x72\171\x70\x74\x20" . "\x20\164\150\145\x20\x73\x79\155\x6d\x65\164\162\151\143\40\x6b\145\171\40\x66\x6f\162\x20\164\150\145\x20\155\x65\163\x73\141\x67\x65\56\x20\x4b\x65\x79\40\x77\x61\x73\72\x20" . var_export($P8, TRUE) . "\x3b\x20\x6d\x65\x73\163\x61\147\145\x20\x77\141\x73\72\40" . var_export($WX, TRUE));
        exit;
        nF:
        $v8 = $Pj->encryptedCtx;
        $Pj->key = $aB->key;
        $wN = $Sw->getSymmetricKeySize();
        if (!($wN === NULL)) {
            goto Y0;
        }
        echo sprintf("\x55\x6e\x6b\156\157\x77\156\x20\x6b\x65\171\x20\x73\x69\172\x65\x20\146\157\162\40\x65\156\x63\x72\x79\160\x74\151\157\x6e\40\141\154\147\x6f\x72\151\164\150\x6d\x3a\x20" . var_export($Sw->type, TRUE));
        exit;
        Y0:
        try {
            $hG = $v8->decryptKey($Pj);
            if (!(strlen($hG) != $wN)) {
                goto Vb;
            }
            echo sprintf("\x55\x6e\145\170\x70\145\143\x74\x65\144\x20\x6b\145\x79\40\x73\x69\x7a\x65\x20\50" . strlen($hG) * 8 . "\x62\x69\x74\163\51\x20\146\x6f\162\x20\145\156\143\162\171\160\x74\151\x6f\156\40\141\x6c\147\157\162\x69\x74\150\x6d\x3a\x20" . var_export($Sw->type, TRUE));
            exit;
            Vb:
        } catch (Exception $l3) {
            $Z0 = $v8->getCipherValue();
            $EY = openssl_pkey_get_details($Pj->key);
            $EY = sha1(serialize($EY), TRUE);
            $hG = sha1($Z0 . $EY, TRUE);
            if (strlen($hG) > $wN) {
                goto Ln;
            }
            if (strlen($hG) < $wN) {
                goto sL;
            }
            goto W5;
            Ln:
            $hG = substr($hG, 0, $wN);
            goto W5;
            sL:
            $hG = str_pad($hG, $wN);
            W5:
        }
        $Sw->loadkey($hG);
        bN:
        $em = $Sw->getAlgorithm();
        if (!in_array($em, $oI, TRUE)) {
            goto UQ;
        }
        echo sprintf("\x41\154\147\157\x72\151\x74\150\x6d\40\x64\x69\163\141\x62\x6c\x65\144\x3a\x20" . var_export($em, TRUE));
        exit;
        UQ:
        $ZZ = $la->decryptNode($Sw, FALSE);
        $r2 = "\x3c\162\157\157\164\40\170\155\x6c\156\163\x3a\x73\x61\155\x6c\75\42\x75\162\x6e\x3a\x6f\141\x73\x69\x73\x3a\156\141\155\x65\x73\72\164\x63\72\x53\x41\115\114\x3a\62\56\x30\x3a\141\x73\x73\145\x72\x74\151\157\x6e\42\x20" . "\x78\x6d\x6c\x6e\163\x3a\x78\x73\x69\x3d\x22\150\x74\x74\x70\x3a\x2f\57\167\167\x77\56\167\63\56\157\x72\x67\57\x32\x30\x30\x31\x2f\130\115\114\123\x63\150\145\x6d\x61\x2d\151\x6e\x73\x74\141\x6e\143\x65\x22\x3e" . $ZZ . "\74\57\x72\x6f\x6f\164\x3e";
        $KN = new DOMDocument();
        if (@$KN->loadXML($r2)) {
            goto E4;
        }
        throw new Exception("\106\141\x69\154\145\144\x20\164\x6f\x20\x70\141\x72\163\x65\40\144\x65\x63\162\171\160\x74\x65\x64\x20\130\x4d\x4c\56\40\115\141\x79\x62\x65\40\x74\x68\145\40\167\x72\157\x6e\147\x20\x73\150\x61\162\145\144\x6b\145\x79\40\167\x61\x73\40\x75\x73\145\x64\x3f");
        E4:
        $xs = $KN->firstChild->firstChild;
        if (!($xs === NULL)) {
            goto CM;
        }
        echo sprintf("\x4d\x69\163\163\151\x6e\147\x20\x65\156\143\162\x79\160\164\145\144\x20\x65\x6c\145\x6d\145\156\x74\x2e");
        throw new Exception("\x4d\151\163\x73\x69\x6e\147\x20\x65\156\143\162\x79\160\x74\x65\x64\40\145\154\x65\x6d\145\156\164\56");
        CM:
        if ($xs instanceof DOMElement) {
            goto gQ;
        }
        echo sprintf("\104\x65\143\x72\x79\x70\164\x65\x64\x20\145\x6c\x65\155\x65\x6e\x74\x20\x77\x61\x73\x20\x6e\157\164\x20\141\143\x74\165\x61\154\x6c\x79\x20\x61\40\104\x4f\x4d\x45\154\x65\155\145\156\164\56");
        gQ:
        return $xs;
    }
    public static function decryptElement(DOMElement $X4, XMLSecurityKey $aB, array $oI = array(), XMLSecurityKey $eR = NULL)
    {
        try {
            return self::doDecryptElement($X4, $aB, $oI);
        } catch (Exception $l3) {
            try {
                return self::doDecryptElement($X4, $eR, $oI);
            } catch (Exception $VJ) {
            }
            exit;
        }
    }
    public static function metadata_builder($HK)
    {
        $r2 = new DOMDocument();
        $ae = plugins_url() . "\x2f\x6d\x69\x6e\151\x6f\x72\141\156\147\145\x2d\x73\x61\155\x6c\55\62\x30\x2d\x73\x69\x6e\147\x6c\x65\x2d\x73\151\x67\x6e\55\x6f\x6e\x2f\163\x70\55\155\x65\164\x61\144\x61\164\x61\x2e\x78\x6d\x6c";
        $r2->load($ae);
        $c1 = new DOMXPath($r2);
        $o2 = $c1->query("\57\x2f\155\144\72\x45\156\164\x69\x74\x79\104\x65\163\x63\162\x69\x70\164\157\162\133\x40\x65\156\164\x69\164\171\111\x44\75\42\x68\x74\x74\160\72\57\x2f\x7b\160\x61\164\150\x2d\164\x6f\x2d\171\157\x75\x72\55\163\x69\x74\x65\x7d\57\167\x70\x2d\143\157\x6e\x74\x65\156\164\x2f\x70\154\165\x67\x69\x6e\163\x2f\x6d\151\x6e\151\157\x72\141\x6e\147\x65\x2d\163\x61\x6d\x6c\x2d\x32\60\x2d\x73\x69\x6e\147\154\x65\55\x73\x69\x67\x6e\55\157\156\57\42\135");
        if (!($o2->length >= 1)) {
            goto bv;
        }
        $y0 = $o2->item(0);
        $y0->setAttribute("\x65\x6e\x74\151\x74\x79\x49\104", $HK . "\57\167\x70\55\x63\157\156\164\x65\x6e\x74\57\160\x6c\165\x67\151\156\163\57\155\x69\156\x69\157\x72\x61\156\x67\145\55\163\141\155\x6c\55\x32\60\55\x73\151\156\x67\x6c\x65\x2d\x73\x69\x67\156\55\x6f\x6e\57");
        bv:
        $o2 = $c1->query("\57\57\155\x64\x3a\101\163\163\145\162\x74\151\157\x6e\103\x6f\156\163\x75\x6d\x65\162\x53\145\162\166\151\x63\145\x5b\100\x4c\x6f\143\x61\x74\151\x6f\156\75\x22\150\x74\164\x70\72\57\57\x7b\160\x61\164\150\55\x74\157\x2d\171\157\165\162\x2d\163\151\164\x65\x7d\x22\135");
        if (!($o2->length >= 1)) {
            goto kN;
        }
        $y0 = $o2->item(0);
        $y0->setAttribute("\114\x6f\x63\141\164\151\157\156", $HK . "\x2f");
        kN:
        $r2->save(plugins_url() . "\57\155\151\x6e\151\x6f\x72\x61\156\x67\145\55\x73\141\155\154\55\62\x30\x2d\x73\x69\156\147\154\x65\55\163\151\x67\156\55\157\156\x2f\x73\x70\x2d\x6d\x65\x74\141\x64\141\164\x61\x2e\170\155\x6c");
    }
    public static function get_mapped_groups($xM, $wP)
    {
        $Ng = array();
        if (empty($wP)) {
            goto CY;
        }
        $Af = array();
        $Pg = 1;
        hz:
        if (!($Pg < 10)) {
            goto Lp;
        }
        $Sc = $xM->get("\x67\162\x6f\165\160" . $Pg . "\137\x6d\x61\x70");
        $Af[$Pg] = explode("\x3b", $Sc);
        $Pg++;
        goto hz;
        Lp:
        CY:
        foreach ($wP as $O5) {
            if (empty($O5)) {
                goto C0;
            }
            $Pg = 0;
            $s2 = false;
            y3:
            if (!($Pg < 9 && !$s2)) {
                goto CA;
            }
            if (!(!empty($Af[$Pg]) && in_array($O5, $Af[$Pg]))) {
                goto QQ;
            }
            $Ng[] = $xM->get("\147\x72\x6f\x75\160" . $Pg);
            $s2 = true;
            QQ:
            $Pg++;
            goto y3;
            CA:
            C0:
            Th:
        }
        iJ:
        return array_unique($Ng);
    }
    public static function getEncryptionAlgorithm($R2)
    {
        switch ($R2) {
            case "\150\x74\x74\160\72\57\57\167\x77\x77\56\x77\x33\x2e\157\x72\x67\x2f\62\x30\60\61\57\60\64\x2f\170\x6d\154\x65\156\143\x23\x74\162\151\x70\154\145\x64\145\x73\x2d\x63\x62\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto qU;
            case "\x68\164\x74\160\x3a\x2f\x2f\x77\167\167\x2e\167\x33\56\x6f\162\147\x2f\x32\x30\60\x31\x2f\x30\x34\x2f\x78\x6d\154\x65\156\x63\43\x61\x65\x73\x31\x32\70\55\143\142\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\150\164\164\160\x3a\57\57\167\167\x77\56\167\63\56\157\x72\147\57\x32\60\x30\61\x2f\x30\64\57\x78\x6d\154\145\156\143\x23\x61\145\163\x31\x39\x32\55\x63\x62\x63":
                return XMLSecurityKey::AES192_CBC;
                goto qU;
            case "\x68\164\x74\160\72\57\x2f\x77\167\167\56\167\x33\x2e\x6f\162\x67\57\x32\x30\x30\61\57\x30\x34\x2f\x78\155\x6c\145\x6e\x63\x23\x61\x65\x73\x32\65\x36\55\143\142\x63":
                return XMLSecurityKey::AES256_CBC;
                goto qU;
            case "\150\164\x74\x70\72\57\57\167\167\x77\56\167\x33\56\x6f\162\x67\x2f\62\x30\x30\61\57\x30\64\57\170\x6d\154\x65\156\143\x23\x72\x73\x61\x2d\x31\x5f\65":
                return XMLSecurityKey::RSA_1_5;
                goto qU;
            case "\x68\164\164\160\72\x2f\57\167\167\x77\x2e\167\x33\56\x6f\162\147\57\x32\x30\60\61\57\x30\64\x2f\x78\155\x6c\145\156\143\43\162\x73\x61\55\157\x61\x65\160\x2d\155\x67\146\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto qU;
            case "\150\x74\x74\x70\72\57\x2f\x77\167\x77\x2e\x77\63\x2e\157\x72\147\x2f\62\60\60\60\x2f\x30\71\x2f\x78\x6d\154\x64\163\x69\147\x23\x64\163\x61\55\x73\x68\141\61":
                return XMLSecurityKey::DSA_SHA1;
                goto qU;
            case "\150\164\164\x70\72\57\x2f\167\x77\167\x2e\x77\63\56\157\162\147\57\x32\60\60\x30\57\60\x39\57\x78\x6d\x6c\144\163\x69\x67\43\x72\x73\x61\x2d\x73\150\x61\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto qU;
            case "\x68\x74\x74\x70\72\x2f\x2f\167\x77\x77\56\x77\63\56\157\162\147\x2f\x32\60\x30\61\x2f\60\64\57\x78\x6d\x6c\144\x73\x69\x67\55\x6d\157\x72\145\43\x72\x73\x61\x2d\x73\x68\141\62\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto qU;
            case "\150\164\164\x70\72\57\x2f\167\167\x77\56\x77\63\56\x6f\x72\x67\57\x32\60\x30\61\57\60\x34\x2f\170\x6d\x6c\144\163\151\x67\x2d\155\x6f\x72\145\43\162\163\141\55\x73\x68\141\63\x38\x34":
                return XMLSecurityKey::RSA_SHA384;
                goto qU;
            case "\x68\164\164\160\x3a\57\x2f\167\x77\x77\56\x77\x33\x2e\x6f\162\147\x2f\62\x30\x30\x31\x2f\60\x34\x2f\x78\155\x6c\144\163\x69\x67\x2d\155\x6f\x72\x65\43\x72\163\x61\55\x73\x68\x61\65\x31\62":
                return XMLSecurityKey::RSA_SHA512;
                goto qU;
            default:
                echo sprintf("\111\156\x76\141\154\x69\144\x20\x45\x6e\143\x72\171\160\x74\x69\x6f\x6e\x20\115\x65\x74\150\x6f\x64\72\40" . $R2);
                exit;
                goto qU;
        }
        T7:
        qU:
    }
    public static function sanitize_certificate($db)
    {
        $db = preg_replace("\x2f\x5b\xd\12\135\x2b\57", '', $db);
        $db = str_replace("\55", '', $db);
        $db = str_replace("\102\x45\107\x49\x4e\40\x43\105\122\124\x49\x46\x49\x43\x41\x54\x45", '', $db);
        $db = str_replace("\105\x4e\x44\x20\x43\x45\122\124\111\106\x49\103\x41\x54\105", '', $db);
        $db = str_replace("\40", '', $db);
        $db = chunk_split($db, 64, "\15\12");
        $db = "\x2d\x2d\x2d\55\55\x42\105\x47\111\x4e\40\103\105\122\x54\x49\x46\111\103\x41\x54\105\55\x2d\55\55\55\15\12" . $db . "\55\x2d\55\x2d\55\105\x4e\x44\x20\103\105\x52\124\111\x46\111\x43\101\124\x45\x2d\55\x2d\55\x2d";
        return $db;
    }
    public static function sanitize_private_key($hK)
    {
        $hK = preg_replace("\x2f\x5b\xd\xa\x5d\x2b\x2f", '', $hK);
        $hK = str_replace("\55", '', $hK);
        $hK = str_replace("\x42\105\x47\111\x4e\40\120\x52\111\x56\x41\124\x45\x20\113\105\x59", '', $hK);
        $hK = str_replace("\105\x4e\x44\40\120\x52\111\x56\x41\x54\x45\40\113\x45\x59", '', $hK);
        $hK = str_replace("\x20", '', $hK);
        $hK = chunk_split($hK, 64, "\15\12");
        $hK = "\55\x2d\x2d\55\x2d\x42\x45\107\111\x4e\x20\120\x52\111\x56\101\x54\105\x20\x4b\x45\131\55\x2d\x2d\55\x2d\15\12" . $hK . "\55\x2d\x2d\55\x2d\105\x4e\104\x20\x50\122\111\x56\101\x54\x45\40\113\105\x59\x2d\x2d\x2d\55\55";
        return $hK;
    }
    public static function desanitize_certificate($db)
    {
        $db = preg_replace("\57\133\15\xa\135\53\x2f", '', $db);
        $db = str_replace("\x2d\55\x2d\55\55\x42\105\107\111\116\40\x43\x45\x52\124\x49\x46\111\103\x41\x54\105\x2d\55\x2d\55\55", '', $db);
        $db = str_replace("\55\x2d\x2d\55\55\105\116\x44\40\x43\105\x52\x54\x49\x46\x49\x43\101\x54\105\55\x2d\x2d\55\x2d", '', $db);
        $db = str_replace("\40", '', $db);
        return $db;
    }
    public static function Print_SAML_Request($bi, $NX)
    {
        header("\103\x6f\x6e\164\x65\156\x74\55\124\x79\x70\x65\x3a\x20\164\145\x78\x74\57\x68\164\x6d\154");
        $FU = new DOMDocument();
        $FU->preserveWhiteSpace = false;
        $FU->formatOutput = true;
        $FU->loadXML($bi);
        if ($NX == "\x64\x69\x73\160\154\x61\x79\x53\101\115\114\122\145\161\x75\x65\x73\164") {
            goto GZ;
        }
        $GP = "\123\101\115\114\40\122\145\x73\x70\x6f\x6e\163\145";
        goto lv;
        GZ:
        $GP = "\x53\101\x4d\x4c\x20\122\x65\x71\165\x65\163\x74";
        lv:
        $dL = $FU->saveXML();
        $Pm = htmlentities($dL);
        $Pm = rtrim($Pm);
        $r2 = simplexml_load_string($dL);
        $ae = drupal_get_path("\155\x6f\x64\x75\x6c\x65", "\x6d\151\156\x69\x6f\x72\141\x6e\147\x65\x5f\x73\x61\155\154") . "\57\143\x73\163\x2f\163\164\x79\154\x65\137\x73\145\164\x74\151\x6e\x67\163\x2e\143\163\x73";
        echo "\74\x6c\x69\156\x6b\40\x72\145\154\75\47\163\x74\x79\154\x65\163\150\x65\x65\164\47\40\151\x64\75\47\155\x6f\x5f\x73\141\155\154\137\141\x64\155\151\x6e\137\x73\145\164\164\151\156\x67\163\x5f\x73\x74\171\x6c\x65\55\143\163\x73\x27\40\40\150\162\x65\146\75\x27" . $ae . "\x27\40\164\171\160\x65\75\47\164\145\x78\164\57\143\163\x73\x27\40\x6d\x65\144\151\x61\75\47\141\x6c\154\x27\40\57\76\xd\xa\x20\40\x20\40\x20\x20\x20\40\40\x20\x20\40\15\12\x9\x9\x9\74\x64\151\x76\x20\x63\154\x61\163\163\x3d\x22\155\x6f\x2d\144\x69\x73\x70\x6c\x61\x79\55\154\157\147\163\42\40\76\74\x70\40\164\171\x70\145\x3d\42\x74\145\x78\x74\x22\x20\x20\40\151\144\x3d\42\123\101\x4d\114\137\x74\x79\160\x65\x22\76" . $GP . "\x3c\x2f\160\76\x3c\57\x64\151\166\76\15\12\11\11\x9\xd\12\x9\11\x9\74\144\x69\166\40\164\x79\x70\x65\75\42\x74\x65\170\x74\42\40\x69\144\75\42\x53\x41\x4d\114\x5f\144\151\x73\x70\x6c\x61\x79\x22\40\143\x6c\x61\163\163\75\x22\155\x6f\55\144\151\163\x70\x6c\141\x79\55\142\154\x6f\x63\x6b\42\76\74\160\162\145\40\143\x6c\x61\163\163\75\47\142\x72\x75\x73\150\72\x20\x78\x6d\x6c\73\x27\76" . $Pm . "\74\57\x70\x72\145\76\74\57\144\151\166\x3e\xd\xa\11\11\x9\x3c\142\162\76\15\12\11\x9\x9\74\144\x69\166\x20\x73\x74\171\154\x65\x3d\x22\155\x61\162\x67\x69\x6e\x3a\63\45\73\x64\x69\163\x70\x6c\141\171\x3a\142\154\x6f\x63\x6b\73\164\x65\170\x74\x2d\x61\154\151\147\x6e\72\x63\x65\156\164\x65\x72\73\42\x3e\xd\xa\x20\x20\x20\x20\40\x20\x20\x20\40\x20\40\x20\xd\xa\11\11\11\x3c\x64\x69\166\40\x73\x74\x79\x6c\145\x3d\x22\155\x61\x72\x67\151\156\x3a\63\x25\x3b\x64\151\163\x70\154\x61\171\x3a\x62\154\157\x63\x6b\x3b\x74\x65\x78\x74\55\x61\154\151\147\156\72\x63\x65\156\164\x65\x72\73\x22\40\x3e\15\12\11\15\12\x20\x20\40\40\x20\40\x20\40\x20\x20\x20\40\x3c\57\144\151\x76\76\15\xa\11\x9\11\74\x62\165\x74\164\x6f\156\40\151\144\75\x22\x63\157\x70\x79\x22\40\x6f\156\x63\x6c\x69\143\153\75\42\143\x6f\x70\171\x44\x69\x76\x54\x6f\103\154\x69\160\142\x6f\x61\x72\144\50\x29\42\40\x20\x73\x74\171\x6c\x65\x3d\x22\160\x61\x64\144\151\x6e\x67\x3a\61\45\x3b\167\x69\144\164\150\x3a\61\60\x30\160\x78\73\x62\x61\143\x6b\147\x72\157\165\x6e\x64\72\40\43\x30\60\x39\61\x43\104\x20\156\157\156\x65\40\x72\x65\x70\145\x61\164\x20\x73\143\x72\x6f\154\x6c\40\x30\x25\40\60\x25\x3b\143\165\x72\x73\x6f\x72\x3a\40\160\157\151\x6e\x74\145\x72\x3b\146\x6f\156\164\x2d\x73\x69\x7a\145\x3a\x31\x35\x70\170\73\142\x6f\x72\x64\145\x72\x2d\x77\x69\144\164\150\x3a\40\x31\160\170\73\142\157\x72\x64\x65\162\55\x73\x74\x79\154\145\x3a\x20\163\157\x6c\151\x64\x3b\142\x6f\x72\144\x65\162\55\162\x61\144\x69\x75\x73\72\40\x33\160\x78\73\167\x68\151\x74\145\x2d\163\x70\x61\143\x65\72\x20\x6e\157\167\162\x61\x70\73\x62\157\170\x2d\163\x69\x7a\x69\156\x67\72\40\142\157\162\144\145\162\55\142\x6f\170\73\x62\157\162\x64\145\x72\x2d\x63\157\x6c\157\162\72\40\x23\x30\x30\67\x33\101\x41\x3b\142\x6f\170\x2d\x73\x68\141\144\157\x77\x3a\x20\x30\160\x78\x20\61\160\x78\x20\60\x70\170\x20\x72\x67\142\x61\50\x31\x32\x30\54\x20\62\x30\60\x2c\40\62\63\x30\x2c\40\x30\x2e\x36\x29\x20\x69\x6e\163\145\164\x3b\x63\x6f\154\157\162\72\40\x23\x46\x46\106\73\x22\40\76\x43\157\160\x79\74\x2f\x62\x75\164\164\x6f\156\x3e\xd\12\11\11\11\x26\156\x62\163\x70\x3b\xd\12\x20\40\40\40\x20\40\x20\x20\40\x20\x20\40\40\40\x20\74\x69\x6e\x70\x75\164\x20\151\144\x3d\42\144\167\x6e\x2d\x62\x74\156\x22\40\163\164\x79\154\x65\75\42\160\x61\x64\x64\x69\156\x67\x3a\x31\45\73\167\151\144\164\150\x3a\x31\60\x30\160\x78\x3b\142\141\x63\x6b\x67\162\x6f\x75\x6e\144\72\40\43\x30\60\71\61\103\104\x20\x6e\x6f\x6e\145\40\162\x65\x70\145\141\164\40\163\143\x72\x6f\x6c\x6c\40\x30\45\x20\60\45\73\143\165\x72\163\x6f\162\x3a\x20\x70\157\151\156\x74\145\x72\73\146\x6f\156\164\55\163\x69\x7a\145\x3a\x31\x35\160\x78\x3b\142\x6f\x72\144\145\162\x2d\167\151\144\x74\x68\x3a\x20\x31\160\170\73\142\157\x72\x64\145\162\55\x73\164\x79\154\145\x3a\40\163\157\x6c\151\x64\73\142\x6f\x72\144\145\162\x2d\x72\141\144\151\165\x73\x3a\x20\x33\160\170\73\167\x68\151\164\145\55\163\160\x61\143\x65\72\40\x6e\x6f\x77\x72\x61\160\x3b\142\157\170\55\163\151\x7a\151\x6e\147\72\40\x62\x6f\x72\144\x65\162\55\142\157\170\73\x62\157\x72\144\x65\x72\55\143\157\x6c\157\x72\72\40\43\x30\x30\67\x33\101\x41\x3b\x62\x6f\170\x2d\x73\150\141\x64\x6f\x77\x3a\x20\60\x70\x78\x20\x31\160\170\40\60\160\170\40\x72\147\x62\141\50\61\x32\60\x2c\40\x32\x30\60\54\40\62\63\60\54\40\x30\56\x36\x29\x20\151\156\x73\x65\x74\73\x63\x6f\154\157\162\x3a\x20\43\x46\106\x46\73\x22\164\x79\160\x65\x3d\x22\142\165\164\x74\157\x6e\x22\40\166\x61\154\165\145\75\x22\x44\x6f\x77\156\x6c\157\x61\x64\42\x20\xd\xa\40\x20\x20\40\40\x20\40\40\x20\x20\40\x20\40\40\40\x22\x3e\15\12\11\11\x9\x3c\x2f\144\151\x76\76\xd\xa\11\11\11\x3c\57\x64\x69\166\x3e\xd\12\x9\x9\11\xd\xa\11\11";
        ob_end_flush();
        echo "\xd\12\x20\x20\x20\x20\40\x20\40\40\x3c\x73\143\162\151\160\164\76\15\12\15\xa\x20\x20\x20\x20\x20\40\x20\x20\x20\x20\x20\40\x66\165\x6e\143\164\x69\x6f\156\40\143\x6f\x70\171\x44\151\166\124\x6f\103\154\x69\160\142\x6f\141\x72\144\50\51\x20\x7b\xd\12\40\40\x20\x20\x20\x20\x20\40\40\x20\40\40\40\40\x20\x20\x76\141\x72\40\x61\x75\x78\40\75\40\144\x6f\x63\x75\x6d\145\x6e\164\56\143\162\145\141\164\x65\105\154\145\155\145\156\164\50\x22\x69\156\160\x75\164\x22\51\x3b\xd\12\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\x61\x75\170\56\163\x65\x74\101\x74\164\x72\x69\x62\165\x74\x65\x28\42\x76\141\154\x75\145\42\54\x20\144\157\x63\165\155\145\156\x74\x2e\147\145\x74\105\154\x65\x6d\x65\156\164\102\171\111\x64\x28\x22\123\101\x4d\x4c\137\x64\151\x73\x70\154\x61\171\x22\51\56\x74\145\x78\x74\x43\x6f\156\164\x65\x6e\x74\x29\x3b\15\12\40\x20\x20\40\40\40\x20\40\x20\x20\x20\x20\x20\x20\40\x20\x64\x6f\143\165\155\x65\156\164\56\142\157\144\x79\56\141\x70\160\x65\156\x64\x43\150\x69\154\144\50\x61\165\x78\51\73\15\12\x20\x20\x20\x20\x20\40\40\40\40\40\40\x20\40\x20\x20\x20\x61\165\170\x2e\x73\x65\x6c\145\x63\x74\50\51\x3b\xd\12\40\x20\x20\x20\40\40\40\x20\40\40\x20\40\x20\40\40\x20\144\157\x63\165\155\145\x6e\x74\56\145\170\145\143\x43\157\155\155\141\x6e\x64\50\42\143\157\x70\171\42\51\x3b\xd\12\40\40\x20\40\40\x20\x20\x20\40\40\40\x20\40\40\x20\40\144\157\143\165\x6d\145\x6e\x74\x2e\142\x6f\x64\171\56\162\x65\155\157\166\x65\103\x68\151\x6c\144\50\141\x75\x78\x29\73\15\xa\40\x20\40\40\x20\x20\x20\40\40\x20\x20\x20\40\40\40\40\x64\157\143\x75\x6d\x65\x6e\164\x2e\x67\145\164\105\x6c\x65\x6d\145\x6e\164\x42\x79\x49\144\50\47\x63\157\160\x79\47\x29\56\x74\x65\x78\164\x43\157\x6e\x74\145\156\x74\x20\75\40\x22\103\x6f\160\x69\x65\x64\42\x3b\15\12\x20\40\40\40\x20\40\x20\40\x20\x20\40\x20\x20\x20\40\x20\144\157\x63\165\x6d\x65\156\x74\x2e\147\x65\164\105\x6c\x65\x6d\145\156\x74\102\171\x49\x64\50\47\143\157\160\x79\x27\51\x2e\163\x74\171\x6c\x65\x2e\142\141\143\x6b\147\162\x6f\x75\x6e\x64\x20\x3d\40\42\x67\x72\145\171\42\x3b\15\xa\40\40\40\x20\x20\x20\40\x20\x20\40\x20\40\40\40\40\40\x77\x69\x6e\144\157\167\56\147\145\164\x53\145\154\145\143\x74\x69\x6f\156\50\51\56\x73\145\154\x65\x63\164\101\154\x6c\103\x68\151\154\x64\162\145\156\x28\144\157\x63\165\155\145\156\164\56\x67\145\164\105\154\145\155\145\156\x74\x42\x79\x49\144\x28\x22\123\101\115\114\x5f\144\x69\x73\x70\154\x61\171\x22\51\x29\x3b\15\xa\40\x20\x20\40\40\x20\x20\40\40\x20\x20\40\175\15\xa\15\12\40\x20\x20\x20\x20\40\40\40\x20\40\40\x20\146\x75\156\x63\164\x69\157\x6e\40\144\x6f\x77\156\x6c\x6f\141\144\x28\x66\x69\x6c\145\156\x61\155\145\54\40\x74\145\x78\164\51\40\173\xd\12\40\40\x20\40\40\40\x20\40\40\40\x20\40\x20\x20\x20\x20\166\x61\x72\x20\145\x6c\145\155\145\x6e\164\40\75\40\x64\157\143\x75\155\145\x6e\164\x2e\x63\x72\x65\141\164\145\105\154\145\x6d\145\156\164\x28\47\x61\47\51\73\15\12\40\x20\40\40\x20\40\x20\x20\40\x20\x20\40\40\x20\x20\x20\145\x6c\145\155\x65\156\164\x2e\x73\145\x74\101\x74\x74\162\151\142\165\164\x65\x28\47\150\162\x65\146\x27\54\40\47\x64\141\x74\141\72\x41\x70\160\x6c\151\143\x61\x74\x69\x6f\x6e\57\157\x63\x74\145\x74\x2d\163\x74\x72\x65\x61\155\x3b\143\150\141\162\163\145\x74\x3d\x75\x74\146\x2d\x38\54\x27\x20\x2b\x20\145\x6e\143\x6f\144\145\x55\x52\x49\103\x6f\x6d\x70\157\x6e\145\156\x74\50\164\x65\170\164\51\x29\x3b\15\xa\x20\x20\40\x20\x20\40\40\40\x20\40\x20\40\40\x20\x20\40\x65\x6c\x65\x6d\145\x6e\x74\x2e\163\145\x74\x41\164\x74\x72\151\142\165\x74\145\50\47\144\157\167\x6e\x6c\157\141\x64\x27\54\40\146\x69\x6c\145\156\x61\x6d\x65\51\73\15\12\xd\12\x20\40\40\40\40\40\40\40\40\40\x20\40\40\x20\x20\x20\145\154\x65\x6d\x65\x6e\x74\56\x73\x74\171\154\145\x2e\144\x69\163\x70\x6c\141\x79\40\x3d\40\x27\156\157\x6e\145\x27\73\15\12\40\40\40\x20\x20\40\40\40\40\x20\x20\x20\x20\40\x20\40\x64\x6f\143\165\x6d\x65\156\164\x2e\x62\x6f\144\x79\x2e\x61\160\160\145\156\x64\x43\150\x69\154\x64\50\x65\x6c\145\x6d\145\156\x74\x29\73\15\xa\15\xa\x20\x20\x20\x20\x20\x20\x20\x20\40\40\40\40\40\x20\x20\x20\145\154\145\x6d\145\156\x74\x2e\143\x6c\151\x63\153\x28\51\73\15\12\15\xa\x20\x20\40\x20\40\x20\x20\x20\x20\40\40\x20\x20\40\x20\40\x64\157\x63\165\155\x65\156\x74\56\x62\157\x64\x79\56\x72\145\155\x6f\166\145\x43\150\151\x6c\x64\50\145\x6c\x65\155\145\156\164\x29\73\xd\xa\40\40\40\x20\40\40\40\x20\x20\40\x20\x20\x7d\xd\12\15\xa\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\40\x64\x6f\x63\x75\x6d\145\x6e\164\x2e\x67\145\x74\x45\154\145\155\x65\156\164\x42\171\111\x64\50\42\x64\x77\156\55\x62\x74\156\x22\51\x2e\x61\144\144\105\166\x65\x6e\x74\114\x69\x73\164\x65\156\x65\x72\x28\x22\143\x6c\x69\143\153\42\x2c\40\x66\165\156\x63\164\x69\x6f\156\x20\x28\51\40\x7b\xd\xa\xd\12\40\40\x20\x20\x20\x20\x20\40\x20\40\40\x20\40\40\x20\x20\x76\141\162\40\146\151\x6c\145\x6e\141\x6d\x65\x20\x3d\40\x64\157\x63\x75\155\145\156\164\x2e\147\x65\x74\105\x6c\x65\155\x65\156\164\x42\x79\x49\144\50\x22\x53\x41\115\x4c\x5f\164\x79\x70\x65\x22\x29\56\164\x65\x78\164\103\x6f\156\x74\x65\156\x74\40\x2b\40\x22\56\170\155\x6c\42\73\xd\xa\40\x20\40\x20\x20\40\x20\40\x20\40\x20\40\x20\x20\x20\40\166\x61\x72\x20\156\157\x64\145\40\x3d\x20\x64\x6f\143\165\x6d\x65\156\x74\x2e\x67\145\164\105\154\145\155\145\156\x74\x42\171\x49\144\x28\x22\x53\x41\x4d\x4c\137\144\151\x73\x70\154\141\171\x22\51\73\xd\12\x20\x20\x20\x20\x20\x20\x20\40\40\x20\x20\40\40\x20\40\x20\x68\164\155\154\x43\157\x6e\164\145\156\164\x20\x3d\40\x6e\157\144\x65\x2e\151\156\156\145\162\x48\124\x4d\114\x3b\xd\12\x20\40\x20\40\x20\40\x20\40\x20\40\x20\x20\x20\40\x20\40\164\x65\x78\x74\40\75\x20\156\157\144\145\56\x74\145\x78\x74\x43\157\x6e\164\145\x6e\x74\73\xd\xa\x20\x20\x20\40\40\40\x20\40\40\40\40\40\40\40\40\40\143\157\156\x73\157\154\x65\56\154\157\x67\50\x74\x65\170\x74\51\73\15\xa\40\x20\x20\x20\x20\x20\40\40\x20\40\x20\x20\x20\x20\40\x20\144\x6f\167\x6e\x6c\157\x61\144\50\146\151\154\145\156\x61\x6d\x65\54\40\164\x65\170\x74\x29\73\15\12\40\x20\x20\40\x20\x20\x20\40\x20\x20\40\40\175\54\40\x66\141\154\x73\145\x29\x3b\15\12\xd\12\40\x20\x20\40\40\40\x20\40\74\x2f\163\143\162\151\160\x74\76\15\xa\40\x20\40\40\x20\x20\40\x20";
        exit;
    }
    public static function drupal_is_cli()
    {
        if (!isset($_SERVER["\123\x45\x52\x56\105\122\x5f\123\x4f\106\124\127\x41\122\x45"]) && (php_sapi_name() == "\x63\x6c\151" || is_numeric($_SERVER["\141\x72\147\143"]) && $_SERVER["\x61\162\147\x63"] > 0)) {
            goto Wd;
        }
        return FALSE;
        goto nC;
        Wd:
        return TRUE;
        nC:
    }
}
