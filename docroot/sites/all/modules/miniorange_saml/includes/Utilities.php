<?php


class Utilities
{
    public static function show_idp_list()
    {
        $qX = db_query("\x53\105\x4c\x45\103\124\x20\x6d\x6f\x5f\x69\144\160\x5f\x6e\x61\x6d\x65\40\x46\x52\117\115\40\155\x69\x6e\151\157\162\x61\x6e\x67\145\137\163\141\x6d\154\x5f\x69\144\160\137\154\x69\x73\x74");
        $EV = $qX->fetchAll();
        $in = json_decode(json_encode($EV), True);
        $x7 = count($in);
        $Pr = array();
        $q2 = 0;
        Wy:
        if (!($q2 < $x7)) {
            goto eq;
        }
        $Pr[$q2] = $in[$q2]["\155\x6f\137\x69\144\160\x5f\x6e\x61\x6d\x65"];
        Wk:
        $q2++;
        goto Wy;
        eq:
        return $Pr;
    }
    public static function show_attr_list_from_idp(&$form, $form_state)
    {
        $sg = variable_get("\155\x69\156\x69\x6f\162\x61\x6e\x67\x65\x5f\x73\x61\155\154\137\x61\x74\164\x72\x73\x5f\154\x69\163\164");
        $kH = variable_get("\x6d\151\156\151\157\162\141\x6e\x67\145\137\x73\x61\x6d\x6c\137\145\155\141\151\154\x5f\x61\x74\164\162\151\x62\x75\164\145", "\116\x61\x6d\145\x49\104");
        $vr = variable_get("\155\x69\x6e\x69\x6f\x72\x61\156\x67\x65\137\x73\x61\x6d\154\x5f\145\x6d\141\151\x6c\x5f\151\144\x5f\166\141\154\x75\x65");
        if (!empty($vr)) {
            goto c5;
        }
        Utilities::AddsupportTab($form, $form_state);
        return;
        c5:
        $form["\x6d\x69\x6e\x69\x6f\x72\x61\156\x67\145\137\151\144\160\x5f\x67\x75\151\144\145\x5f\154\151\x6e\153"] = array("\x23\x6d\141\162\153\165\160" => "\74\x64\151\166\40\x63\x6c\141\x73\163\x3d\x22\155\x6f\x5f\163\x61\x6d\x6c\x5f\164\141\142\x6c\x65\x5f\x6c\x61\x79\x6f\x75\x74\x20\x6d\157\137\163\x61\155\x6c\137\x74\141\x62\x6c\145\137\154\x61\171\157\165\x74\x5f\163\x75\x70\160\x6f\162\164\x5f\61\x22\76");
        $form["\x6d\151\x6e\151\x6f\162\x61\156\x67\x65\137\163\141\155\154\x5f\x61\164\x74\x72\x5f\x68\x65\x61\x64\x65\x72"] = array("\43\x6d\141\x72\153\x75\160" => "\74\144\151\166\40\x73\164\171\154\145\x3d\42\146\x6f\x6e\x74\55\x73\x69\172\145\72\x20\x31\56\x33\145\x6d\73\146\157\156\164\x2d\167\x65\x69\147\x68\x74\72\40\x36\60\x30\x3b\x66\x6f\x6e\164\55\x66\x61\155\151\154\171\72\x20\x73\x61\156\163\55\x73\145\162\151\146\73\42\76\101\x74\164\162\151\142\165\164\145\x73\40\x72\145\143\x65\151\166\x65\144\x20\146\x72\x6f\155\x20\x74\x68\x65\40\x49\x64\145\x6e\x74\x69\164\171\40\x50\x72\x6f\x76\151\x64\145\x72\72\x3c\57\144\151\166\76\x3c\142\x72\76");
        $form["\x6d\157\137\x73\141\155\x6c\137\x61\164\x74\162\163\137\154\151\163\164\x5f\x69\x64\160"] = array("\x23\155\x61\162\x6b\x75\160" => "\74\x64\151\x76\x20\143\x6c\141\x73\163\75\x22\164\141\x62\154\x65\x2d\x72\145\163\160\157\x6e\163\x69\x76\145\x20\x6d\157\x5f\x67\x75\x69\x64\145\x5f\164\145\x78\x74\55\x63\x65\x6e\164\x65\162\42\x20\x73\x74\x79\154\145\75\42\146\157\156\164\55\146\x61\155\151\154\x79\x3a\40\163\x61\x6e\163\x2d\163\145\x72\151\146\73\146\157\156\164\x2d\x73\x69\172\x65\x3a\40\61\x32\160\x78\x3b\x22\76\x20\x20\40\x20\40\40\40\40\40\40\xd\xa\40\x20\40\x20\x20\40\40\40\40\x20\x20\40\x20\x20\40\x20\x3c\164\141\x62\154\145\x20\143\154\141\163\x73\x3d\x22\x6d\x6f\x5f\147\165\151\x64\x65\x5f\x74\x61\142\x6c\x65\40\155\157\137\147\165\x69\x64\145\x5f\x74\x61\x62\154\145\x2d\163\164\162\151\160\x65\144\x20\x6d\x6f\137\x67\x75\151\144\145\137\164\x61\x62\x6c\145\55\x62\157\x72\x64\x65\x72\x65\144\x22\x20\x73\164\171\x6c\x65\75\x22\x62\x6f\x72\x64\x65\162\x3a\40\x31\160\170\x20\163\x6f\154\x69\144\40\43\144\x64\144\x3b\155\x61\x78\x2d\x77\x69\144\x74\x68\72\x20\61\x30\x30\x25\73\x62\157\162\x64\145\x72\55\x63\157\x6c\x6c\141\x70\x73\145\72\40\143\x6f\154\154\x61\x70\x73\x65\x3b\42\x3e\15\12\40\x20\x20\40\40\x20\x20\40\40\x20\x20\x20\40\40\x20\40\40\40\40\40\x3c\x74\150\145\x61\144\x3e\xd\12\40\40\40\40\x20\x20\40\x20\x20\x20\x20\40\40\x20\x20\x20\x20\x20\40\x20\40\x20\40\x20\x3c\164\162\76\15\xa\x20\x20\x20\40\40\40\40\x20\x20\40\x20\40\x20\40\40\40\40\40\x20\40\40\40\40\40\x20\40\x20\x20\74\x74\x68\40\x63\154\x61\163\163\x3d\x22\x6d\x6f\137\147\165\x69\x64\145\137\x74\x65\x78\164\x2d\143\145\156\x74\145\x72\40\x6d\157\x5f\164\144\x5f\x76\141\x6c\x75\x65\x73\42\x3e\x41\124\124\x52\111\x42\125\x54\x45\40\x4e\101\x4d\105\x3c\x2f\164\x68\x3e\xd\12\40\40\40\40\40\40\x20\x20\x20\x20\x20\x20\40\40\x20\x20\40\x20\40\40\40\x20\x20\40\x20\x20\40\x20\x3c\164\150\40\143\x6c\x61\x73\163\75\x22\x6d\157\137\x67\165\151\x64\145\x5f\x74\x65\x78\x74\55\x63\x65\x6e\x74\145\162\40\155\157\x5f\164\144\137\166\141\x6c\165\x65\163\x22\76\x41\124\124\122\x49\102\125\124\105\40\126\x41\114\x55\105\x3c\57\164\x68\x3e\x20\x20\x20\x20\40\x20\x20\x20\40\40\x20\40\x20\40\x20\x20\x20\x20\x20\40\40\x20\x20\40\40\15\12\x20\x20\40\40\40\40\40\40\x20\40\40\40\x20\x20\40\40\40\40\x20\40\x20\40\40\40\x3c\57\x74\162\x3e\15\xa\40\x20\40\x20\40\x20\40\40\40\x20\x20\40\40\40\40\40\40\x20\40\x20\74\x2f\x74\150\145\141\144\x3e");
        $vk = '';
        if (!(isset($sg) && !empty($sg))) {
            goto Yz;
        }
        foreach ($sg as $bI => $LM) {
            $vk .= "\x3c\x74\162\x3e\x3c\164\x64\x3e" . $bI . "\74\57\164\x64\76\74\164\144\76" . $LM[0] . "\74\57\164\x64\x3e\74\x2f\x74\x72\x3e";
            FG:
        }
        rT:
        Yz:
        $form["\x6d\151\156\151\x6f\162\x61\156\x67\145\x5f\163\141\155\154\x5f\147\x75\x69\x64\x65\x5f\164\x61\x62\154\145\137\x6c\x69\163\164"] = array("\x23\x6d\141\162\x6b\165\x70" => "\x3c\164\142\x6f\x64\x79\40\163\164\x79\154\x65\x3d\x22\146\x6f\x6e\x74\x2d\167\x65\151\x67\150\164\x3a\142\157\x6c\144\x3b\x66\157\156\x74\55\x73\151\172\x65\72\40\61\x32\160\170\x3b\x63\x6f\154\x6f\162\x3a\147\x72\x61\171\x3b\x22\76\x3c\164\162\76\74\x74\x64\x3e" . $kH . "\74\57\x74\x64\x3e\x3c\x74\x64\x3e" . $vr . "\x3c\57\x74\x64\76\x3c\57\164\x72\76" . $vk . "\x3c\x2f\164\x62\157\x64\x79\76\74\57\x74\141\x62\x6c\x65\76");
        $form["\x6d\x69\156\151\157\x72\141\x6e\147\x65\137\163\x61\155\x6c\x5f\143\154\x65\141\162\137\141\164\x74\162\137\x6c\x69\163\164"] = array("\43\x74\x79\x70\145" => "\x73\x75\x62\x6d\x69\x74", "\43\x76\x61\154\165\145" => t("\x43\x6c\x65\141\x72\x20\x41\x74\x74\x72\x69\x62\x75\x74\x65\40\114\151\163\164"), "\43\x73\165\x62\155\151\164" => array("\143\x6c\x65\141\162\137\x61\x74\x74\162\x5f\154\x69\163\x74"), "\x23\141\164\164\x72\x69\142\x75\164\145\163" => array("\x73\164\171\x6c\x65" => "\x62\157\162\x64\x65\162\x2d\x72\141\x64\x69\165\163\72\64\160\170\x3b\x62\x61\143\153\147\x72\x6f\x75\156\144\x3a\x20\x23\63\63\x37\x61\142\67\x3b\x63\x6f\x6c\x6f\162\x3a\x20\43\146\146\x66\x66\x66\x66\73\x74\145\170\x74\55\x73\150\x61\x64\x6f\x77\x3a\x20\x30\x20\55\61\x70\170\x20\61\160\170\x20\x23\63\63\67\x61\x62\67\54\x20\x31\160\x78\x20\x30\40\61\x70\x78\40\43\x33\x33\67\x61\x62\67\x2c\x20\x30\x20\61\x70\x78\40\x31\160\x78\40\x23\63\x33\67\141\x62\67\54\40\x2d\x31\160\170\40\x30\40\x31\160\x78\40\x23\x33\63\67\x61\x62\x37\x3b\15\12\x20\x20\x20\40\40\40\x20\40\40\x20\40\x20\x20\x20\x20\x20\x62\x6f\x78\x2d\163\150\141\x64\157\167\72\x20\60\x20\x32\x70\x78\40\x30\40\43\60\60\x36\x37\x39\71\73\142\x6f\162\x64\145\162\55\143\x6f\154\157\162\x3a\40\43\x33\x33\67\141\142\67\40\x23\63\63\67\141\x62\x37\x20\43\x33\x33\67\x61\142\67\73"));
        $form["\155\151\156\151\157\x72\x61\156\x67\x65\x5f\163\x61\155\x6c\137\147\165\151\144\x65\137\x63\154\145\141\x72\137\154\151\163\x74\x5f\156\157\x74\x65"] = array("\43\x6d\141\x72\x6b\x75\160" => "\x3c\x64\151\166\x20\x73\164\x79\x6c\x65\75\x22\x66\157\156\164\x2d\x73\x69\x7a\x65\72\x20\x31\x33\x70\x78\73\42\76\x3c\x62\76\116\x4f\x54\105\40\x3a\x20\74\57\142\x3e\120\x6c\x65\x61\163\x65\40\x63\154\x65\141\162\40\x74\150\151\163\40\x6c\151\163\x74\x20\x61\x66\x74\x65\x72\x20\143\x6f\x6e\x66\151\147\x75\x72\151\156\147\x20\164\x68\x65\x20\x6d\x6f\x64\165\154\x65\40\x74\x6f\40\150\151\144\145\40\x79\157\x75\162\x20\143\x6f\156\146\151\144\145\x6e\x74\x69\x61\x6c\x20\x61\164\164\x72\x69\142\165\164\145\x73\56\x3c\142\x72\76\xd\xa\40\40\40\x20\x20\x20\x20\x20\40\x20\x20\40\40\x20\40\x20\40\x20\x20\40\40\40\40\x20\40\40\x20\x20\103\154\x69\x63\x6b\40\157\x6e\40\74\142\x3e\x54\x65\163\x74\40\x63\157\x6e\x66\151\x67\x75\x72\141\164\151\x6f\156\74\57\x62\x3e\40\x69\x6e\40\74\142\x3e\x20\123\145\x72\x76\x69\x63\145\x20\120\162\x6f\166\x69\x64\x65\162\x3c\x2f\x62\76\40\x74\x61\142\x20\164\157\40\x70\x6f\x70\165\154\141\x74\x65\x20\x74\150\x65\x20\x6c\151\163\164\x20\x61\147\141\x69\x6e\56\x3c\x2f\x64\151\x76\76");
        $form["\155\151\156\151\157\162\141\x6e\x67\145\x5f\163\x61\x6d\154\137\147\165\151\x64\x65\137\164\x61\x62\154\145\x5f\x65\156\144"] = array("\x23\x6d\141\x72\153\165\x70" => "\x3c\57\144\x69\x76\x3e");
    }
    public static function generateCertificate($YQ, $ly, $yo, $L_)
    {
        $qu = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\x72\x65\163\157\x75\162\143\145\163" . DIRECTORY_SEPARATOR . "\x6f\160\145\x6e\163\163\154\x2e\x63\x6e\x66";
        $WH = array("\143\x6f\x6e\x66\151\147" => $qu, "\x64\151\147\x65\163\x74\x5f\x61\154\147" => "{$ly}", "\160\x72\x69\166\141\164\x65\x5f\153\145\x79\x5f\142\x69\164\x73" => $yo, "\x70\162\151\x76\x61\164\x65\x5f\x6b\145\x79\x5f\x74\171\x70\145" => OPENSSL_KEYTYPE_RSA);
        $RD = openssl_pkey_new($WH);
        $xS = openssl_csr_new($YQ, $RD, $WH);
        $tz = openssl_csr_sign($xS, null, $RD, $L_, $WH, time());
        openssl_x509_export($tz, $us);
        openssl_pkey_export($RD, $MB, null, $WH);
        openssl_csr_export($xS, $jc);
        Tf:
        if (!(($H5 = openssl_error_string()) !== false)) {
            goto p8;
        }
        error_log($H5);
        goto Tf;
        p8:
        $IU = array("\x70\x75\142\x6c\151\143\x5f\x6b\145\171" => $us, "\160\162\151\x76\141\164\x65\137\153\x65\171" => $MB);
        $tc = drupal_get_path("\x6d\157\x64\x75\x6c\145", "\x6d\x69\156\x69\x6f\x72\x61\156\x67\145\x5f\x73\141\155\154") . "\57\162\145\163\x6f\165\162\143\x65\x73\x2f\103\x75\163\164\x6f\x6d\137\x50\165\142\154\x69\143\x5f\x43\x65\x72\x74\151\146\x69\x63\141\x74\145\x2e\143\162\x74";
        file_put_contents($tc, $IU["\160\165\x62\x6c\x69\143\137\153\145\x79"]);
        $CD = drupal_get_path("\x6d\157\x64\165\x6c\145", "\x6d\x69\x6e\x69\157\162\x61\x6e\x67\145\x5f\x73\141\x6d\154") . "\57\162\x65\x73\x6f\x75\x72\143\145\x73\x2f\103\165\x73\164\x6f\x6d\137\x50\x72\151\166\x61\164\x65\x5f\103\145\162\164\x69\x66\x69\143\x61\164\x65\x2e\x6b\x65\x79";
        file_put_contents($CD, $IU["\160\x72\151\x76\141\164\145\137\153\145\x79"]);
        variable_set("\155\x69\156\x69\157\162\x61\156\x67\145\137\x73\x61\155\x6c\137\160\x75\142\154\x5f\x63\x65\162\164\151\x66\151\x63\x61\x74\x65", $IU["\x70\x75\x62\154\x69\143\x5f\x6b\x65\x79"]);
        variable_set("\155\x69\x6e\x69\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\x6d\x6c\137\x70\x72\x69\x76\x61\164\145\x5f\143\145\162\164\x69\146\151\143\x61\x74\x65", $IU["\160\x72\151\166\x61\164\145\x5f\153\145\171"]);
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $ul = $base_url . "\x2f\x61\144\155\x69\x6e\57\x63\x6f\156\x66\151\x67\57\x70\x65\x6f\x70\154\145\x2f\x6d\x69\156\x69\x6f\x72\x61\156\147\x65\137\x73\141\155\x6c\x2f\143\165\163\x74\x6f\x6d\145\162\x5f\163\x65\164\x75\x70\57";
        if (variable_get("\x6d\151\x6e\151\x6f\x72\141\156\x67\145\x5f\163\141\155\x6c\x5f\x63\x75\x73\164\x6f\x6d\x65\x72\x5f\141\x64\155\x69\156\137\x65\x6d\x61\x69\x6c", NULL) == NULL || variable_get("\155\x69\x6e\x69\157\x72\x61\156\x67\x65\137\x73\141\x6d\x6c\137\x63\x75\163\164\157\155\x65\x72\137\151\144", NULL) == NULL || variable_get("\155\x69\x6e\151\x6f\162\141\156\x67\145\x5f\163\141\x6d\x6c\x5f\143\165\163\x74\157\x6d\x65\x72\x5f\x61\144\155\x69\x6e\137\x74\x6f\x6b\145\156", NULL) == NULL || variable_get("\x6d\151\x6e\x69\157\x72\141\156\x67\145\x5f\163\x61\x6d\154\137\x63\x75\x73\164\x6f\155\x65\x72\137\141\x70\151\137\x6b\x65\x79", NULL) == NULL) {
            goto uf;
        }
        if (variable_get("\x6d\x69\156\x69\157\x72\141\x6e\147\145\x5f\x73\141\x6d\154\x5f\154\151\143\x65\156\x73\x65\137\x6b\145\x79") == NULL && variable_get("\x6d\151\x6e\151\157\162\141\x6e\x67\145\137\163\141\155\154\x5f\143\x75\163\x74\x6f\x6d\145\162\137\x61\144\x6d\x69\x6e\137\145\x6d\x61\151\x6c") != NULL) {
            goto Pv;
        }
        return False;
        goto Lu;
        Pv:
        $form["\155\141\162\153\x75\160\137\x6d\x73\x67"] = array("\43\155\x61\x72\x6b\165\x70" => "\x3c\x64\x69\x76\x20\x63\154\x61\x73\163\75\42\x6d\x6f\137\163\141\155\154\137\162\145\x67\151\163\164\x65\162\137\x6d\x65\163\163\141\x67\145\x22\76\74\x70\76\131\157\x75\40\156\145\145\144\x20\x74\x6f\40\x3c\x61\x20\150\162\145\x66\x3d\42" . $ul . "\x22\40\76\x56\x65\x72\151\x66\171\x3c\x2f\x61\x3e\x20\x79\x6f\x75\x72\x20\154\x69\143\x65\156\x73\x65\40\x6b\x65\x79\x20\x62\145\146\157\162\145\x20\165\163\151\x6e\x67\40\x74\x68\x69\163\40\x6d\157\x64\165\154\145\x2e\x3c\x2f\141\76\74\57\160\76\x3c\x2f\x64\151\x76\x3e");
        return TRUE;
        Lu:
        goto eM;
        uf:
        $form["\155\x61\162\x6b\x75\x70\x5f\162\x65\x67\137\155\x73\x67"] = array("\43\x6d\141\x72\153\165\160" => "\x3c\x64\x69\166\x20\x63\x6c\x61\x73\x73\75\42\155\157\137\x73\x61\x6d\x6c\137\x72\145\147\151\163\164\145\162\137\155\x65\x73\x73\x61\147\x65\x22\x3e\x59\x6f\x75\40\x6e\145\145\x64\x20\164\157\x20\x3c\141\x20\x68\162\145\x66\x3d\42" . $ul . "\42\x20\76\122\x65\x67\x69\x73\164\x65\162\57\x4c\157\147\151\156\x3c\57\x61\x3e\40\167\x69\164\x68\40\x6d\x69\x6e\x69\x4f\x72\x61\156\x67\x65\x20\142\x65\x66\157\162\145\x20\x75\x73\x69\x6e\x67\40\164\x68\x69\163\40\x6d\157\x64\x75\154\145\x2e\x3c\x2f\x63\x65\x6e\x74\145\162\76\x3c\57\x64\x69\x76\76");
        return TRUE;
        eM:
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $of = Utilities::getEmailandPhone();
        $form["\x6d\x61\x72\x6b\165\x70\137\151\144\x70\x5f\x61\164\x74\x72\137\x68\x65\x61\144\x65\x72\137\x74\x6f\160\x5f\x73\x75\160\160\157\x72\164"] = array("\43\155\x61\162\153\x75\160" => "\74\x64\x69\166\x20\143\154\x61\x73\163\x3d\42\155\x6f\x5f\x73\x61\155\154\137\164\x61\142\x6c\145\137\154\x61\x79\x6f\165\x74\137\163\165\160\160\157\162\164\x5f\61\42\x3e");
        $form["\x6d\141\x72\x6b\165\160\137\163\165\x70\160\x6f\162\164\137\61"] = array("\43\155\141\162\153\165\x70" => "\x3c\x68\63\76\74\142\x3e\123\x75\x70\160\157\x72\164\x3a\x3c\57\x62\76\74\57\x68\63\76\74\144\151\166\76\x4e\145\x65\x64\x20\x61\x6e\x79\x20\150\x65\154\x70\77\40\x4a\x75\x73\x74\x20\163\145\x6e\x64\x20\x75\163\x20\141\40\161\165\x65\162\x79\x20\x73\x6f\x20\167\145\40\143\141\156\x20\x68\145\154\160\40\171\157\x75\x2e\x3c\x62\x72\x20\x2f\76\x3c\x2f\144\151\x76\x3e");
        $form["\155\x69\x6e\x69\x6f\x72\x61\156\x67\145\137\163\x61\x6d\154\x5f\145\x6d\x61\x69\x6c\x5f\141\x64\144\x72\x65\163\x73\x5f\163\165\x70\x70\157\x72\x74"] = array("\43\164\x79\160\145" => "\x74\x65\x78\164\x66\x69\x65\x6c\144", "\43\141\164\x74\162\151\x62\165\164\145\163" => array("\163\x74\x79\154\145" => "\167\151\x64\x74\150\72\61\60\60\x25", "\160\154\141\x63\145\x68\157\154\x64\145\162" => "\x45\156\x74\145\162\x20\x79\157\x75\x72\x20\x45\155\141\151\x6c"), "\43\x64\x65\x66\x61\165\x6c\x74\137\166\x61\x6c\165\x65" => $of["\x65\x6d\x61\x69\x6c"]);
        $form["\155\x69\156\x69\x6f\162\141\156\147\x65\137\163\141\x6d\154\137\160\x68\157\156\145\x5f\x6e\165\x6d\x62\145\x72\x5f\x73\165\160\x70\x6f\x72\164"] = array("\x23\x74\x79\160\145" => "\164\x65\170\x74\x66\151\145\x6c\x64", "\x23\141\164\164\x72\151\142\165\164\x65\x73" => array("\x73\x74\x79\x6c\x65" => "\167\151\144\x74\x68\72\61\60\60\x25", "\160\x6c\141\x63\x65\150\x6f\x6c\144\145\162" => "\105\156\164\145\162\40\171\157\165\162\x20\160\x68\157\x6e\x65\40\156\x75\155\x62\x65\162\40\167\x69\164\x68\40\143\157\x75\x6e\x74\x72\171\40\143\157\144\x65\x20\145\147\56\50\x2b\x31\x29"), "\43\144\145\146\141\x75\154\x74\137\x76\141\154\165\x65" => $of["\x70\x68\157\x6e\145"]);
        $form["\x6d\151\x6e\x69\157\162\x61\156\x67\x65\137\163\141\x6d\x6c\x5f\163\x75\160\x70\x6f\162\x74\x5f\161\x75\145\x72\x79\137\x73\165\x70\160\x6f\162\x74"] = array("\43\164\171\160\145" => "\x74\x65\x78\x74\x61\x72\145\141", "\43\143\x6f\154\163" => "\61\60", "\43\162\x6f\x77\x73" => "\65", "\x23\x61\x74\164\x72\151\x62\x75\164\145\x73" => array("\163\x74\x79\x6c\x65" => "\x77\x69\144\x74\150\x3a\x31\60\60\x25", "\160\154\141\x63\145\150\157\154\x64\145\162" => "\127\x72\151\x74\x65\40\x79\157\165\x72\40\x71\165\x65\x72\x79\x20\x68\x65\x72\x65\56"), "\43\x72\145\163\151\x7a\141\x62\154\x65" => False);
        $form["\x6d\x69\x6e\x69\x6f\162\x61\x6e\x67\x65\x5f\163\x61\155\x6c\x5f\163\x75\160\160\157\162\164\x5f\x73\x75\142\x6d\x69\x74\137\143\154\151\x63\153"] = array("\x23\164\171\x70\145" => "\163\x75\142\155\151\164", "\43\x76\141\154\x75\x65" => t("\123\x75\x62\155\151\x74\40\x51\165\x65\162\x79"), "\43\x73\x75\x62\155\x69\x74" => array("\155\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\x5f\x73\141\155\154\x5f\151\144\x70\x5f\163\145\x6e\x64\137\x71\165\145\162\171"), "\x23\x61\164\164\x72\151\x62\x75\x74\145\x73" => array("\163\x74\x79\154\145" => "\142\x61\143\153\147\x72\x6f\165\156\144\72\40\43\x33\x33\67\x61\x62\67\73\143\x6f\154\x6f\x72\72\40\x23\146\146\x66\x66\146\x66\x3b\164\x65\170\164\x2d\x73\x68\141\x64\x6f\167\72\40\x30\40\55\x31\x70\170\x20\61\x70\x78\x20\43\x33\63\x37\x61\x62\67\x2c\x20\x31\160\170\40\x30\x20\x31\x70\170\x20\x23\63\x33\x37\x61\142\x37\x2c\40\60\x20\61\x70\x78\x20\x31\x70\x78\x20\x23\x33\63\67\141\x62\67\x2c\x20\x2d\61\x70\x78\x20\60\40\x31\160\170\40\43\x33\x33\x37\141\x62\67\x3b\x62\x6f\x78\x2d\x73\150\141\144\157\167\x3a\x20\x30\40\61\160\x78\x20\60\x20\43\x33\x33\x37\141\x62\x37\x3b\142\x6f\x72\144\145\x72\55\143\x6f\154\157\162\x3a\x20\x23\x33\x33\67\141\x62\x37\40\43\63\x33\67\x61\x62\67\40\43\63\63\67\x61\142\67\73\x64\151\x73\160\154\141\171\x3a\x62\154\x6f\143\x6b\73\155\141\x72\147\x69\156\55\154\145\x66\164\x3a\x61\x75\x74\157\x3b\x6d\141\162\x67\151\156\55\162\x69\x67\x68\164\x3a\x61\165\164\x6f\x3b"));
        $form["\x6d\x69\x6e\x69\x6f\162\141\156\x67\145\x5f\x73\x61\155\154\137\x73\x75\x70\x70\x6f\x72\164\137\156\157\x74\145"] = array("\43\x6d\141\162\153\165\x70" => "\74\144\x69\x76\x3e\111\146\x20\171\x6f\165\40\x77\141\156\x74\x20\x63\x75\x73\x74\x6f\x6d\40\x66\x65\141\x74\165\x72\x65\163\x20\x69\156\40\164\x68\x65\40\155\157\144\x75\154\x65\54\x20\152\165\163\164\40\x64\x72\x6f\x70\x20\141\x6e\x20\x65\x6d\x61\x69\154\40\164\157\x20\74\141\x20\150\x72\x65\146\x3d\42\155\x61\x69\x6c\164\x6f\72\151\156\146\157\100\170\x65\143\x75\162\151\146\x79\x2e\143\x6f\x6d\x22\76\151\x6e\x66\x6f\x40\x78\x65\x63\x75\162\151\x66\171\56\x63\157\x6d\x3c\57\x61\x3e\74\x2f\x64\x69\166\x3e\74\x2f\144\x69\166\76");
    }
    public static function send_query($fB, $KC, $jS)
    {
        if (empty($fB) || empty($jS)) {
            goto Mz;
        }
        if (!valid_email_address($fB)) {
            goto hC;
        }
        goto Br;
        Mz:
        drupal_set_message(t("\x54\x68\145\x20\74\142\x3e\74\165\x3e\105\x6d\x61\151\154\x3c\x2f\165\76\x3c\57\x62\x3e\x20\x61\156\144\x20\74\x62\76\x3c\165\76\121\165\145\x72\x79\x3c\57\x75\x3e\74\57\x62\76\x20\146\151\145\x6c\x64\163\x20\x61\162\x65\40\x72\x65\161\165\x69\162\145\x64\56"), "\x65\162\162\x6f\x72");
        return;
        goto Br;
        hC:
        drupal_set_message(t("\x54\x68\145\40\x65\155\x61\x69\x6c\x20\x61\x64\x64\x72\145\x73\163\x20\x3c\142\x3e\74\151\x3e" . $fB . "\74\57\151\x3e\74\57\142\76\40\x69\163\40\x6e\x6f\164\x20\x76\141\x6c\x69\x64\56"), "\x65\x72\x72\157\162");
        return;
        Br:
        $yt = new MiniOrangeSamlSupport($fB, $KC, $jS);
        $i7 = $yt->sendSupportQuery();
        if ($i7) {
            goto uB;
        }
        drupal_set_message(t("\105\162\162\157\162\x20\x73\x65\x6e\x64\151\x6e\147\40\x73\165\160\x70\157\162\x74\40\161\165\x65\162\x79\56"), "\145\x72\x72\x6f\162");
        goto fS;
        uB:
        drupal_set_message(t("\123\165\160\160\157\x72\x74\40\161\x75\145\162\171\x20\163\165\x63\x63\145\163\x73\x66\165\154\x6c\171\x20\x73\145\x6e\x74\x2e"));
        fS:
    }
    public static function getEmailandPhone()
    {
        $ct = variable_get("\x6d\151\x6e\151\x6f\x72\x61\156\x67\145\137\x73\x61\155\x6c\x5f\143\165\x73\164\x6f\x6d\x65\x72\137\141\144\x6d\151\156\137\x65\155\x61\x69\x6c", '');
        $Jh = variable_get("\155\x69\x6e\151\157\162\141\x6e\147\x65\137\x73\x61\155\x6c\137\143\x75\163\x74\x6f\155\145\x72\137\141\x64\x6d\151\x6e\137\160\150\x6f\x6e\145", '');
        $in = array("\x65\x6d\x61\151\x6c" => isset($ct) ? $ct : '', "\160\x68\x6f\x6e\145" => isset($Jh) ? $Jh : '');
        return $in;
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $e2 = variable_get("\155\x69\x6e\151\x6f\162\141\x6e\147\x65\x5f\163\x61\x6d\x6c\x5f\142\x61\163\145\137\165\x72\x6c", '');
        $St = isset($e2) && !empty($e2) ? $e2 : $base_url;
        return $St;
    }
    public static function set_idp_parameters($Vu)
    {
        if ($Vu != "\156\145\167") {
            goto Ax;
        }
        variable_set("\155\x69\x6e\x69\157\162\141\x6e\147\x65\x5f\163\x61\155\154\137\x69\144\160\x5f\151\x64", '');
        variable_set("\155\x69\156\x69\x6f\x72\x61\x6e\147\145\x5f\163\x61\155\x6c\x5f\x69\x64\x70\137\156\x61\x6d\145", '');
        variable_set("\x6d\151\156\151\x6f\x72\x61\x6e\147\145\x5f\x73\141\155\154\x5f\x69\x64\x70\x5f\x69\163\163\165\x65\162", '');
        variable_set("\155\151\156\x69\157\x72\141\x6e\x67\145\x5f\x73\141\x6d\x6c\x5f\151\x64\x70\137\x6c\157\x67\x69\156\137\165\162\154", '');
        variable_set("\155\151\156\151\157\162\x61\156\x67\x65\137\163\x61\x6d\154\x5f\x69\144\x70\137\170\x35\x30\x39\x5f\143\145\x72\164\x69\146\151\x63\141\x74\x65", '');
        variable_set("\x6d\x69\156\151\x6f\162\141\156\147\145\137\156\141\155\145\151\144\137\146\157\162\x6d\x61\164", '');
        variable_set("\155\x69\x6e\x69\157\162\141\x6e\x67\x65\137\163\141\x6d\154\137\x72\x65\x71\165\x65\x73\164\137\x73\151\147\156\x65\144", '');
        variable_set("\x6d\151\156\x69\x6f\x72\x61\156\x67\145\x5f\x73\x61\155\x6c\137\x68\164\164\x70\x5f\x62\x69\156\144\151\x6e\x67", '');
        variable_set("\x6d\x69\156\x69\157\x72\x61\156\147\145\137\x73\x61\155\154\x5f\150\164\x74\160\x5f\142\x69\156\x64\151\156\147\137\x73\x6c\x6f", '');
        variable_set("\155\151\x6e\151\x6f\x72\141\156\x67\145\137\163\x61\x6d\x6c\x5f\x69\x64\x70\137\x6c\157\x67\x6f\x75\x74\137\x75\x72\x6c", '');
        goto vj;
        Ax:
        $qX = db_query("\123\x45\x4c\105\x43\x54\x20\52\x20\x46\x52\x4f\x4d\40\173\155\151\156\151\x6f\162\141\x6e\x67\145\137\163\141\155\x6c\x5f\151\x64\160\137\x6c\x69\x73\x74\x7d\x20\x57\110\x45\122\x45\x20\x69\x64\40\x3d\40{$Vu}");
        $EV = $qX->fetchAssoc();
        variable_set("\x6d\x69\x6e\151\157\x72\141\156\x67\x65\137\x73\x61\155\x6c\137\151\144\160\137\151\x64", $Vu);
        variable_set("\x6d\151\156\x69\157\x72\x61\x6e\147\145\x5f\x73\141\x6d\154\x5f\151\x64\160\x5f\x6e\141\155\x65", $EV["\x6d\x6f\137\x69\144\x70\137\156\141\155\x65"]);
        variable_set("\155\x69\x6e\151\x6f\x72\x61\156\147\x65\137\163\x61\155\x6c\x5f\x69\144\160\137\x69\163\163\165\x65\162", $EV["\x6d\157\x5f\151\144\x70\137\x69\163\163\165\145\x72"]);
        variable_set("\x6d\151\x6e\151\157\x72\x61\156\x67\145\137\x73\x61\155\154\137\x69\144\x70\x5f\154\x6f\x67\x69\x6e\x5f\165\x72\x6c", $EV["\155\x6f\137\x69\144\160\137\x73\163\x6f\137\165\x72\154"]);
        variable_set("\x6d\151\156\x69\x6f\x72\x61\156\147\145\137\x73\141\155\154\x5f\151\144\160\x5f\x78\x35\60\x39\137\143\145\162\x74\151\x66\151\x63\141\164\145", $EV["\x6d\x6f\x5f\x69\x64\160\137\143\145\162\164"]);
        variable_set("\155\x69\x6e\151\157\162\x61\x6e\147\145\137\x6e\x61\155\145\x69\144\x5f\x66\157\162\155\x61\164", $EV["\x6d\x6f\x5f\x69\x64\x70\x5f\x6e\141\x6d\145\151\144\x5f\146\157\162\155\141\x74"]);
        variable_set("\x6d\x69\156\x69\x6f\x72\x61\x6e\147\x65\137\163\141\155\154\137\162\145\x71\165\x65\x73\164\x5f\x73\151\147\x6e\145\x64", $EV["\155\157\137\x69\144\160\137\x72\145\161\165\x65\x73\164\137\163\151\x67\x6e\145\144"]);
        variable_set("\x6d\x69\x6e\x69\x6f\162\x61\x6e\147\x65\137\x73\141\x6d\154\x5f\150\164\x74\160\137\142\151\x6e\144\151\156\147", $EV["\x6d\157\137\151\x64\x70\x5f\150\x74\164\x70\x5f\x62\151\156\x64\151\x6e\x67\x5f\163\x73\157"]);
        variable_set("\155\151\156\x69\x6f\x72\141\156\147\145\x5f\x73\141\x6d\154\137\150\x74\164\160\x5f\142\151\x6e\x64\x69\156\147\137\x73\x6c\x6f", $EV["\155\157\137\x69\144\160\137\150\x74\164\160\x5f\x62\151\x6e\x64\x69\x6e\147\137\x73\154\157"]);
        variable_set("\155\x69\x6e\x69\157\162\x61\156\147\145\137\x73\141\155\154\137\x69\x64\160\x5f\x6c\x6f\x67\157\x75\x74\x5f\165\x72\154", $EV["\155\x6f\137\x69\144\160\x5f\x73\x6c\157\137\165\162\154"]);
        variable_set("\155\x69\x6e\151\157\162\141\x6e\x67\145\x5f\x73\x61\x6d\154\137\146\145\x74\x63\150\137\155\x65\x74\141\x64\x61\x74\x61\x5f\164\151\x6d\145\137\x69\156\164\x65\x72\x76\141\154\x73", $EV["\x6d\151\x6e\x69\157\x72\141\x6e\x67\x65\137\163\x61\x6d\154\137\146\x65\164\143\150\x5f\155\x65\x74\x61\144\141\164\x61\137\164\x69\x6d\145\x5f\x69\156\x74\x65\162\166\141\x6c\x73"]);
        variable_set("\x6d\x69\x6e\x69\x6f\162\141\156\147\145\x5f\163\x61\155\154\x5f\x6d\x65\x74\x61\x5f\144\141\164\x61\137\165\162\x6c", $EV["\x6d\151\x6e\x69\157\x72\x61\156\x67\145\137\163\141\155\x6c\137\x6d\145\x74\x61\137\x64\141\x74\x61\x5f\x75\162\154"]);
        vj:
    }
    public static function delete_sp_parameters($Vu)
    {
        $on = db_delete("\x6d\151\156\151\x6f\x72\141\156\x67\x65\x5f\163\x61\155\154\137\151\144\x70\137\x6c\x69\x73\x74")->condition("\151\144", $Vu)->execute();
        variable_set("\155\151\156\x69\157\x72\141\156\147\x65\x5f\x73\x61\x6d\x6c\x5f\x69\144\x70\137\151\x64", '');
        variable_set("\155\x69\x6e\x69\x6f\x72\141\156\x67\x65\137\x73\141\155\154\x5f\151\x64\160\137\156\x61\155\145", '');
        variable_set("\x6d\151\156\151\x6f\x72\x61\156\147\x65\137\163\x61\155\154\x5f\x69\x64\160\137\151\x73\x73\165\x65\x72", '');
        variable_set("\x6d\x69\156\151\x6f\162\x61\156\147\x65\x5f\x73\x61\x6d\154\x5f\151\144\160\x5f\154\157\x67\x69\x6e\137\165\162\x6c", '');
        variable_set("\x6d\151\x6e\151\157\162\141\x6e\147\145\x5f\x73\141\x6d\x6c\137\x69\x64\x70\137\x78\65\x30\71\x5f\143\x65\x72\164\151\x66\151\143\141\164\x65", '');
        variable_set("\x6d\x69\x6e\x69\157\162\141\156\x67\145\x5f\x6e\141\x6d\145\151\x64\137\x66\157\x72\x6d\x61\x74", '');
        variable_set("\155\x69\156\x69\157\162\x61\156\x67\145\137\163\141\155\154\137\162\x65\x71\x75\x65\x73\164\137\163\151\147\x6e\145\x64", '');
        variable_set("\155\x69\156\151\x6f\x72\141\x6e\x67\x65\x5f\163\141\x6d\154\137\x68\164\x74\x70\x5f\x62\x69\156\x64\151\x6e\147", '');
        variable_set("\x6d\151\x6e\x69\x6f\162\141\156\x67\145\x5f\163\141\155\x6c\x5f\x68\x74\164\x70\137\142\x69\156\144\151\156\147\x5f\x73\x6c\157", '');
        variable_set("\155\x69\x6e\151\157\162\141\x6e\147\145\x5f\163\x61\155\154\x5f\x69\144\x70\137\x6c\x6f\147\157\x75\x74\x5f\x75\x72\x6c", '');
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\x6d\151\156\x69\x6f\x72\x61\156\147\x65\137\151\144\x70\137\147\165\151\x64\145\137\x6c\151\x6e\153\x77"] = array("\43\x6d\x61\x72\153\165\x70" => "\74\x64\151\166\40\x63\x6c\141\x73\163\x3d\42\155\x6f\x5f\x73\x61\x6d\x6c\137\x74\141\142\154\145\137\154\141\x79\x6f\165\x74\137\163\x75\x70\160\157\162\164\137\x31\42\40\x73\x74\x79\x6c\145\75\x22\x6d\x61\x72\147\x69\156\55\164\157\160\72\40\65\160\170\x3b\42\76");
        $form["\155\151\x6e\x69\x6f\162\141\x6e\x67\145\137\x66\141\x71"] = array("\x23\x6d\x61\x72\153\x75\160" => "\x3c\142\x3e\x3c\x2f\x62\x3e\74\x61\x20\143\x6c\141\x73\x73\75\x22\x62\x74\156\40\x62\164\x6e\x2d\160\x72\151\155\x61\x72\x79\55\x66\x61\161\40\142\164\x6e\55\154\141\x72\x67\145\40\x62\164\156\x5f\146\x61\x71\137\142\165\164\164\157\x6e\163\x22\x20\163\x74\x79\154\145\75\x22\146\x6c\x6f\x61\x74\72\x20\x6c\x65\146\x74\x3b\160\x61\144\x64\151\x6e\x67\x3a\40\x33\160\170\40\66\160\170\x20\41\151\x6d\x70\x6f\162\x74\141\156\164\73\143\157\x6c\x6f\x72\x3a\40\x23\64\x38\x61\x30\144\143\73\x62\x6f\x72\x64\x65\162\x3a\40\62\x70\170\40\163\157\154\151\x64\40\x23\x34\70\x61\60\144\143\73\x77\151\x64\x74\x68\72\63\x30\45\73\42\40\150\x72\x65\146\x3d\42\150\164\x74\160\x73\x3a\x2f\57\146\141\x71\56\155\x69\156\151\x6f\x72\141\x6e\147\145\56\143\x6f\155\x2f\x6b\142\57\144\162\x75\x70\141\154\57\x73\141\x6d\x6c\x2d\x64\162\x75\x70\141\154\x2f\x22\x20\x74\x61\x72\147\x65\164\x3d\42\137\x62\x6c\141\156\x6b\x22\x3e" . "\x46\101\121\x73\74\57\x61\76");
        $form["\155\x69\156\x69\x6f\x72\141\x6e\147\145\x5f\x66\157\162\x75\155"] = array("\43\x6d\x61\x72\153\x75\x70" => "\74\142\76\x3c\57\x62\76\x3c\x61\x20\143\x6c\141\x73\163\x3d\42\x62\x74\156\40\142\x74\156\x2d\160\162\x69\155\141\x72\x79\55\x66\x61\161\40\x62\x74\x6e\x2d\x6c\x61\x72\147\145\40\142\164\156\x5f\x66\141\x71\137\142\x75\164\x74\x6f\156\x73\42\x20\x73\164\x79\154\x65\x3d\x22\x66\x6c\157\141\164\x3a\40\162\151\x67\150\164\73\160\141\x64\144\x69\156\147\x3a\40\63\x70\x78\40\x36\160\x78\x20\x21\x69\155\x70\157\x72\164\141\156\x74\73\143\x6f\154\157\162\72\x20\x23\64\x38\x61\x30\144\143\x3b\x62\157\162\144\145\x72\72\x20\x32\160\x78\x20\163\157\x6c\151\144\40\x23\64\70\141\60\x64\143\73\x77\151\144\x74\x68\72\65\x35\x25\73\42\x20\x68\162\x65\146\75\x22\150\164\x74\x70\163\x3a\57\x2f\x66\157\162\x75\155\x2e\x6d\151\x6e\x69\x6f\162\141\x6e\x67\145\56\x63\157\x6d\57\x22\x20\x74\141\x72\147\x65\x74\75\x22\x5f\x62\154\141\156\x6b\42\x3e" . "\x41\163\153\40\x71\165\x65\163\164\151\157\156\x73\x20\157\156\x20\146\157\162\165\x6d\x3c\x2f\x61\x3e");
        $form["\155\x61\162\153\165\160\137\x74\x65\163\x74\x5f\144\151\x76"] = array("\x23\155\x61\162\153\x75\160" => "\74\x2f\x64\x69\x76\76");
    }
    public static function isCurlInstalled()
    {
        if (in_array("\x63\x75\162\154", get_loaded_extensions())) {
            goto kP;
        }
        return 0;
        goto ug;
        kP:
        return 1;
        ug:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($lo)
    {
        $H2 = '';
        $q2 = 0;
        NN:
        if (!($q2 < strlen($lo))) {
            goto XO;
        }
        $H2 .= sprintf("\x25\x30\x32\170", ord($lo[$q2]));
        nA:
        $q2++;
        goto NN;
        XO:
        return $H2;
    }
    public static function generateRandomBytes($jI, $uw = TRUE)
    {
        return openssl_random_pseudo_bytes($jI);
    }
    public static function insertSignature(XMLSecurityKey $FS, array $IU, DOMElement $nv = NULL, DOMNode $z_ = NULL)
    {
        $zR = new XMLSecurityDSig();
        $zR->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($FS->type) {
            case XMLSecurityKey::RSA_SHA256:
                $NS = XMLSecurityDSig::SHA256;
                goto eB;
            case XMLSecurityKey::RSA_SHA384:
                $NS = XMLSecurityDSig::SHA384;
                goto eB;
            case XMLSecurityKey::RSA_SHA512:
                $NS = XMLSecurityDSig::SHA512;
                goto eB;
            default:
                $NS = XMLSecurityDSig::SHA1;
        }
        li:
        eB:
        $zR->addReferenceList(array($nv), $NS, array("\x68\x74\164\x70\72\x2f\x2f\167\x77\167\56\167\x33\x2e\157\162\147\57\62\x30\x30\x30\x2f\x30\71\x2f\x78\155\154\144\163\151\147\43\145\x6e\x76\145\154\157\x70\x65\144\x2d\163\x69\x67\156\141\x74\x75\x72\145", XMLSecurityDSig::EXC_C14N), array("\151\144\137\x6e\x61\155\x65" => "\111\x44", "\x6f\166\x65\162\x77\162\x69\164\145" => FALSE));
        $zR->sign($FS);
        foreach ($IU as $fX) {
            $zR->add509Cert($fX, TRUE);
            bm:
        }
        Kf:
        $zR->insertSignature($nv, $z_);
    }
    public static function signXML($uQ, $t9, $cx, $ST = '', $qU)
    {
        if (libraries_get_path("\170\155\x6c\163\x65\143\154\151\142\163")) {
            goto dX;
        }
        $U2 = libraries_get_path("\x78\x6d\154\x73\x65\143\x6c\151\142\163\x2d\x6d\141\163\164\x65\162") . "\x2f\170\x6d\x6c\163\145\143\154\151\142\163\x2e\x70\150\160";
        goto cP;
        dX:
        $U2 = libraries_get_path("\170\155\x6c\x73\145\143\x6c\x69\142\x73") . "\x2f\170\x6d\154\x73\145\x63\x6c\x69\142\x73\x2e\160\x68\x70";
        cP:
        libraries_load("\x78\x6d\154\x73\145\x63\154\x69\x62\163");
        if (!(!class_exists("\130\115\114\123\x65\x63\x75\162\x69\164\x79\113\145\171") && !@(include $U2))) {
            goto s8;
        }
        echo "\x3c\144\x69\x76\76\xd\12\11\x9\11\x9\x20\40\40\40\x3c\x70\76\x3c\146\x6f\156\x74\x20\143\x6c\x61\163\x73\75\47\x61\154\x65\162\x74\47\40\x62\141\x63\153\147\162\157\165\x6e\144\55\143\157\154\157\162\x3d\x27\143\x72\x69\x6d\x73\157\x6e\47\40\x63\x6f\154\157\162\x3d\x27\x72\x65\144\47\x3e\x45\162\x72\157\x72\72\x20\170\155\x6c\x73\145\x63\154\x69\x62\163\40\156\157\x74\40\x6c\x6f\x61\x64\145\x64\40\160\x72\157\160\x65\x72\x6c\x79\x3c\57\x66\x6f\156\x74\x3e\x3c\x2f\160\76\xd\xa\x9\x9\x9\11\x20\40\40\40\74\x70\x3e\131\x6f\165\x20\x63\141\156\40\x64\157\167\x6e\154\157\x61\144\x20\x78\155\x6c\163\145\x63\154\x69\142\163\x20\146\x72\157\155\40\74\141\40\x68\162\145\x66\75\x27\x68\x74\x74\x70\163\x3a\57\57\x67\x69\x74\x68\x75\142\56\x63\157\155\x2f\x72\x6f\142\x72\151\143\150\x61\x72\144\x73\57\x78\x6d\x6c\163\x65\143\x6c\151\x62\x73\x2f\164\x72\145\145\x2f\61\56\x34\x27\x20\164\141\x72\147\x65\164\75\x27\x5f\142\154\141\156\153\x27\x3e\x68\145\x72\145\x3c\57\141\x3e\x2e\xd\12\x9\11\x9\11\x20\x20\40\40\74\x62\x72\x3e\105\x78\x74\x72\x61\143\164\x20\x74\150\145\40\141\x72\x63\150\151\166\145\x20\x61\156\x64\x20\x70\154\x61\143\145\x20\151\x74\x20\165\x6e\x64\x65\x72\x20\x3c\x62\76\163\151\164\145\163\x2f\141\154\x6c\57\x6c\x69\142\x72\141\x72\151\x65\163\57\74\57\142\76\x20\151\x6e\x20\x79\x6f\x75\x72\x20\104\x72\x75\160\141\x6c\x20\x64\x69\x72\x65\x63\164\157\x72\x79\x2e\x3c\x2f\160\x3e\xd\xa\11\x9\x9\11\40\x20\x20\x20\74\x64\x69\166\x3e";
        die;
        s8:
        $Ei = array("\x74\x79\160\x65" => "\160\162\x69\166\x61\x74\x65");
        if ($qU == "\122\123\101\x5f\x53\x48\101\x32\x35\66") {
            goto le;
        }
        if ($qU == "\122\x53\x41\137\123\110\x41\x33\70\x34") {
            goto Z7;
        }
        if ($qU == "\122\123\x41\x5f\123\110\x41\65\x31\62") {
            goto vC;
        }
        if ($qU == "\x52\x53\101\x5f\x53\110\x41\61") {
            goto Rk;
        }
        goto t0;
        le:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $Ei);
        goto t0;
        Z7:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $Ei);
        goto t0;
        vC:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $Ei);
        goto t0;
        Rk:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $Ei);
        t0:
        $FS->loadKey($cx, TRUE);
        $xA = file_get_contents($t9);
        $l0 = new DOMDocument();
        $l0->loadXML($uQ);
        $Fp = $l0->firstChild;
        if (!empty($ST)) {
            goto Ig;
        }
        self::insertSignature($FS, array($xA), $Fp);
        goto bW;
        Ig:
        $ka = $l0->getElementsByTagName($ST)->item(0);
        self::insertSignature($FS, array($xA), $Fp, $ka);
        bW:
        $b3 = $Fp->ownerDocument->saveXML($Fp);
        $qh = base64_encode($b3);
        return $qh;
    }
    public static function postSAMLRequest($e2, $Du, $ld)
    {
        echo "\x3c\150\164\x6d\x6c\x3e\x3c\150\145\x61\144\x3e\xd\xa\40\40\40\40\x20\x20\40\40\x20\40\40\x20\x20\x20\40\40\x20\74\x73\x63\x72\151\x70\x74\x20\163\x72\143\75\47\150\x74\x74\160\163\72\57\57\x63\157\144\x65\56\152\x71\165\x65\x72\171\56\143\157\x6d\57\x6a\x71\165\145\162\x79\x2d\x31\56\61\x31\56\63\56\155\151\x6e\x2e\x6a\163\x27\76\74\57\x73\x63\x72\151\x70\164\76\15\xa\40\40\40\x20\x20\40\x20\40\40\40\40\x20\x20\40\x20\x20\40\74\163\143\162\151\x70\x74\40\164\x79\x70\x65\75\x22\x74\145\170\164\57\152\141\x76\141\163\x63\x72\151\160\x74\x22\76\44\50\x66\x75\x6e\x63\x74\151\x6f\x6e\x28\51\173\144\x6f\x63\x75\155\145\x6e\x74\x2e\146\x6f\x72\155\x73\x5b\47\x73\x61\155\x6c\55\x72\x65\161\165\145\163\164\x2d\x66\x6f\x72\155\x27\x5d\x2e\163\x75\x62\x6d\x69\x74\50\51\x3b\175\x29\73\74\x2f\x73\x63\x72\151\x70\164\76\74\57\150\x65\141\x64\x3e\xd\xa\40\40\40\40\40\x20\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\74\142\x6f\144\x79\76\x50\154\145\141\x73\145\40\167\x61\x69\x74\x2e\56\56\x3c\146\157\x72\155\x20\x61\x63\164\151\157\156\75\x22" . $e2 . "\42\40\x6d\x65\x74\x68\x6f\144\75\42\x70\157\163\x74\42\40\x69\x64\x3d\x22\x73\x61\155\154\x2d\x72\145\161\165\x65\x73\x74\55\x66\157\x72\x6d\x22\x3e\xd\xa\x20\40\40\40\x20\x20\40\x20\x20\x20\x20\40\40\x20\x20\x20\x20\40\40\x3c\x69\x6e\160\x75\x74\40\x74\171\160\x65\x3d\x22\150\151\144\144\145\156\42\x20\x6e\141\x6d\145\x3d\42\x53\x41\x4d\114\122\x65\x71\x75\x65\163\164\42\40\x76\141\154\x75\x65\75\x22" . $Du . "\x22\x20\57\76\xd\xa\x20\x20\x20\40\40\40\x20\40\40\x20\x20\40\40\40\x20\x20\40\40\40\40\74\x69\x6e\x70\165\x74\40\164\x79\160\x65\75\42\x68\151\x64\144\x65\x6e\42\40\x6e\141\x6d\145\x3d\42\122\x65\154\x61\x79\123\164\x61\x74\145\x22\x20\166\141\154\165\145\75\42" . htmlentities($ld) . "\x22\40\x2f\76\x3c\x2f\146\x6f\x72\x6d\76\15\xa\40\x20\x20\40\40\x20\40\x20\x20\40\40\40\x20\x20\x20\x20\x20\x20\x20\40\x3c\x2f\x62\x6f\144\x79\x3e\15\12\x20\40\40\40\40\40\40\40\x20\40\40\40\40\x20\74\x2f\x68\x74\x6d\154\x3e";
        die;
    }
    public static function createAuthnRequest($VL, $PY, $jY, $SV, $Ba = "\x66\x61\x6c\x73\x65", $H4)
    {
        $vg = "\74\77\x78\155\154\x20\x76\145\162\x73\151\157\x6e\75\42\61\56\x30\x22\x20\x65\156\x63\x6f\144\x69\x6e\x67\x3d\x22\x55\x54\106\x2d\70\42\x3f\x3e" . "\x3c\x73\x61\x6d\154\160\72\101\165\x74\150\156\x52\x65\x71\165\145\x73\x74\40\x78\x6d\x6c\156\x73\72\x73\141\x6d\154\x70\75\x22\165\x72\156\72\x6f\x61\x73\x69\x73\72\156\141\155\145\163\x3a\x74\143\x3a\x53\x41\x4d\114\72\62\56\x30\x3a\160\162\x6f\164\x6f\143\157\x6c\x22\40\x78\155\x6c\x6e\163\75\x22\x75\162\x6e\x3a\157\141\163\151\163\72\156\141\155\x65\x73\x3a\164\x63\x3a\123\101\x4d\114\72\x32\56\x30\x3a\x61\x73\x73\x65\162\x74\x69\x6f\x6e\42\x20\111\x44\75\x22" . self::generateID() . "\42\x20\126\x65\x72\163\x69\157\156\75\42\62\x2e\x30\42\x20\111\163\x73\x75\x65\111\156\163\164\141\156\x74\x3d\x22" . self::generateTimestamp() . "\42";
        if (!($Ba == "\164\x72\165\x65")) {
            goto f1;
        }
        $vg .= "\x20\106\x6f\x72\143\x65\101\x75\x74\150\x6e\x3d\42\x74\x72\165\x65\x22";
        f1:
        $vg .= "\40\120\x72\x6f\x74\x6f\143\157\154\102\151\156\144\x69\156\x67\x3d\x22\165\x72\156\72\x6f\x61\x73\151\163\72\x6e\x61\155\x65\x73\x3a\164\143\x3a\x53\101\115\x4c\x3a\62\56\60\72\142\x69\x6e\x64\x69\x6e\147\163\x3a\110\x54\124\120\x2d\x50\x4f\x53\124\x22\x20\101\x73\x73\x65\x72\x74\x69\x6f\x6e\x43\157\156\163\x75\155\x65\x72\123\145\x72\x76\x69\x63\x65\125\x52\114\x3d\x22" . $VL . "\x22\x20\104\145\x73\x74\x69\x6e\x61\x74\151\x6f\156\75\x22" . $jY . "\42\x3e\x3c\163\x61\x6d\x6c\72\111\x73\163\x75\x65\162\40\x78\155\154\156\163\72\163\141\x6d\154\x3d\42\x75\x72\x6e\72\157\141\x73\151\x73\72\x6e\141\x6d\x65\x73\x3a\x74\x63\72\123\x41\x4d\x4c\x3a\62\x2e\x30\72\x61\x73\x73\145\x72\164\x69\x6f\156\42\76" . $PY . "\x3c\57\x73\x61\x6d\x6c\72\111\163\x73\165\145\162\x3e\74\163\x61\x6d\154\160\72\116\x61\155\145\111\104\120\x6f\154\151\143\171\40\101\x6c\x6c\x6f\167\103\x72\145\141\x74\145\75\42\x74\x72\x75\145\x22\40\106\157\x72\x6d\x61\164\75\x22" . $SV . "\x22\15\12\x20\x20\40\40\40\x20\40\40\40\40\40\40\x20\40\40\40\x20\x20\x20\40\40\40\x20\40\x2f\76\x3c\57\x73\x61\x6d\154\x70\72\101\x75\x74\150\156\122\145\x71\165\x65\x73\x74\x3e";
        if (!(empty($H4) || $H4 == "\x48\124\x54\120\55\x52\145\x64\151\162\145\x63\x74")) {
            goto wU;
        }
        $gs = gzdeflate($vg);
        $LO = base64_encode($gs);
        $rp = urlencode($LO);
        $vg = $rp;
        wU:
        return $vg;
    }
    public static function createSAMLRequest($VL, $PY, $jY, $SV, $Ba = "\x66\141\x6c\x73\145")
    {
        $vg = "\74\x3f\170\x6d\x6c\40\166\145\x72\x73\151\x6f\156\x3d\x22\x31\56\x30\x22\40\x65\156\143\x6f\144\x69\156\147\75\42\x55\x54\x46\x2d\x38\42\77\x3e" . "\74\163\x61\155\x6c\160\x3a\101\x75\164\x68\x6e\122\x65\x71\x75\x65\163\164\40\x78\155\154\156\163\72\163\141\x6d\x6c\x70\75\42\x75\x72\x6e\x3a\157\141\x73\151\x73\x3a\x6e\141\x6d\145\163\72\x74\143\x3a\123\x41\x4d\x4c\72\62\56\60\72\x70\x72\157\164\157\143\157\154\42\x20\x49\104\x3d\42" . self::generateID() . "\42\x20\x56\145\162\163\x69\157\x6e\75\42\x32\x2e\60\x22\40\111\x73\x73\x75\x65\111\x6e\x73\x74\x61\x6e\x74\x3d\42" . self::generateTimestamp() . "\42";
        if (!($Ba == "\164\162\x75\x65")) {
            goto Bi;
        }
        $vg .= "\x20\106\157\x72\143\145\101\165\x74\150\x6e\x3d\x22\x74\x72\165\145\x22";
        Bi:
        $vg .= "\x20\120\162\x6f\x74\157\x63\x6f\x6c\102\151\156\x64\x69\156\x67\x3d\x22\x75\162\156\x3a\x6f\x61\163\151\x73\72\x6e\141\155\145\x73\72\164\143\x3a\123\101\x4d\x4c\x3a\x32\x2e\x30\x3a\142\x69\156\144\151\x6e\x67\163\72\110\124\124\120\55\120\x4f\123\124\x22\x20\101\x73\163\145\x72\x74\x69\157\156\103\157\156\x73\165\155\145\162\123\x65\162\x76\x69\143\145\125\122\114\x3d\x22" . $VL . "\x22\40\x44\145\163\x74\x69\x6e\141\164\151\x6f\x6e\x3d\42" . $jY . "\42\76\x3c\163\141\155\154\x3a\111\163\x73\x75\x65\162\x20\170\x6d\154\x6e\163\x3a\163\x61\155\x6c\75\42\x75\x72\156\72\157\x61\x73\x69\163\72\x6e\141\x6d\x65\163\72\x74\x63\72\123\x41\115\114\x3a\62\x2e\60\72\x61\163\163\145\162\x74\151\x6f\x6e\42\x3e" . $PY . "\x3c\57\x73\x61\155\154\x3a\111\163\163\x75\x65\162\x3e\x3c\x73\x61\155\154\160\x3a\x4e\x61\x6d\145\111\x44\120\157\x6c\x69\143\171\40\101\x6c\x6c\157\x77\103\162\x65\x61\164\145\75\x22\164\162\x75\x65\42\40\106\x6f\162\x6d\x61\x74\x3d\x22" . $SV . "\42\xd\xa\x20\x20\x20\x20\40\x20\40\x20\40\x20\40\40\x20\x20\x20\x20\40\40\x20\x20\40\x20\40\x20\57\x3e\x3c\x2f\x73\141\x6d\154\x70\x3a\101\x75\164\x68\156\122\x65\x71\x75\x65\x73\164\76";
        return $vg;
    }
    public static function mo_saml_logout()
    {
        if (!isset($_SESSION["\x49\104\120\x5f\x49\123\123\125\x45\122"])) {
            goto Yl;
        }
        $PY = $_SESSION["\x49\x44\120\x5f\x49\123\123\x55\x45\x52"];
        Yl:
        $qX = db_query("\x53\x45\114\x45\x43\x54\40\52\x20\106\x52\117\x4d\x20\173\155\x69\156\x69\157\162\x61\x6e\x67\145\x5f\x73\x61\x6d\154\x5f\151\144\160\x5f\x6c\151\x73\164\x7d\40\x57\x48\105\x52\105\40\x6d\157\x5f\151\x64\160\x5f\151\163\x73\x75\x65\162\x20\x3d\x20\x27{$PY}\x27");
        $EV = $qX->fetchAssoc();
        $lD = $EV["\x6d\x6f\137\151\144\x70\137\x73\154\157\137\x75\x72\154"];
        $oU = $EV["\x6d\x6f\x5f\151\x64\x70\x5f\150\164\x74\x70\137\x62\x69\156\144\x69\x6e\147\x5f\163\x6c\x6f"];
        $qU = $EV["\163\x65\143\x75\x72\x69\x74\x79\x5f\x73\x69\x67\156\141\x74\165\162\x65\x5f\141\154\x67\157\x72\151\x74\x68\155"];
        libraries_load("\170\155\x6c\163\x65\143\154\x69\142\x73");
        if (empty($lD)) {
            goto nG;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto bl;
        }
        session_start();
        bl:
        if (isset($_SESSION["\155\x6f\137\163\141\155\154\137\154\x6f\147\x6f\165\164\x5f\162\145\161\x75\145\x73\164"])) {
            goto u7;
        }
        if (isset($_SESSION["\x6d\x6f\x5f\x73\x61\x6d\154"]["\154\157\147\x67\145\144\x5f\x69\x6e\137\x77\151\x74\150\x5f\x69\x64\160"])) {
            goto QL;
        }
        goto dQ;
        u7:
        goto dQ;
        QL:
        global $base_url;
        unset($_SESSION["\x6d\x6f\137\x73\141\x6d\x6c"]);
        $V6 = $_SESSION["\x73\145\x73\163\151\x6f\x6e\x49\156\144\x65\170"];
        $O_ = $_SESSION["\x4e\x61\x6d\145\x49\104"];
        $HV = variable_get("\155\151\156\151\x6f\162\141\x6e\x67\145\x5f\x73\x61\155\154\137\145\156\141\x62\154\x65\137\154\x6f\x67\x6f\165\164");
        if (!($HV == 1 || $HV == true)) {
            goto XR;
        }
        session_destroy();
        XR:
        if (!isset($_SESSION["\154\157\x67\157\x75\x74"]) && !empty($_SESSION["\x6c\x6f\x67\157\165\164"])) {
            goto Bm;
        }
        $zW = $base_url;
        goto rA;
        Bm:
        $zW = $_SESSION["\154\157\147\157\x75\x74"];
        rA:
        $UX = $base_url;
        $Bp = $EV["\x6d\157\137\x69\144\160\137\162\x65\161\x75\145\x73\164\x5f\163\x69\147\156\145\x64"];
        $jY = $lD;
        $wN = $zW;
        $pl = Utilities::createLogoutRequest($O_, $V6, $UX, $jY, $oU);
        $rv = drupal_get_path("\x6d\x6f\144\165\x6c\145", "\155\151\x6e\151\157\162\141\156\147\x65\137\x73\x61\155\x6c");
        if (empty($oU) || $oU == "\110\x54\x54\x50\55\x52\145\144\x69\x72\x65\x63\164") {
            goto CT;
        }
        if ($Bp) {
            goto SS;
        }
        $qh = base64_encode($pl);
        Utilities::postSAMLRequest($lD, $qh, $wN);
        die;
        SS:
        $cx = '';
        $t9 = '';
        $f5 = '';
        $f5 = variable_get("\x6d\x69\156\x69\157\x72\x61\x6e\147\x65\137\x73\141\155\x6c\x5f\160\165\x62\x6c\x5f\x63\145\162\164\x69\146\151\143\141\x74\145");
        $N1 = '';
        $N1 = variable_get("\x6d\x69\156\x69\157\162\141\x6e\x67\145\137\163\x61\x6d\154\x5f\160\162\151\166\x61\164\x65\x5f\143\x65\162\164\151\146\x69\143\x61\164\x65");
        if ($N1 != '') {
            goto dk;
        }
        $cx = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\162\145\163\x6f\x75\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\163\x70\x2d\153\x65\171\x2e\153\x65\x79";
        goto v1;
        dk:
        $cx = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\162\x65\x73\x6f\x75\x72\143\145\163" . DIRECTORY_SEPARATOR . "\x43\x75\x73\x74\157\155\137\x50\x72\x69\x76\x61\x74\145\x5f\x43\x65\162\164\x69\146\x69\143\x61\x74\x65\56\153\145\171";
        v1:
        if ($f5 != '') {
            goto HQ;
        }
        $t9 = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\x72\145\x73\157\x75\x72\x63\x65\x73" . DIRECTORY_SEPARATOR . "\163\x70\x2d\143\145\162\x74\151\x66\151\143\141\x74\145\x2e\x63\x72\x74";
        goto HW;
        HQ:
        $t9 = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\162\145\x73\157\165\x72\x63\145\x73" . DIRECTORY_SEPARATOR . "\103\165\x73\164\x6f\x6d\137\x50\x75\x62\154\151\x63\x5f\103\x65\x72\x74\x69\x66\x69\x63\141\164\x65\x2e\x63\162\164";
        HW:
        $qh = Utilities::signXML($pl, $t9, $cx, "\x4e\141\x6d\145\x49\x44", $qU);
        Utilities::postSAMLRequest($lD, $qh, $wN);
        goto oy;
        CT:
        $oy = $lD;
        if (strpos($lD, "\x3f") !== false) {
            goto g3;
        }
        $oy .= "\x3f";
        goto w7;
        g3:
        $oy .= "\46";
        w7:
        if ($Bp) {
            goto iy;
        }
        $oy .= "\x53\101\115\114\122\145\x71\165\x65\x73\x74\75" . $pl . "\46\x52\145\154\141\x79\123\x74\141\164\x65\75" . urlencode($wN);
        header("\114\x6f\143\x61\164\151\157\x6e\72\x20" . $oy);
        die;
        iy:
        if ($qU == "\x52\123\101\137\x53\110\x41\62\x35\66") {
            goto Qd;
        }
        if ($qU == "\x52\x53\101\137\x53\x48\x41\63\70\x34") {
            goto aV;
        }
        if ($qU == "\122\x53\101\137\x53\x48\101\65\61\x32") {
            goto m5;
        }
        if ($qU == "\x52\123\101\x5f\x53\110\x41\x31") {
            goto Za;
        }
        goto J7;
        Qd:
        $pl = "\123\101\x4d\114\122\145\x71\165\x65\163\164\75" . $pl . "\x26\x52\x65\x6c\x61\171\123\x74\x61\x74\x65\x3d" . urlencode($wN) . "\x26\x53\151\147\101\x6c\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto J7;
        aV:
        $pl = "\123\x41\x4d\114\x52\x65\161\x75\145\163\164\75" . $pl . "\x26\122\x65\154\x61\x79\123\x74\x61\x74\x65\x3d" . urlencode($wN) . "\x26\x53\x69\147\101\154\147\75" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto J7;
        m5:
        $pl = "\123\101\x4d\114\x52\145\161\x75\x65\163\164\75" . $pl . "\x26\122\x65\x6c\141\171\x53\164\x61\x74\x65\x3d" . urlencode($wN) . "\x26\x53\x69\147\101\x6c\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto J7;
        Za:
        $pl = "\x53\x41\115\x4c\122\x65\161\x75\145\163\x74\75" . $pl . "\46\122\145\154\141\171\123\164\x61\164\x65\75" . urlencode($wN) . "\46\x53\151\x67\x41\x6c\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA1);
        J7:
        $Ei = array("\x74\x79\x70\145" => "\160\162\151\x76\141\164\x65");
        if ($qU == "\x52\123\x41\137\123\110\101\62\65\x36") {
            goto HH;
        }
        if ($qU == "\122\123\x41\137\x53\110\x41\x33\x38\64") {
            goto XC;
        }
        if ($qU == "\x52\123\x41\137\123\x48\101\65\61\x32") {
            goto r9;
        }
        if ($qU == "\x52\x53\101\x5f\123\x48\101\61") {
            goto Bw;
        }
        goto xv;
        HH:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $Ei);
        goto xv;
        XC:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $Ei);
        goto xv;
        r9:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $Ei);
        goto xv;
        Bw:
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $Ei);
        xv:
        $N1 = '';
        $N1 = variable_get("\x6d\151\156\151\x6f\x72\x61\156\x67\145\x5f\x73\x61\x6d\x6c\137\160\x72\x69\166\x61\x74\x65\137\143\x65\162\x74\151\x66\x69\x63\141\164\145");
        if ($N1 != '') {
            goto YN;
        }
        $zf = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\162\x65\x73\x6f\165\162\x63\145\163" . DIRECTORY_SEPARATOR . "\x73\x70\x2d\x6b\x65\x79\56\x6b\x65\x79";
        goto QN;
        YN:
        $zf = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\x72\145\x73\157\x75\162\x63\145\x73" . DIRECTORY_SEPARATOR . "\103\x75\163\x74\x6f\155\x5f\120\x72\151\166\x61\164\x65\137\x43\145\x72\164\151\146\x69\x63\x61\x74\x65\x2e\153\x65\x79";
        QN:
        $FS->loadKey($zf, TRUE);
        $FA = new XMLSecurityDSig();
        $B7 = $FS->signData($pl);
        $B7 = base64_encode($B7);
        $oy .= $pl . "\46\x53\151\147\x6e\141\x74\165\162\145\75" . urlencode($B7);
        header("\114\157\x63\141\x74\151\x6f\156\x3a\x20" . $oy);
        die;
        oy:
        dQ:
        nG:
    }
    public static function createLogoutRequest($O_, $V6 = '', $PY, $jY, $hc = "\x48\164\164\x70\x52\145\x64\x69\x72\x65\143\164")
    {
        $vg = "\74\77\x78\155\154\40\166\145\x72\x73\x69\157\x6e\x3d\42\61\56\x30\x22\40\145\x6e\143\157\144\x69\x6e\x67\75\42\125\124\x46\x2d\70\x22\77\x3e" . "\x3c\x73\141\155\154\160\72\114\x6f\147\157\165\x74\x52\x65\x71\x75\x65\x73\164\40\170\x6d\154\x6e\163\72\163\x61\155\x6c\160\75\42\165\162\x6e\72\157\141\163\151\163\72\156\x61\x6d\145\x73\x3a\164\143\72\123\x41\x4d\x4c\72\x32\56\x30\x3a\160\162\x6f\164\157\x63\x6f\154\x22\x20\x78\155\x6c\x6e\x73\x3a\x73\x61\x6d\x6c\75\42\165\x72\x6e\x3a\157\141\x73\151\x73\x3a\x6e\x61\155\145\163\x3a\164\143\72\x53\101\115\x4c\x3a\x32\x2e\60\x3a\141\x73\x73\x65\x72\x74\151\157\x6e\42\40\x46\157\162\143\145\x41\x75\x74\150\x6e\75\42\x74\162\x75\x65\x22\x20\111\x44\75\42" . self::generateID() . "\x22\x20\111\x73\163\165\x65\x49\156\163\164\141\156\x74\x3d\x22" . self::generateTimestamp() . "\42\x20\x56\145\162\x73\x69\x6f\156\x3d\x22\x32\x2e\x30\x22\40\104\145\x73\x74\x69\x6e\x61\x74\x69\x6f\x6e\75\x22" . $jY . "\x22\x3e\xd\xa\11\x9\11\x9\x9\x9\74\x73\141\x6d\154\72\x49\163\x73\x75\145\162\x20\170\155\x6c\156\x73\x3a\163\x61\x6d\154\75\x22\x75\162\x6e\72\157\141\x73\151\163\72\x6e\141\x6d\x65\163\72\x74\143\x3a\123\101\115\x4c\x3a\x32\56\60\72\x61\163\x73\x65\162\164\x69\x6f\x6e\x22\76" . $PY . "\x3c\57\x73\141\155\x6c\x3a\x49\x73\163\165\x65\162\x3e\15\xa\11\11\x9\11\x9\11\x3c\163\141\x6d\x6c\x3a\x4e\x61\155\145\x49\104\x20\x78\155\x6c\x6e\x73\x3a\x73\x61\155\154\75\42\x75\162\156\72\157\x61\163\151\x73\72\156\x61\x6d\145\163\72\164\143\72\123\x41\115\114\72\x32\56\x30\x3a\141\x73\x73\x65\x72\x74\x69\157\x6e\x22\x3e" . $O_ . "\74\x2f\x73\141\x6d\154\72\x4e\x61\x6d\145\x49\x44\x3e";
        if (empty($V6)) {
            goto G6;
        }
        $vg .= "\74\x73\141\155\x6c\x70\x3a\x53\x65\x73\x73\151\x6f\156\x49\x6e\144\x65\x78\x3e" . $V6 . "\x3c\57\163\x61\x6d\154\160\x3a\x53\145\x73\163\x69\x6f\156\x49\x6e\x64\x65\x78\76";
        G6:
        $vg .= "\x3c\57\x73\141\x6d\x6c\x70\72\x4c\x6f\x67\157\x75\x74\122\145\161\165\145\163\164\76";
        if (!(empty($hc) || $hc == "\110\x74\x74\x70\122\x65\144\x69\x72\145\x63\x74")) {
            goto xX;
        }
        $gs = gzdeflate($vg);
        $LO = base64_encode($gs);
        $rp = urlencode($LO);
        $vg = $rp;
        xX:
        return $vg;
    }
    public static function upload_metadata($Su, $Nd = false, $we, $q6 = false, $e2 = false, $Vu = null)
    {
        global $base_url;
        require_once drupal_get_path("\155\157\144\x75\x6c\145", "\x6d\x69\156\x69\x6f\x72\141\x6e\x67\x65\137\x73\x61\x6d\x6c") . DIRECTORY_SEPARATOR . "\151\156\143\x6c\x75\x64\x65\163" . DIRECTORY_SEPARATOR . "\x4d\x65\164\x61\144\x61\164\141\x52\145\141\x64\145\162\x2e\x70\x68\x70";
        $l0 = new DOMDocument();
        $l0->loadXML($Su);
        restore_error_handler();
        $I_ = $l0->firstChild;
        $SV = "\x75\x72\156\x3a\x6f\x61\x73\151\x73\x3a\156\x61\x6d\145\x73\72\x74\143\x3a\123\101\115\114\x3a\x31\x2e\x31\x3a\x6e\141\155\x65\x69\x64\55\146\x6f\162\x6d\141\164\72\145\155\x61\x69\x6c\x41\144\144\162\145\x73\x73";
        if (empty($I_)) {
            goto CC;
        }
        $sa = new IDPMetadataReader($l0);
        $FN = $sa->getIdentityProviders();
        if (!empty($FN)) {
            goto n2;
        }
        drupal_set_message(t("\x50\154\145\x61\x73\x65\40\160\x72\157\x76\151\144\x65\40\141\x20\166\141\x6c\x69\144\40\x6d\x65\x74\141\144\x61\x74\x61\40\146\x69\154\x65\56"), error);
        return;
        n2:
        foreach ($FN as $FS => $l2) {
            $Oe = $l2->getLoginURL("\x48\x54\x54\120\55\x52\145\144\151\162\x65\x63\164");
            $lD = $l2->getLogoutURL("\x48\124\x54\120\55\x52\145\x64\151\x72\x65\x63\x74");
            if (!empty($Oe)) {
                goto We;
            }
            $Oe = $l2->getLoginURL("\x48\124\124\x50\55\x50\x4f\123\x54");
            We:
            if (!empty($lD)) {
                goto BD;
            }
            $lD = $l2->getLogoutURL("\x48\x54\124\120\55\120\117\123\124");
            BD:
            $Kd = $l2->getEntityID();
            $Qw = $l2->getSigningCertificate();
            $b0 = $base_url;
            $Bp = FALSE;
            $Sa = "\110\124\124\120\55\122\x65\x64\151\162\x65\143\164";
            $Uf = "\x48\x54\x54\120\x2d\120\117\123\x54";
            ES:
        }
        St:
        $qX = db_query("\123\105\x4c\105\x43\124\x20\52\40\106\x52\x4f\x4d\x20\173\x6d\151\x6e\x69\157\162\141\x6e\x67\x65\x5f\163\141\x6d\x6c\137\151\144\160\x5f\154\151\163\x74\175");
        $EV = $qX->fetchAll();
        $Vu = -1;
        if ($q6 == true || $q6 == 1) {
            goto Rr;
        }
        $e2 = '';
        goto jJ;
        Rr:
        $e2 = $e2;
        jJ:
        $qU = "\122\x53\x41\137\x53\x48\101\x32\65\66";
        foreach ($EV as $iU) {
            if (!($iU->mo_idp_issuer == $Kd || $iU->mo_idp_sso_url == $Oe)) {
                goto zO;
            }
            $Vu = $iU->id;
            zO:
            q1:
        }
        XX:
        if ($Vu == -1) {
            goto KM;
        }
        Utilities::Database_update($we, $Kd, $Oe, $Qw, $SV, $Bp, $Sa, $Uf, $lD, $q6, $e2, $Vu, $qU);
        goto eo;
        KM:
        Utilities::Database_insert($we, $Kd, $Oe, $Qw, $SV, $Bp, $Sa, $Uf, $lD, $q6, $e2, $qU);
        eo:
        CC:
        if ($Nd == true) {
            goto lu;
        }
        drupal_set_message(t("\120\154\145\x61\163\x65\40\160\x72\x6f\x76\x69\144\145\40\x61\x20\x76\141\x6c\x69\144\x20\155\145\x74\141\x64\x61\x74\141\40\x66\151\x6c\x65\56"), error);
        return;
        goto La;
        lu:
        drupal_set_message(t("\111\x64\x65\x6e\164\151\x74\171\40\x50\162\157\166\151\x64\145\162\40\x43\157\x6e\146\x69\x67\x75\x72\x61\164\151\x6f\156\40\163\x75\x63\143\x65\163\x73\x66\165\154\154\x79\x20\x73\x61\x76\145\x64\x2e"));
        return;
        La:
    }
    public static function Database_insert($we, $Kd, $Oe, $Qw, $SV, $Bp, $Sa, $Uf, $lD, $q6, $e2, $qU)
    {
        db_insert("\x6d\151\156\151\x6f\162\x61\156\x67\x65\x5f\163\141\155\154\x5f\151\144\x70\137\x6c\x69\x73\x74")->fields(array("\x6d\157\x5f\x69\x64\160\x5f\x6e\141\155\145" => $we, "\155\x6f\x5f\x69\x64\160\x5f\x69\x73\163\165\145\162" => $Kd, "\x6d\x6f\x5f\151\x64\160\137\163\x73\157\x5f\165\x72\x6c" => $Oe, "\155\157\x5f\151\144\x70\137\143\145\162\x74" => $Qw, "\x6d\157\137\x69\144\160\137\156\141\155\145\151\144\x5f\146\x6f\162\x6d\x61\x74" => $SV, "\155\x6f\137\x69\144\x70\137\162\145\161\x75\145\163\164\x5f\x73\x69\147\156\x65\144" => $Bp, "\155\x6f\x5f\151\x64\x70\137\x68\164\164\160\x5f\142\x69\x6e\x64\x69\x6e\x67\x5f\x73\x73\157" => $Sa, "\155\157\137\151\x64\160\x5f\x68\164\x74\x70\x5f\142\x69\156\x64\x69\156\x67\137\163\154\157" => $Uf, "\x6d\157\x5f\151\144\x70\x5f\163\154\x6f\x5f\x75\x72\x6c" => $lD, "\155\151\156\x69\x6f\162\x61\156\x67\x65\137\x73\141\x6d\x6c\137\x66\145\164\143\150\137\x6d\145\x74\x61\x64\x61\x74\x61\x5f\x74\151\x6d\145\x5f\151\156\164\145\162\166\141\x6c\163" => $q6, "\155\x69\156\151\157\x72\141\x6e\x67\x65\x5f\x73\x61\x6d\154\x5f\155\145\164\141\x5f\144\141\x74\141\137\x75\162\154" => $e2, "\163\145\143\x75\x72\151\164\x79\137\x73\151\x67\156\x61\164\165\162\x65\x5f\x61\x6c\x67\157\x72\151\x74\x68\155" => $qU))->execute();
    }
    public static function Database_update($we, $Kd, $Oe, $Qw, $SV, $Bp, $Sa, $Uf, $lD, $q6, $e2, $Vu, $qU)
    {
        db_update("\155\x69\156\151\157\162\x61\156\x67\145\137\x73\x61\x6d\154\137\x69\144\x70\137\154\x69\x73\x74")->fields(array("\155\x6f\x5f\151\144\160\x5f\x6e\141\155\x65" => $we, "\155\x6f\x5f\151\144\160\x5f\151\163\x73\165\x65\x72" => $Kd, "\x6d\x6f\137\151\x64\x70\x5f\x73\163\x6f\137\165\162\154" => $Oe, "\x6d\157\x5f\x69\x64\160\137\x63\x65\x72\x74" => $Qw, "\x6d\x6f\137\x69\x64\160\137\x6e\141\155\145\151\144\137\x66\157\x72\x6d\x61\164" => $SV, "\155\157\137\x69\144\x70\137\162\x65\161\x75\x65\163\164\x5f\163\x69\x67\x6e\145\144" => $Bp, "\155\x6f\x5f\x69\144\x70\x5f\150\x74\164\x70\137\142\151\156\144\151\156\x67\x5f\163\163\157" => $Sa, "\155\157\137\151\144\160\137\x68\164\x74\160\x5f\x62\x69\156\x64\x69\156\147\137\x73\154\157" => $Uf, "\155\x6f\x5f\x69\144\x70\x5f\163\154\x6f\x5f\x75\162\x6c" => $lD, "\155\151\x6e\x69\x6f\162\x61\x6e\x67\x65\137\163\141\155\154\x5f\146\145\x74\143\150\137\155\145\164\x61\x64\x61\164\141\x5f\164\151\x6d\145\137\151\156\164\x65\x72\166\141\x6c\x73" => $q6, "\155\151\x6e\151\x6f\x72\x61\156\147\x65\137\x73\141\155\x6c\x5f\155\x65\x74\x61\137\x64\141\x74\141\137\165\x72\154" => $e2, "\163\145\x63\165\162\151\x74\x79\x5f\x73\x69\x67\156\x61\164\x75\162\x65\137\x61\x6c\147\157\x72\x69\164\150\155" => $qU))->condition("\x69\144", $Vu, "\x3d")->execute();
    }
    public static function generateTimestamp($XO = NULL)
    {
        if (!($XO === NULL)) {
            goto Yo;
        }
        $XO = time();
        Yo:
        return gmdate("\131\55\155\x2d\144\134\124\110\x3a\x69\72\163\134\x5a", $XO);
    }
    public static function xpQuery(DOMNode $oB, $jS)
    {
        static $ix = NULL;
        if ($oB instanceof DOMDocument) {
            goto nR;
        }
        $M8 = $oB->ownerDocument;
        goto Me;
        nR:
        $M8 = $oB;
        Me:
        if (!($ix === NULL || !$ix->document->isSameNode($M8))) {
            goto Z0;
        }
        $ix = new DOMXPath($M8);
        $ix->registerNamespace("\163\x6f\x61\x70\x2d\x65\x6e\x76", "\x68\164\164\160\72\x2f\x2f\163\143\x68\145\155\141\163\56\170\155\154\x73\x6f\x61\x70\x2e\x6f\x72\147\57\163\x6f\141\160\x2f\x65\156\x76\x65\154\157\160\x65\57");
        $ix->registerNamespace("\x73\141\155\x6c\x5f\160\162\157\164\157\x63\157\x6c", "\x75\x72\156\72\x6f\x61\163\x69\x73\72\156\141\155\145\x73\72\x74\143\x3a\x53\101\115\x4c\72\x32\56\x30\72\160\162\157\x74\x6f\x63\157\154");
        $ix->registerNamespace("\x73\x61\x6d\154\x5f\141\163\x73\x65\162\x74\151\x6f\156", "\165\x72\156\72\x6f\x61\163\151\163\72\x6e\141\x6d\x65\x73\x3a\x74\x63\72\123\x41\115\x4c\72\x32\56\60\72\141\x73\163\x65\x72\x74\x69\157\156");
        $ix->registerNamespace("\x73\141\x6d\154\x5f\155\x65\164\141\144\141\164\141", "\x75\162\x6e\x3a\157\x61\163\x69\x73\72\x6e\141\155\145\x73\72\x74\x63\x3a\123\101\x4d\114\x3a\62\56\x30\x3a\155\145\x74\141\144\x61\164\x61");
        $ix->registerNamespace("\144\163", "\150\164\164\160\72\x2f\57\167\167\167\56\x77\x33\56\x6f\x72\147\x2f\62\x30\x30\x30\x2f\x30\71\57\x78\155\x6c\x64\163\151\147\x23");
        $ix->registerNamespace("\x78\145\x6e\x63", "\x68\x74\x74\160\72\x2f\x2f\167\167\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\62\60\60\x31\x2f\60\x34\57\170\155\x6c\x65\156\143\x23");
        Z0:
        $Mj = $ix->query($jS, $oB);
        $H2 = array();
        $q2 = 0;
        An:
        if (!($q2 < $Mj->length)) {
            goto R_;
        }
        $H2[$q2] = $Mj->item($q2);
        Dg:
        $q2++;
        goto An;
        R_:
        return $H2;
    }
    public static function parseNameId(DOMElement $uQ)
    {
        $H2 = array("\126\141\x6c\165\145" => trim($uQ->textContent));
        foreach (array("\116\x61\155\145\121\x75\x61\154\x69\x66\x69\x65\x72", "\x53\120\116\x61\x6d\145\121\165\x61\x6c\151\146\151\x65\x72", "\106\x6f\x72\x6d\x61\164") as $Ja) {
            if (!$uQ->hasAttribute($Ja)) {
                goto M_;
            }
            $H2[$Ja] = $uQ->getAttribute($Ja);
            M_:
            KI:
        }
        r3:
        return $H2;
    }
    public static function xsDateTimeToTimestamp($Bl)
    {
        $rs = array();
        $Mb = "\x2f\136\50\x5c\x64\x5c\x64\x5c\144\x5c\x64\51\55\50\x5c\x64\x5c\144\51\x2d\x28\134\x64\134\x64\x29\x54\x28\134\x64\134\x64\x29\72\x28\x5c\x64\x5c\x64\x29\72\x28\134\x64\134\x64\51\x28\x3f\x3a\134\56\x5c\x64\53\51\x3f\132\x24\57\x44";
        if (!(preg_match($Mb, $Bl, $rs) == 0)) {
            goto Ud;
        }
        echo sprintf("\156\166\x61\154\151\144\40\123\101\x4d\x4c\62\40\164\x69\155\x65\x73\164\141\x6d\160\40\160\x61\163\x73\x65\x64\40\x74\x6f\x20\170\163\104\x61\164\x65\124\151\x6d\x65\x54\x6f\x54\151\x6d\x65\163\164\x61\x6d\160\72\x20" . $Bl);
        die;
        Ud:
        $Qu = intval($rs[1]);
        $td = intval($rs[2]);
        $v9 = intval($rs[3]);
        $RU = intval($rs[4]);
        $Vw = intval($rs[5]);
        $Kw = intval($rs[6]);
        $SQ = gmmktime($RU, $Vw, $Kw, $td, $v9, $Qu);
        return $SQ;
    }
    public static function extractStrings(DOMElement $YA, $F9, $m9)
    {
        $H2 = array();
        $oB = $YA->firstChild;
        us:
        if (!($oB !== NULL)) {
            goto Ky;
        }
        if (!($oB->namespaceURI !== $F9 || $oB->localName !== $m9)) {
            goto UT;
        }
        goto Uw;
        UT:
        $H2[] = trim($oB->textContent);
        Uw:
        $oB = $oB->nextSibling;
        goto us;
        Ky:
        return $H2;
    }
    public static function validateElement(DOMElement $nv)
    {
        $zR = new XMLSecurityDSig();
        $zR->idKeys[] = "\x49\104";
        $OY = self::xpQuery($nv, "\56\x2f\x64\163\72\123\151\x67\156\141\x74\x75\x72\x65");
        if (count($OY) === 0) {
            goto Tq;
        }
        if (count($OY) > 1) {
            goto ue;
        }
        goto A1;
        Tq:
        return FALSE;
        goto A1;
        ue:
        echo sprintf("\130\x4d\x4c\x53\x65\143\x3a\x20\155\157\162\x65\40\x74\x68\x61\156\40\157\156\x65\40\163\x69\147\156\x61\164\x75\162\x65\40\x65\x6c\x65\x6d\x65\x6e\x74\40\151\x6e\40\162\x6f\157\164\x2e");
        die;
        A1:
        $OY = $OY[0];
        $zR->sigNode = $OY;
        $zR->canonicalizeSignedInfo();
        if ($zR->validateReference()) {
            goto xd;
        }
        echo sprintf("\x58\115\114\x73\145\143\72\x20\x64\x69\x67\x65\x73\x74\40\166\141\x6c\x69\x64\x61\x74\x69\x6f\156\x20\146\x61\151\154\x65\144");
        die;
        xd:
        $oR = FALSE;
        foreach ($zR->getValidatedNodes() as $Aa) {
            if ($Aa->isSameNode($nv)) {
                goto jv;
            }
            if ($nv->parentNode instanceof DOMDocument && $Aa->isSameNode($nv->ownerDocument)) {
                goto qD;
            }
            goto Nt;
            jv:
            $oR = TRUE;
            goto Ne;
            goto Nt;
            qD:
            $oR = TRUE;
            goto Ne;
            Nt:
            G8:
        }
        Ne:
        if ($oR) {
            goto uL;
        }
        echo sprintf("\x58\115\x4c\123\x65\x63\72\x20\x54\150\145\40\162\157\x6f\164\x20\145\154\145\155\x65\x6e\x74\40\151\163\x20\156\157\x74\x20\163\151\x67\156\145\144\x2e");
        die;
        uL:
        $IU = array();
        foreach (self::xpQuery($OY, "\x2e\57\x64\163\72\x4b\145\x79\x49\x6e\146\157\x2f\144\163\x3a\x58\x35\x30\71\x44\x61\164\141\x2f\144\163\72\x58\65\x30\71\103\145\x72\164\x69\x66\x69\143\141\164\145") as $Cd) {
            $ik = trim($Cd->textContent);
            $ik = str_replace(array("\xd", "\xa", "\11", "\x20"), '', $ik);
            $IU[] = $ik;
            he:
        }
        eP:
        $H2 = array("\x53\151\x67\x6e\141\x74\x75\162\x65" => $zR, "\103\145\x72\x74\x69\146\151\143\141\164\x65\x73" => $IU);
        return $H2;
    }
    public static function validateSignature(array $Fh, XMLSecurityKey $FS)
    {
        $zR = $Fh["\123\x69\x67\156\141\164\165\162\x65"];
        $u7 = self::xpQuery($zR->sigNode, "\56\x2f\144\x73\x3a\x53\151\147\x6e\x65\144\111\x6e\x66\157\x2f\x64\163\72\x53\x69\x67\156\141\164\x75\162\145\x4d\145\x74\150\157\144");
        if (!empty($u7)) {
            goto CK;
        }
        echo sprintf("\x4d\x69\163\x73\x69\x6e\x67\40\123\x69\x67\x6e\141\164\x75\162\x65\x4d\145\164\x68\157\x64\x20\145\x6c\x65\x6d\145\156\x74");
        die;
        CK:
        $u7 = $u7[0];
        if ($u7->hasAttribute("\x41\x6c\147\x6f\162\x69\164\x68\155")) {
            goto hN;
        }
        echo sprintf("\115\151\x73\x73\x69\x6e\x67\40\x41\x6c\x67\x6f\x72\x69\x74\150\x6d\55\141\x74\164\x72\151\142\x75\x74\x65\x20\157\156\40\x53\x69\147\156\141\164\165\x72\x65\115\145\x74\150\x6f\x64\40\x65\x6c\145\155\145\156\x74\x2e");
        die;
        hN:
        $JF = $u7->getAttribute("\101\154\x67\157\x72\151\x74\x68\x6d");
        if (!($FS->type === XMLSecurityKey::RSA_SHA1 && $JF !== $FS->type)) {
            goto FK;
        }
        $FS = self::castKey($FS, $JF);
        FK:
        if ($zR->verify($FS)) {
            goto Dv;
        }
        echo sprintf("\125\156\141\x62\x6c\145\x20\x74\x6f\40\x76\x61\154\151\144\141\164\x65\40\x53\147\156\x61\164\165\x72\x65");
        die;
        Dv:
    }
    public static function castKey(XMLSecurityKey $FS, $cF, $NS = "\x70\x75\x62\154\151\143")
    {
        if (!($FS->type === $cF)) {
            goto KB;
        }
        return $FS;
        KB:
        $HT = openssl_pkey_get_details($FS->key);
        if (!($HT === FALSE)) {
            goto NO;
        }
        echo sprintf("\125\x6e\x61\142\154\145\40\164\x6f\40\x67\145\x74\40\x6b\x65\x79\x20\x64\x65\x74\141\x69\154\x73\40\146\162\x6f\155\40\x58\x4d\114\123\145\143\x75\162\x69\x74\171\113\x65\x79\x2e");
        die;
        NO:
        if (isset($HT["\x6b\145\x79"])) {
            goto be;
        }
        echo sprintf("\x4d\x69\163\x73\151\x6e\x67\40\x6b\x65\171\40\x69\x6e\40\160\165\142\154\151\x63\40\x6b\145\x79\40\x64\x65\164\x61\151\x6c\163\x2e");
        die;
        be:
        $w1 = new XMLSecurityKey($cF, array("\164\x79\x70\x65" => $NS));
        $w1->loadKey($HT["\153\145\171"]);
        return $w1;
    }
    public static function processResponse($f4, $iT, $vG, SAML2_Response $wH, $ld)
    {
        $xR = $wH->getDestination();
        if (!($xR !== NULL && $xR !== $f4)) {
            goto lV;
        }
        echo sprintf("\104\x65\163\164\151\156\141\164\151\x6f\156\40\151\x6e\40\162\x65\x73\160\157\x6e\163\x65\40\144\x6f\145\x73\x6e\x27\164\40\155\x61\164\143\150\40\164\150\145\40\143\165\162\162\x65\x6e\164\40\x55\122\x4c\56\x20\104\145\x73\x74\151\156\x61\x74\151\157\x6e\40\x69\x73\x20\42" . $xR . "\42\54\x20\143\x75\162\x72\x65\156\x74\40\x55\x52\114\40\151\x73\x20\x22" . $f4 . "\x22\56");
        die;
        lV:
        $P0 = self::checkSign($iT, $vG, $ld);
        return $P0;
    }
    public static function checkSign($iT, $vG, $ld)
    {
        $IU = $vG["\x43\x65\x72\164\x69\x66\151\x63\141\x74\145\x73"];
        if (!(count($IU) === 0)) {
            goto vM;
        }
        return FALSE;
        vM:
        $Nv = self::findCertificate($iT, $IU, $ld);
        $VS = NULL;
        $FS = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\160\145" => "\160\x75\x62\154\x69\x63"));
        $FS->loadKey($Nv);
        try {
            self::validateSignature($vG, $FS);
            return TRUE;
        } catch (Exception $H5) {
            $VS = $H5;
        }
        if ($VS !== NULL) {
            goto bA;
        }
        return FALSE;
        goto VE;
        bA:
        throw $VS;
        VE:
    }
    private static function findCertificate(string $ph, array $IU, $ld)
    {
        $fM = $IU[0];
        $fM = chunk_split($fM, 80);
        foreach ($IU as $hR) {
            $lV = strtolower(sha1(base64_decode($hR)));
            if (!(strcmp($lV, $ph) == 0)) {
                goto W1;
            }
            $Xt = "\x2d\55\x2d\55\x2d\102\x45\107\111\116\40\103\105\x52\124\x49\106\111\103\x41\x54\x45\x2d\x2d\55\x2d\55\12" . chunk_split($hR, 64) . "\x2d\x2d\55\x2d\55\x45\x4e\x44\x20\103\105\x52\x54\111\x46\x49\103\101\124\x45\55\x2d\x2d\55\x2d\12";
            return $Xt;
            W1:
            tA:
        }
        pu:
        if ($ld == "\164\145\163\x74\x56\141\154\x69\x64\141\164\x65") {
            goto jf;
        }
        echo "\x20\74\144\x69\x76\40\x73\164\171\154\x65\x3d\42\x63\x6f\154\x6f\x72\x3a\40\x23\x61\71\x34\x34\x34\x32\73\x66\x6f\x6e\x74\55\163\x69\x7a\x65\72\61\64\x70\x74\73\x20\x6d\141\x72\147\151\x6e\x2d\x62\x6f\164\164\x6f\155\72\62\60\160\170\x3b\x22\x3e\x3c\x70\76\74\x73\164\x72\x6f\156\x67\76\105\x72\x72\157\x72\72\x20\x3c\x2f\163\164\162\157\x6e\x67\x3e\x57\145\40\143\157\x75\x6c\x64\x20\156\157\x74\40\x73\151\147\156\40\x79\x6f\165\x20\x69\x6e\56\40\120\x6c\145\x61\x73\145\40\x63\x6f\156\164\x61\x63\164\40\x79\157\x75\162\x20\x41\x64\155\x69\156\151\x73\164\162\141\x74\x6f\x72\x2e\x3c\x2f\x70\76\74\x2f\144\151\x76\x3e";
        die;
        goto yw;
        jf:
        echo "\74\144\x69\x76\x20\x73\x74\x79\154\145\x3d\x22\x66\x6f\x6e\x74\55\x66\141\155\151\154\171\x3a\x43\x61\154\151\x62\162\151\x3b\160\141\144\x64\151\156\x67\72\60\40\x33\45\73\x22\76";
        echo "\74\144\151\x76\40\163\x74\171\154\x65\x3d\42\x63\x6f\x6c\157\162\x3a\40\x23\x61\x39\64\64\x34\x32\73\142\141\x63\153\x67\x72\157\165\156\144\55\143\x6f\154\157\162\72\40\43\146\62\x64\x65\144\145\x3b\160\x61\144\x64\x69\x6e\147\x3a\x20\x31\65\x70\x78\73\x6d\141\x72\x67\151\156\55\142\x6f\164\164\x6f\x6d\x3a\40\x32\60\160\x78\x3b\164\x65\x78\x74\55\x61\154\151\x67\x6e\72\x63\x65\156\164\x65\162\73\x62\x6f\x72\144\145\x72\x3a\61\x70\170\40\x73\x6f\154\151\144\40\x23\x45\66\x42\63\102\62\73\146\x6f\x6e\x74\x2d\163\x69\x7a\x65\x3a\x31\x38\x70\164\73\x22\x3e\40\105\122\122\x4f\122\74\57\144\151\166\76\15\xa\x20\x20\x20\x20\40\x20\x20\x20\40\40\x20\x3c\144\x69\x76\x20\163\x74\171\x6c\x65\x3d\42\x63\157\x6c\157\162\x3a\x20\x23\x61\71\64\x34\64\62\x3b\x66\157\156\164\x2d\x73\x69\172\x65\x3a\61\x34\x70\164\x3b\x20\155\141\162\147\x69\156\x2d\x62\157\x74\164\157\x6d\72\62\60\x70\x78\x3b\x22\76\74\160\x3e\x3c\x73\x74\162\157\x6e\147\76\x45\162\x72\x6f\162\72\x20\74\57\x73\x74\x72\157\156\x67\76\125\x6e\141\142\x6c\145\40\x74\x6f\40\146\151\x6e\x64\x20\141\40\143\145\162\164\151\x66\151\143\141\x74\145\x20\155\x61\164\143\150\151\x6e\147\x20\164\150\145\40\x63\x6f\156\x66\151\147\x75\162\145\144\x20\x66\151\156\x67\145\x72\160\x72\x69\156\x74\x2e\74\x2f\160\76\xd\12\40\x20\x20\x20\40\40\x20\x20\x20\x20\x20\x3c\160\x3e\x3c\163\164\162\x6f\156\147\76\120\157\x73\163\x69\142\154\145\x20\x43\141\165\x73\145\72\40\x3c\x2f\x73\164\162\157\x6e\147\x3e\103\x6f\156\x74\145\156\x74\x20\157\146\40\47\130\56\65\x30\71\40\x43\145\x72\164\151\x66\151\x63\x61\164\x65\x27\x20\146\x69\x65\x6c\144\40\151\x6e\40\x53\145\162\166\x69\x63\x65\x20\x50\x72\157\x76\151\144\145\162\40\x53\145\x74\164\151\156\x67\x73\40\x69\163\40\151\156\x63\x6f\162\162\145\x63\x74\74\57\160\76\15\12\x9\x9\11\40\40\40\x20\40\40\x3c\160\76\x3c\142\x3e\x45\170\x70\x65\143\164\x65\144\40\166\141\x6c\165\x65\x3a\40\74\x2f\142\x3e" . $fM . "\x3c\x2f\x70\76";
        echo str_repeat("\46\x6e\142\163\160\x3b", 15);
        echo "\x3c\x2f\144\151\x76\76\15\xa\x20\40\40\40\40\40\40\x20\40\40\x20\x20\x20\40\40\x20\74\x64\x69\166\x20\x73\164\171\x6c\x65\75\x22\155\x61\162\147\x69\x6e\x3a\x33\45\x3b\144\151\163\x70\154\x61\x79\72\142\154\x6f\x63\153\x3b\x74\x65\170\164\x2d\141\x6c\x69\x67\x6e\x3a\143\145\x6e\x74\145\162\73\x22\x3e\xd\12\x20\40\40\40\40\x20\x20\40\x20\40\40\x20\40\x20\x20\40\x3c\146\x6f\162\x6d\40\x61\143\x74\151\157\x6e\75\42\151\156\144\x65\x78\x2e\x70\150\160\42\76\15\12\x20\x20\x20\x20\x20\x20\x20\40\40\x20\40\40\40\x20\40\x20\x3c\x64\151\x76\40\x73\x74\171\x6c\x65\x3d\42\x6d\141\x72\147\x69\x6e\x3a\x33\45\73\x64\x69\163\160\x6c\141\x79\x3a\x62\x6c\x6f\x63\x6b\x3b\164\x65\170\164\55\141\x6c\x69\x67\x6e\x3a\143\145\x6e\164\145\162\x3b\x22\76\x3c\x69\156\160\x75\164\40\x73\x74\171\154\145\x3d\42\160\141\144\144\x69\x6e\x67\72\x31\45\73\167\151\144\164\150\x3a\61\x30\x30\160\x78\x3b\x62\141\143\x6b\x67\162\157\x75\156\x64\x3a\40\x23\60\x30\71\x31\x43\104\x20\x6e\157\x6e\145\x20\162\145\160\x65\141\x74\x20\163\x63\x72\157\x6c\x6c\x20\60\x25\40\60\x25\73\143\x75\x72\163\x6f\162\x3a\x20\x70\x6f\151\156\164\x65\162\x3b\x66\x6f\x6e\x74\x2d\x73\151\x7a\x65\x3a\x31\65\x70\170\x3b\142\x6f\x72\x64\145\162\55\x77\151\144\x74\150\72\x20\61\x70\x78\73\x62\157\162\144\x65\162\55\x73\x74\171\154\145\72\40\x73\157\x6c\151\144\x3b\142\157\162\x64\x65\x72\55\x72\x61\x64\151\x75\163\72\x20\x33\x70\x78\x3b\167\150\151\x74\145\x2d\x73\160\x61\x63\145\x3a\40\156\157\167\162\x61\160\x3b\142\x6f\170\x2d\x73\x69\172\x69\x6e\147\72\40\142\157\x72\144\x65\x72\55\142\157\170\x3b\x62\157\x72\144\x65\x72\x2d\143\157\x6c\x6f\x72\x3a\x20\43\x30\x30\x37\63\101\x41\x3b\142\x6f\x78\x2d\163\150\141\144\157\167\x3a\x20\x30\160\170\40\61\x70\170\x20\x30\x70\170\x20\162\147\142\141\x28\x31\x32\60\x2c\40\62\60\60\x2c\x20\62\63\x30\54\40\60\x2e\66\x29\40\151\156\x73\145\x74\x3b\143\x6f\x6c\x6f\x72\x3a\x20\x23\106\106\x46\x3b\42\x74\x79\160\145\x3d\x22\x62\x75\x74\x74\157\x6e\x22\x20\x76\x61\154\165\x65\x3d\42\104\x6f\x6e\145\42\40\x6f\x6e\x43\x6c\x69\x63\153\x3d\42\163\145\154\146\56\x63\154\157\163\x65\x28\x29\73\42\x3e\74\x2f\x64\151\166\76";
        die;
        yw:
    }
    public static function validateIssuerAndAudience($AZ, $ni, $YM, $base_url, $ld)
    {
        $PY = current($AZ->getAssertions())->getIssuer();
        $fR = current(current($AZ->getAssertions())->getValidAudiences());
        if (strcmp($YM, $PY) === 0) {
            goto zk;
        }
        if ($ld == "\164\145\163\x74\x56\141\154\x69\144\x61\164\x65") {
            goto aR;
        }
        echo "\40\x3c\144\x69\166\40\x73\164\x79\154\x65\x3d\x22\143\157\154\157\162\72\40\43\141\x39\x34\x34\64\62\73\146\x6f\156\164\x2d\x73\151\x7a\145\x3a\61\x34\160\164\x3b\40\x6d\141\x72\147\151\156\x2d\142\157\164\x74\157\x6d\x3a\x32\x30\x70\x78\x3b\x22\76\x3c\160\x3e\x3c\163\164\162\x6f\156\147\x3e\105\x72\x72\157\162\x3a\x20\x3c\x2f\163\164\162\157\x6e\147\76\127\x65\40\x63\157\x75\x6c\144\40\x6e\157\x74\40\163\151\x67\x6e\x20\x79\157\165\x20\151\x6e\x2e\40\x50\x6c\x65\x61\x73\x65\x20\143\x6f\156\164\141\143\x74\x20\171\157\165\162\x20\x41\x64\155\151\156\x69\x73\x74\x72\141\164\157\162\56\x3c\x2f\160\x3e\x3c\57\144\x69\166\x3e\xd\xa\x20\x20\x20\x20\x20\x20\40\x20\x20\x20\40\40\x20\x20\x20\x20\x20\74\144\x69\x76\x20\x73\x74\x79\x6c\145\75\x22\x6d\x61\162\x67\x69\156\x3a\63\x25\73\144\151\163\x70\154\x61\x79\x3a\x62\x6c\x6f\143\x6b\x3b\164\x65\x78\x74\x2d\141\x6c\151\x67\156\72\143\145\156\x74\x65\162\73\x22\76";
        die;
        goto OW;
        aR:
        ob_end_clean();
        echo "\x3c\x64\151\166\x20\x73\164\171\x6c\145\x3d\x22\146\157\x6e\x74\55\x66\x61\155\x69\x6c\x79\72\103\x61\154\151\x62\162\151\x3b\x70\x61\144\x64\x69\x6e\x67\72\60\40\x33\45\x3b\42\76";
        echo "\74\x64\151\166\x20\x73\x74\x79\154\145\75\x22\x63\157\x6c\157\162\x3a\40\x23\141\71\x34\x34\64\x32\73\x62\x61\143\153\147\x72\157\x75\x6e\x64\55\x63\x6f\x6c\157\x72\x3a\x20\43\146\x32\x64\x65\x64\x65\73\x70\x61\x64\x64\151\x6e\147\x3a\40\61\x35\160\170\73\x6d\141\162\x67\151\156\x2d\x62\x6f\164\x74\157\x6d\72\x20\x32\x30\x70\x78\x3b\164\145\170\164\55\141\x6c\x69\x67\156\72\x63\x65\156\164\145\x72\x3b\x62\x6f\162\144\145\x72\72\61\160\170\x20\x73\x6f\x6c\x69\x64\x20\43\105\x36\x42\63\x42\62\73\x66\157\x6e\x74\55\163\151\x7a\x65\x3a\x31\70\x70\x74\73\42\76\x20\x45\122\122\117\x52\74\x2f\144\x69\166\x3e\xd\12\x20\x20\x20\40\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\74\144\x69\x76\x20\x73\x74\171\x6c\x65\75\42\143\x6f\x6c\157\x72\x3a\x20\x23\141\71\x34\x34\x34\x32\x3b\146\157\156\x74\x2d\163\151\172\145\x3a\x31\x34\160\164\x3b\40\155\x61\162\x67\151\156\x2d\142\x6f\x74\164\x6f\155\x3a\62\60\160\170\73\42\x3e\x3c\x70\76\74\163\x74\162\x6f\x6e\x67\x3e\x45\x72\162\x6f\162\x3a\x20\74\x2f\163\164\162\x6f\x6e\x67\76\x49\163\163\165\145\162\x20\143\x61\x6e\x6e\157\x74\40\142\x65\40\166\145\162\151\x66\151\x65\144\56\x3c\57\160\x3e\15\12\x20\x20\x20\40\40\x20\40\40\40\x20\x20\40\x20\x20\40\74\x70\76\120\154\x65\141\163\145\40\x63\x6f\156\164\141\x63\164\40\171\157\165\x72\x20\x61\x64\x6d\x69\156\x69\x73\x74\x72\x61\x74\157\x72\x20\x61\156\x64\40\x72\145\160\157\162\x74\x20\x74\150\x65\x20\x66\157\x6c\154\x6f\167\x69\156\147\40\x65\162\162\157\x72\72\74\57\x70\x3e\xd\12\x20\x20\40\x20\40\x20\40\x20\40\x20\40\40\x20\x20\40\x3c\x70\76\74\x73\x74\x72\157\156\147\76\120\157\163\x73\151\x62\x6c\145\x20\103\x61\165\x73\145\72\x20\74\x2f\x73\164\x72\157\156\147\x3e\124\x68\145\x20\x76\141\x6c\x75\145\40\151\156\x20\47\111\144\x50\40\105\x6e\x74\x69\164\x79\40\x49\x44\x20\157\x72\x20\x49\163\x73\165\x65\162\47\40\146\x69\x65\x6c\144\x20\x69\156\40\x53\145\x72\166\151\x63\145\x20\120\162\157\x76\x69\144\x65\162\40\123\x65\164\164\151\156\x67\163\x20\x69\163\x20\x69\156\143\157\162\162\145\143\164\x3c\x2f\x70\76\15\12\x20\x20\x20\x20\40\x20\40\x20\x20\40\40\x20\x20\40\40\x3c\160\x3e\x3c\163\x74\x72\157\156\x67\x3e\x45\170\160\145\x63\x74\145\x64\40\105\156\164\x69\x74\171\40\111\104\72\40\x3c\57\163\164\x72\157\x6e\147\76" . $PY . "\74\160\x3e\xd\12\40\x20\40\40\x20\40\40\x20\x20\40\x20\40\x20\x20\x20\x3c\160\x3e\x3c\x73\164\162\157\x6e\147\x3e\x45\x6e\164\x69\164\171\40\111\x44\x20\x46\x6f\x75\x6e\x64\x3a\40\74\x2f\163\164\162\157\156\x67\76" . $YM . "\74\x2f\x70\x3e\15\12\40\x20\40\40\40\40\x20\x20\x20\40\x20\x20\40\x20\40\x3c\57\x64\151\166\x3e\xd\xa\40\40\x20\x20\x20\x20\x20\40\40\40\40\x20\40\40\x20\x3c\144\151\166\40\x73\x74\x79\x6c\x65\x3d\42\x6d\x61\x72\x67\x69\156\72\63\x25\x3b\144\x69\163\x70\154\x61\x79\x3a\x62\154\157\143\x6b\73\164\145\x78\x74\x2d\x61\x6c\x69\x67\x6e\72\143\x65\156\164\145\x72\x3b\x22\76\xd\xa\40\40\x20\x20\40\x20\40\x20\x20\40\40\40\x20\x20\x20\74\x64\x69\x76\40\163\164\171\x6c\x65\75\42\155\141\162\147\151\x6e\x3a\63\x25\x3b\x64\151\x73\x70\154\141\171\x3a\x62\x6c\x6f\143\153\x3b\x74\x65\170\164\x2d\x61\x6c\x69\147\156\72\143\x65\156\x74\145\x72\x3b\42\76\74\151\x6e\x70\165\x74\40\163\164\x79\x6c\145\75\42\x70\x61\144\x64\x69\x6e\x67\x3a\x31\45\73\167\x69\x64\x74\x68\72\61\x30\60\160\170\x3b\x62\x61\x63\153\147\x72\157\x75\x6e\x64\72\40\43\x30\x30\x39\x31\103\x44\x20\x6e\x6f\x6e\145\x20\x72\x65\x70\x65\141\164\40\x73\x63\162\x6f\x6c\154\40\x30\45\x20\60\x25\x3b\x63\x75\162\x73\x6f\x72\x3a\40\x70\x6f\151\x6e\x74\145\x72\x3b\x66\x6f\x6e\x74\55\x73\x69\x7a\x65\x3a\61\x35\160\x78\x3b\142\157\x72\x64\x65\x72\55\x77\151\144\164\x68\x3a\x20\x31\160\x78\x3b\142\x6f\x72\x64\x65\162\55\163\x74\171\154\145\x3a\x20\x73\x6f\154\151\x64\73\142\x6f\x72\144\x65\162\55\x72\x61\x64\x69\165\163\x3a\x20\63\160\x78\73\167\150\x69\164\x65\x2d\x73\x70\141\143\145\72\40\x6e\x6f\x77\x72\141\x70\73\142\157\x78\x2d\x73\151\172\x69\156\147\x3a\x20\x62\157\162\x64\x65\162\x2d\x62\157\x78\x3b\142\x6f\x72\144\x65\x72\x2d\x63\x6f\x6c\157\x72\x3a\x20\43\x30\x30\x37\x33\101\101\73\142\157\170\55\x73\150\x61\x64\157\167\x3a\x20\x30\x70\x78\x20\x31\160\170\40\60\x70\170\x20\x72\x67\x62\x61\50\61\62\60\54\x20\62\x30\x30\54\40\62\x33\60\54\40\60\x2e\x36\x29\40\151\156\163\x65\x74\x3b\143\157\154\157\x72\72\40\x23\106\106\106\73\x22\164\171\160\x65\75\x22\x62\165\x74\164\157\x6e\x22\x20\x76\141\154\x75\x65\75\x22\x44\157\x6e\145\42\x20\x6f\156\103\154\151\x63\153\x3d\42\x73\x65\154\x66\x2e\x63\154\x6f\163\145\50\51\73\42\x3e\74\x2f\x64\x69\166\x3e";
        die;
        OW:
        goto S3;
        zk:
        if (strcmp($fR, $base_url) === 0) {
            goto w8;
        }
        echo sprintf("\111\x6e\x76\141\154\151\144\x20\141\165\x64\151\x65\x6e\x63\145");
        die;
        goto Nr;
        w8:
        return TRUE;
        Nr:
        S3:
    }
    private static function doDecryptElement(DOMElement $rP, XMLSecurityKey $ln, array &$su)
    {
        $tQ = new XMLSecEnc();
        $tQ->setNode($rP);
        $tQ->type = $rP->getAttribute("\124\x79\x70\145");
        $HH = $tQ->locateKey($rP);
        if ($HH) {
            goto YA;
        }
        echo sprintf("\103\157\x75\x6c\144\40\156\x6f\164\x20\x6c\x6f\x63\141\x74\x65\x20\x6b\x65\x79\40\141\154\147\157\x72\151\164\150\x6d\x20\151\156\40\x65\156\143\x72\x79\160\x74\x65\x64\40\144\x61\164\x61\56");
        die;
        YA:
        $rn = $tQ->locateKeyInfo($HH);
        if ($rn) {
            goto pD;
        }
        echo sprintf("\x43\x6f\165\154\144\40\x6e\x6f\164\x20\154\157\143\141\x74\145\x20\x3c\x64\163\x69\147\72\x4b\x65\171\x49\x6e\x66\x6f\x3e\x20\x66\157\x72\40\x74\150\x65\x20\145\156\143\x72\x79\x70\164\x65\x64\x20\153\x65\171\x2e");
        die;
        pD:
        $vi = $ln->getAlgorith();
        if ($rn->isEncrypted) {
            goto dq;
        }
        $mM = $HH->getAlgorith();
        if (!($vi !== $mM)) {
            goto f6;
        }
        echo sprintf("\101\154\x67\x6f\x72\151\x74\x68\155\x20\x6d\x69\163\155\x61\164\143\x68\40\142\x65\x74\x77\145\x65\x6e\40\x69\156\160\x75\164\40\x6b\x65\171\x20\x61\156\144\40\153\x65\x79\x20\x69\x6e\40\155\145\163\163\x61\x67\145\56\x20" . "\x4b\x65\x79\40\x77\141\163\72\x20" . var_export($vi, TRUE) . "\73\40\155\x65\163\163\141\x67\x65\x20\167\x61\163\x3a\x20" . var_export($mM, TRUE));
        die;
        f6:
        $HH = $ln;
        goto wj;
        dq:
        $h_ = $rn->getAlgorith();
        if (!in_array($h_, $su, TRUE)) {
            goto nn;
        }
        echo sprintf("\x41\154\147\x6f\162\151\164\x68\155\40\144\x69\163\141\142\x6c\145\144\x3a\x20" . var_export($h_, TRUE));
        die;
        nn:
        if (!($h_ === XMLSecurityKey::RSA_OAEP_MGF1P && $vi === XMLSecurityKey::RSA_1_5)) {
            goto l0;
        }
        $vi = XMLSecurityKey::RSA_OAEP_MGF1P;
        l0:
        if (!($vi !== $h_)) {
            goto Lq;
        }
        echo sprintf("\x41\154\147\x6f\162\151\164\x68\155\40\x6d\x69\x73\155\141\164\x63\x68\40\x62\x65\x74\x77\x65\x65\156\x20\151\x6e\x70\165\164\x20\153\x65\x79\40\141\x6e\144\40\153\x65\x79\x20\165\163\145\x64\x20\164\x6f\x20\x65\x6e\143\162\x79\x70\164\x20" . "\x20\x74\x68\145\x20\x73\171\x6d\155\145\x74\x72\x69\143\x20\153\x65\x79\40\x66\x6f\x72\x20\164\150\145\40\x6d\x65\x73\x73\141\x67\145\56\x20\113\145\171\40\167\141\x73\x3a\40" . var_export($vi, TRUE) . "\73\x20\x6d\x65\163\x73\x61\x67\145\40\x77\141\163\x3a\40" . var_export($h_, TRUE));
        die;
        Lq:
        $s_ = $rn->encryptedCtx;
        $rn->key = $ln->key;
        $an = $HH->getSymmetricKeySize();
        if (!($an === NULL)) {
            goto rZ;
        }
        echo sprintf("\125\x6e\153\156\x6f\x77\156\40\153\145\171\40\163\151\172\145\40\x66\x6f\x72\x20\145\x6e\143\x72\171\x70\x74\x69\x6f\x6e\40\141\x6c\x67\x6f\x72\x69\164\x68\x6d\72\x20" . var_export($HH->type, TRUE));
        die;
        rZ:
        try {
            $FS = $s_->decryptKey($rn);
            if (!(strlen($FS) != $an)) {
                goto qB;
            }
            echo sprintf("\x55\156\x65\x78\160\x65\143\164\145\x64\40\153\x65\x79\40\163\x69\172\145\40\x28" . strlen($FS) * 8 . "\x62\x69\164\x73\51\40\x66\x6f\x72\40\x65\x6e\x63\162\171\x70\x74\151\x6f\156\40\141\154\x67\x6f\162\151\x74\x68\155\72\40" . var_export($HH->type, TRUE));
            die;
            qB:
        } catch (Exception $H5) {
            $jg = $s_->getCipherValue();
            $hg = openssl_pkey_get_details($rn->key);
            $hg = sha1(serialize($hg), TRUE);
            $FS = sha1($jg . $hg, TRUE);
            if (strlen($FS) > $an) {
                goto Rs;
            }
            if (strlen($FS) < $an) {
                goto F4;
            }
            goto ni;
            Rs:
            $FS = substr($FS, 0, $an);
            goto ni;
            F4:
            $FS = str_pad($FS, $an);
            ni:
        }
        $HH->loadkey($FS);
        wj:
        $cF = $HH->getAlgorith();
        if (!in_array($cF, $su, TRUE)) {
            goto LV;
        }
        echo sprintf("\x41\154\147\157\x72\151\164\x68\155\40\x64\151\x73\x61\x62\x6c\x65\144\x3a\x20" . var_export($cF, TRUE));
        die;
        LV:
        $R5 = $tQ->decryptNode($HH, FALSE);
        $uQ = "\x3c\x72\x6f\157\x74\40\170\x6d\154\x6e\x73\x3a\x73\141\155\x6c\75\x22\x75\162\x6e\72\x6f\141\x73\151\x73\72\x6e\x61\x6d\x65\x73\72\164\x63\72\x53\x41\x4d\114\x3a\x32\x2e\60\x3a\x61\x73\x73\145\x72\164\x69\157\x6e\x22\x20" . "\x78\155\154\156\x73\x3a\x78\x73\x69\75\42\x68\164\x74\x70\x3a\x2f\x2f\167\x77\167\x2e\x77\x33\56\x6f\x72\147\x2f\x32\x30\x30\61\x2f\x58\x4d\114\123\143\150\x65\x6d\141\55\x69\156\163\x74\141\x6e\x63\x65\42\x3e" . $R5 . "\74\x2f\162\x6f\157\164\76";
        $xF = new DOMDocument();
        if (@$xF->loadXML($uQ)) {
            goto LF;
        }
        throw new Exception("\106\x61\151\154\145\x64\40\x74\x6f\x20\x70\x61\162\x73\x65\x20\x64\145\x63\x72\x79\x70\164\x65\x64\40\x58\x4d\x4c\x2e\40\x4d\141\171\142\x65\40\x74\150\145\x20\167\x72\x6f\x6e\x67\x20\163\150\141\162\145\144\x6b\x65\171\40\167\x61\x73\40\x75\x73\x65\x64\x3f");
        LF:
        $W7 = $xF->firstChild->firstChild;
        if (!($W7 === NULL)) {
            goto BK;
        }
        echo sprintf("\x4d\x69\x73\163\x69\156\147\x20\x65\156\x63\x72\171\x70\164\145\x64\x20\x65\154\145\155\x65\x6e\x74\56");
        throw new Exception("\115\151\x73\x73\x69\156\x67\x20\145\156\143\x72\x79\160\x74\145\x64\x20\145\154\x65\155\145\x6e\x74\x2e");
        BK:
        if ($W7 instanceof DOMElement) {
            goto SV;
        }
        echo sprintf("\104\145\x63\x72\171\x70\x74\x65\x64\x20\145\x6c\145\x6d\x65\156\x74\x20\x77\141\163\40\x6e\157\164\40\141\x63\164\x75\x61\x6c\x6c\171\x20\141\x20\x44\117\x4d\x45\154\145\155\x65\156\x74\x2e");
        SV:
        return $W7;
    }
    public static function decryptElement(DOMElement $rP, XMLSecurityKey $ln, array $su = array(), XMLSecurityKey $yc = NULL)
    {
        try {
            return self::doDecryptElement($rP, $ln, $su);
        } catch (Exception $H5) {
            try {
                return self::doDecryptElement($rP, $yc, $su);
            } catch (Exception $X8) {
                $rv = drupal_get_path("\155\x6f\x64\x75\x6c\145", "\155\151\156\151\x6f\x72\141\156\x67\145\137\163\x61\x6d\x6c");
                $t9 = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $rv . DIRECTORY_SEPARATOR . "\162\x65\163\x6f\x75\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\163\160\x2d\143\145\x72\164\151\x66\x69\143\141\164\x65\56\143\162\164";
                $ed = variable_get("\155\151\156\x69\157\x72\x61\156\x67\145\137\163\x61\x6d\x6c\x5f\x70\x75\x62\154\x5f\143\x65\162\164\151\146\x69\x63\x61\164\145", '');
                if (!empty($ed)) {
                    goto il;
                }
                $fM = file_get_contents($t9);
                $pH = "\x3c\x73\164\x72\x6f\156\147\x3e\x50\157\x73\163\151\x62\x6c\145\40\103\141\x75\x73\145\72\x20\x3c\57\163\x74\162\x6f\156\x67\76\111\146\40\171\x6f\x75\40\x68\x61\x76\145\40\162\x65\x6d\157\x76\x65\x64\x20\x63\x75\163\x74\x6f\155\40\143\145\x72\x74\x69\146\x69\x63\141\164\x65\40\x74\x68\x65\156\x20\160\x6c\145\141\x73\145\40\165\x70\144\x61\164\145\x20\x74\150\x69\163\x20\x64\x65\146\x61\x75\x6c\x74\40\x70\x75\142\154\151\143\40\143\145\x72\x74\x69\146\x69\143\x61\164\x65\40\151\156\x20\171\157\x75\162\x20\111\104\120\x20\163\151\x64\145\56";
                goto pf;
                il:
                $fM = variable_get("\155\151\156\151\157\x72\x61\x6e\147\x65\137\163\141\x6d\x6c\x5f\x70\165\142\x6c\x5f\x63\x65\x72\x74\x69\x66\151\x63\x61\164\x65", '');
                $pH = "\74\x73\x74\162\157\156\147\76\120\x6f\163\x73\x69\142\x6c\x65\x20\x43\141\165\163\x65\72\x20\x3c\57\163\164\162\x6f\x6e\x67\x3e\111\146\x20\171\157\x75\x20\x68\141\x76\x65\x20\165\x70\x6c\157\141\x64\x65\144\x20\x63\x75\163\x74\x6f\155\40\143\145\x72\x74\151\146\151\143\x61\x74\145\40\x74\150\x65\x6e\40\x70\x6c\145\141\x73\x65\x20\x75\x70\144\x61\164\x65\40\164\150\x69\x73\x20\156\145\x77\40\x63\x75\163\164\157\155\40\160\x75\142\x6c\x69\143\x20\143\145\x72\x74\x69\x66\151\x63\x61\164\145\x20\x69\156\40\171\157\x75\x72\40\x49\104\x50\40\163\151\144\145\x2e";
                pf:
                echo "\x3c\x64\151\x76\x20\163\164\171\154\145\x3d\x22\146\157\x6e\164\x2d\x66\141\155\x69\x6c\171\x3a\103\x61\x6c\151\x62\x72\x69\x3b\160\141\144\144\151\x6e\147\x3a\60\40\x33\45\73\42\x3e";
                echo "\x3c\x64\x69\x76\40\163\164\171\x6c\145\x3d\42\143\157\154\x6f\x72\x3a\x20\43\141\x39\x34\64\x34\x32\x3b\142\x61\x63\153\x67\162\x6f\165\156\x64\x2d\x63\x6f\x6c\x6f\162\x3a\40\x23\146\x32\x64\x65\x64\145\73\x70\x61\x64\144\151\156\147\72\40\61\65\160\170\x3b\x6d\x61\162\147\x69\x6e\x2d\142\x6f\x74\164\157\x6d\x3a\x20\62\60\160\170\73\164\145\170\164\55\141\154\151\147\x6e\72\143\145\156\164\x65\162\73\142\x6f\x72\x64\x65\x72\72\61\160\170\40\x73\x6f\154\x69\144\40\x23\105\66\102\63\102\x32\73\x66\x6f\x6e\164\55\x73\151\x7a\x65\x3a\x31\70\x70\x74\x3b\42\76\x20\105\x52\x52\117\x52\x3c\57\x64\x69\166\76\xd\12\x20\x20\40\40\x20\x20\40\x20\x20\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\74\144\151\166\40\163\x74\x79\x6c\145\x3d\42\143\157\x6c\157\162\x3a\40\x23\141\x39\64\x34\64\x32\x3b\x66\x6f\x6e\x74\x2d\163\151\172\x65\72\61\64\160\x74\x3b\x20\155\141\162\x67\151\x6e\55\x62\157\164\x74\157\x6d\x3a\62\60\160\170\x3b\42\x3e\74\160\76\x3c\163\x74\162\157\x6e\x67\76\105\x72\x72\157\162\x3a\40\74\57\x73\164\162\157\156\147\x3e\x55\x6e\x61\x62\154\145\x20\x74\157\x20\x66\x69\156\144\40\141\x20\143\145\162\x74\x69\x66\151\143\x61\x74\145\x20\x6d\141\x74\143\150\151\156\x67\x20\x74\x68\x65\40\x63\x6f\156\x66\x69\x67\165\162\145\x64\40\146\151\x6e\147\x65\162\x70\x72\151\156\x74\56\74\x2f\160\x3e\xd\xa\x20\x20\x20\40\40\40\40\x20\40\40\x20\x20\x20\x20\x20\40\40\x20\40\40\x20\40\40\40\74\x70\76" . $pH . "\74\57\160\76\xd\12\11\x9\11\x20\x20\x20\40\40\40\40\x20\x20\x20\40\x20\40\x20\40\x20\x20\x20\x3c\x70\76\x3c\142\x3e\105\170\160\x65\143\x74\145\x64\40\x76\x61\x6c\x75\x65\72\x20\x3c\x2f\142\x3e" . $fM . "\x3c\x2f\160\76";
                echo str_repeat("\x26\156\x62\x73\x70\x3b", 15);
                echo "\74\57\144\x69\x76\76\15\xa\40\x20\x20\x20\x20\40\40\x20\x20\x20\40\40\40\40\x20\x20\x20\40\x20\x20\x20\40\x20\40\74\x64\x69\166\x20\x73\164\x79\154\145\75\42\x6d\141\162\x67\x69\156\x3a\63\x25\73\x64\x69\163\x70\154\141\171\72\142\154\157\143\153\x3b\164\145\170\x74\55\141\154\x69\x67\156\x3a\x63\145\156\164\x65\x72\x3b\x22\76\15\xa\x20\x20\40\x20\40\40\x20\x20\x20\x20\40\40\40\40\40\40\40\x20\x20\x20\40\x20\40\40\x3c\146\157\x72\155\x20\x61\143\x74\151\157\x6e\75\42\151\156\x64\x65\x78\x2e\160\150\x70\x22\76\15\12\40\x20\40\40\x20\x20\x20\x20\40\40\40\x20\40\x20\x20\x20\x20\40\x20\40\x20\x20\40\x20\x20\x20\x20\40\74\144\151\166\x20\x73\x74\x79\154\x65\75\x22\155\141\x72\x67\x69\156\x3a\63\45\x3b\144\x69\x73\x70\154\x61\x79\x3a\142\154\157\143\153\73\x74\x65\170\164\55\141\154\151\147\x6e\x3a\143\145\156\x74\x65\162\73\42\76\x3c\x69\156\160\165\x74\40\x73\164\x79\154\145\75\x22\x70\141\x64\144\151\x6e\x67\x3a\x31\x25\73\167\151\x64\x74\x68\72\x31\x30\60\x70\x78\73\x62\141\x63\x6b\x67\162\x6f\165\x6e\144\x3a\x20\43\60\x30\71\61\103\x44\40\x6e\157\x6e\x65\x20\162\145\x70\x65\x61\164\40\x73\x63\x72\157\154\x6c\40\x30\45\x20\x30\45\x3b\143\165\162\163\x6f\x72\x3a\x20\x70\157\151\x6e\x74\x65\162\x3b\x66\157\x6e\x74\55\163\151\172\x65\72\61\65\x70\x78\73\x62\157\162\x64\145\x72\x2d\x77\151\144\x74\x68\72\40\x31\x70\170\x3b\142\x6f\162\144\145\x72\x2d\163\x74\x79\x6c\x65\72\40\x73\157\x6c\x69\144\73\x62\x6f\x72\144\x65\x72\x2d\x72\x61\144\x69\165\163\x3a\40\63\x70\x78\73\167\x68\151\x74\x65\55\x73\x70\141\x63\145\x3a\40\156\157\x77\x72\x61\160\x3b\x62\157\170\x2d\163\x69\x7a\x69\x6e\147\72\x20\x62\x6f\x72\x64\145\x72\x2d\142\157\x78\x3b\142\x6f\162\144\145\162\55\x63\x6f\154\157\162\72\x20\43\60\x30\67\x33\x41\101\x3b\x62\157\x78\55\x73\150\141\x64\x6f\x77\x3a\x20\60\160\170\x20\x31\x70\170\x20\x30\160\170\40\x72\x67\x62\141\50\x31\62\x30\x2c\x20\x32\60\x30\x2c\40\x32\x33\x30\x2c\40\x30\56\66\x29\x20\x69\156\163\145\164\73\143\x6f\x6c\157\162\x3a\x20\x23\x46\x46\x46\73\42\164\x79\160\x65\x3d\x22\x62\x75\x74\x74\x6f\x6e\42\40\x76\x61\154\165\145\x3d\42\x44\x6f\156\x65\42\40\157\x6e\x43\154\151\x63\153\x3d\x22\x73\x65\x6c\146\56\x63\154\157\x73\x65\50\x29\73\x22\x3e\74\x2f\144\151\x76\76";
                die;
            }
            die;
        }
    }
    public static function get_mapped_groups($te, $Fk)
    {
        $o2 = array();
        if (empty($Fk)) {
            goto po;
        }
        $al = array();
        $q2 = 1;
        QA:
        if (!($q2 < 10)) {
            goto mF;
        }
        $Af = $te->get("\x67\162\157\x75\160" . $q2 . "\137\x6d\x61\160");
        $al[$q2] = explode("\73", $Af);
        $q2++;
        goto QA;
        mF:
        po:
        foreach ($Fk as $sc) {
            if (empty($sc)) {
                goto Vm;
            }
            $q2 = 0;
            $GN = false;
            KA:
            if (!($q2 < 9 && !$GN)) {
                goto p2;
            }
            if (!(!empty($al[$q2]) && in_array($sc, $al[$q2]))) {
                goto IE;
            }
            $o2[] = $te->get("\x67\162\x6f\x75\160" . $q2);
            $GN = true;
            IE:
            $q2++;
            goto KA;
            p2:
            Vm:
            x7:
        }
        R2:
        return array_unique($o2);
    }
    public static function getEncryptionAlgorithm($jJ)
    {
        switch ($jJ) {
            case "\150\x74\164\x70\x3a\x2f\x2f\x77\x77\x77\56\167\63\56\157\x72\x67\x2f\x32\x30\x30\x31\x2f\60\x34\x2f\x78\x6d\154\x65\156\143\x23\164\162\x69\x70\154\x65\x64\x65\163\55\x63\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto Og;
            case "\150\164\x74\x70\x3a\x2f\57\x77\167\x77\x2e\167\63\56\x6f\162\x67\x2f\62\x30\60\61\x2f\x30\x34\57\170\155\154\x65\x6e\x63\43\x61\145\x73\x31\x32\70\x2d\143\x62\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\x74\x74\x70\72\57\x2f\x77\167\167\56\167\x33\56\157\x72\147\57\x32\x30\60\x31\x2f\60\64\x2f\170\155\x6c\x65\156\143\43\141\x65\163\x31\71\x32\x2d\x63\x62\x63":
                return XMLSecurityKey::AES192_CBC;
                goto Og;
            case "\150\x74\164\x70\x3a\57\x2f\167\x77\167\56\167\63\x2e\x6f\162\147\57\x32\60\x30\61\57\60\x34\57\x78\155\154\x65\156\x63\x23\141\145\x73\62\x35\x36\55\x63\142\x63":
                return XMLSecurityKey::AES256_CBC;
                goto Og;
            case "\x68\x74\164\160\72\x2f\57\167\x77\x77\x2e\x77\x33\56\157\x72\147\x2f\62\x30\60\x31\x2f\60\x34\x2f\x78\x6d\x6c\x65\156\143\x23\162\163\141\x2d\x31\137\x35":
                return XMLSecurityKey::RSA_1_5;
                goto Og;
            case "\150\x74\x74\160\72\x2f\57\167\167\x77\56\167\x33\56\x6f\x72\147\57\62\60\60\x31\x2f\60\64\x2f\x78\155\x6c\x65\x6e\x63\43\162\x73\x61\x2d\157\141\145\x70\55\155\x67\146\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto Og;
            case "\x68\164\164\160\72\x2f\57\x77\167\x77\56\x77\x33\x2e\x6f\x72\147\x2f\62\x30\x30\60\x2f\60\71\x2f\x78\x6d\x6c\x64\x73\151\x67\x23\x64\x73\141\x2d\x73\150\x61\61":
                return XMLSecurityKey::DSA_SHA1;
                goto Og;
            case "\x68\164\x74\160\x3a\x2f\57\167\x77\167\56\x77\x33\56\157\162\147\x2f\62\60\60\60\57\x30\71\x2f\170\155\x6c\144\163\x69\x67\x23\x72\x73\141\x2d\x73\150\141\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto Og;
            case "\x68\x74\x74\160\x3a\x2f\57\x77\167\x77\56\x77\x33\56\157\162\147\x2f\62\60\60\61\x2f\x30\64\x2f\x78\x6d\154\144\163\151\147\55\x6d\x6f\x72\145\x23\x72\x73\x61\55\163\x68\141\62\65\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto Og;
            case "\150\x74\164\x70\x3a\57\x2f\x77\x77\x77\56\x77\x33\x2e\x6f\x72\147\x2f\62\x30\60\61\57\x30\x34\x2f\170\x6d\x6c\144\163\151\x67\x2d\x6d\157\x72\x65\43\162\163\x61\55\x73\150\141\x33\70\x34":
                return XMLSecurityKey::RSA_SHA384;
                goto Og;
            case "\x68\164\x74\160\72\x2f\57\167\167\167\56\167\63\x2e\157\x72\147\57\x32\x30\60\x31\57\x30\64\x2f\x78\x6d\154\144\163\x69\147\x2d\155\x6f\x72\x65\43\x72\x73\141\55\163\x68\x61\65\x31\62":
                return XMLSecurityKey::RSA_SHA512;
                goto Og;
            default:
                echo sprintf("\111\156\x76\141\154\x69\144\x20\105\x6e\x63\162\x79\160\164\151\157\156\x20\x4d\145\164\150\x6f\x64\72\x20" . $jJ);
                die;
                goto Og;
        }
        qx:
        Og:
    }
    public static function sanitize_certificate($fX)
    {
        $fX = preg_replace("\57\133\xd\xa\135\x2b\x2f", '', $fX);
        $fX = str_replace("\55", '', $fX);
        $fX = str_replace("\x42\105\107\x49\116\x20\103\105\122\x54\111\106\111\103\x41\124\105", '', $fX);
        $fX = str_replace("\x45\116\104\40\103\105\122\x54\111\x46\x49\103\x41\124\x45", '', $fX);
        $fX = str_replace("\x20", '', $fX);
        $fX = chunk_split($fX, 64, "\15\xa");
        $fX = "\x2d\x2d\x2d\55\55\102\105\107\x49\x4e\40\x43\105\x52\x54\x49\x46\111\x43\x41\x54\x45\55\x2d\55\55\x2d\15\12" . $fX . "\55\x2d\55\55\x2d\105\116\104\40\x43\x45\x52\x54\111\x46\x49\x43\101\x54\105\x2d\x2d\x2d\x2d\x2d";
        return $fX;
    }
    public static function sanitize_private_key($RD)
    {
        $RD = preg_replace("\x2f\133\15\12\135\53\x2f", '', $RD);
        $RD = str_replace("\55", '', $RD);
        $RD = str_replace("\x42\105\107\x49\x4e\x20\120\122\x49\x56\x41\x54\x45\x20\113\105\131", '', $RD);
        $RD = str_replace("\105\x4e\x44\x20\120\x52\x49\x56\x41\124\105\40\x4b\x45\x59", '', $RD);
        $RD = str_replace("\40", '', $RD);
        $RD = chunk_split($RD, 64, "\xd\12");
        $RD = "\x2d\55\55\x2d\x2d\x42\105\107\x49\116\40\x50\x52\x49\126\x41\124\x45\40\113\x45\131\55\x2d\55\55\55\15\12" . $RD . "\55\55\55\55\x2d\105\116\x44\x20\x50\122\111\126\101\x54\105\x20\x4b\105\x59\x2d\55\55\x2d\x2d";
        return $RD;
    }
    public static function desanitize_certificate($fX)
    {
        $fX = preg_replace("\57\133\15\12\135\53\x2f", '', $fX);
        $fX = str_replace("\55\x2d\55\x2d\x2d\102\105\x47\111\x4e\x20\x43\x45\122\x54\x49\x46\x49\103\101\x54\x45\x2d\55\55\55\x2d", '', $fX);
        $fX = str_replace("\55\55\55\55\x2d\x45\116\104\x20\x43\x45\122\124\111\x46\x49\x43\x41\124\x45\55\55\55\x2d\55", '', $fX);
        $fX = str_replace("\40", '', $fX);
        return $fX;
    }
    public static function Print_SAML_Request($ax, $NS)
    {
        header("\103\x6f\156\164\x65\156\164\55\124\x79\x70\145\72\x20\x74\x65\x78\164\x2f\x68\x74\155\x6c");
        $M8 = new DOMDocument();
        $M8->preserveWhiteSpace = false;
        $M8->formatOutput = true;
        $M8->loadXML($ax);
        if ($NS == "\x64\x69\x73\160\x6c\x61\171\x53\101\115\114\122\x65\x71\165\145\x73\164") {
            goto c1;
        }
        $Bf = "\x53\x41\115\114\40\122\145\x73\160\157\x6e\163\145";
        goto wp;
        c1:
        $Bf = "\123\x41\115\114\40\x52\145\161\165\145\x73\x74";
        wp:
        $uh = $M8->saveXML();
        $Cx = htmlentities($uh);
        $Cx = rtrim($Cx);
        $uQ = simplexml_load_string($uh);
        $e2 = drupal_get_path("\155\157\x64\x75\154\145", "\x6d\151\156\151\x6f\162\141\x6e\x67\x65\137\163\141\155\x6c") . "\x2f\x63\x73\x73\57\163\x74\x79\x6c\145\x5f\x73\x65\164\164\151\x6e\147\163\56\143\163\x73";
        echo "\x3c\154\151\x6e\153\40\x72\x65\x6c\x3d\x27\163\x74\x79\154\x65\x73\150\x65\x65\164\x27\40\151\x64\x3d\47\155\157\137\163\141\x6d\x6c\x5f\x61\144\155\151\156\x5f\163\x65\x74\x74\151\156\x67\x73\137\163\x74\x79\154\x65\55\x63\x73\x73\x27\40\40\x68\162\145\146\75\47" . $e2 . "\47\40\164\x79\x70\145\75\47\164\145\x78\164\x2f\x63\x73\163\x27\x20\x6d\x65\x64\151\x61\75\47\141\154\154\x27\x20\x2f\76\15\xa\x20\40\40\40\40\x20\x20\40\x20\x20\40\x20\74\x64\151\166\40\143\x6c\x61\x73\x73\75\x22\x6d\x6f\55\x64\151\163\160\154\x61\x79\x2d\x6c\157\x67\x73\42\40\76\x3c\160\x20\x74\x79\x70\145\75\x22\164\145\170\164\x22\x20\40\40\x69\144\75\42\x53\x41\115\114\x5f\164\x79\x70\145\x22\76" . $Bf . "\74\x2f\160\x3e\x3c\57\144\151\x76\76\11\x9\15\xa\40\40\40\x20\40\x20\40\40\40\x20\40\x20\x3c\144\x69\x76\40\x74\x79\160\145\x3d\42\x74\145\170\164\x22\x20\151\x64\75\x22\x53\x41\x4d\x4c\x5f\x64\151\x73\x70\154\x61\x79\x22\40\x63\154\141\163\163\x3d\x22\x6d\x6f\x2d\x64\x69\163\x70\x6c\141\x79\x2d\x62\x6c\157\143\x6b\42\x3e\x3c\x70\x72\x65\40\143\154\x61\x73\163\x3d\x27\142\162\165\163\x68\x3a\x20\x78\x6d\x6c\x3b\x27\x3e" . $Cx . "\74\x2f\160\162\x65\76\74\x2f\144\x69\x76\x3e\74\142\x72\76\15\xa\x20\40\40\40\x20\40\40\x20\x20\x20\40\x20\x3c\x64\x69\166\40\x73\x74\x79\154\145\75\42\x6d\141\162\147\x69\x6e\72\x33\x25\x3b\144\x69\163\160\154\x61\171\72\142\154\157\143\x6b\x3b\x74\145\x78\164\x2d\141\154\151\x67\x6e\72\x63\x65\x6e\164\145\x72\x3b\42\76\15\xa\40\40\x20\40\x20\x20\40\40\40\x20\40\40\40\x20\x20\40\x3c\144\x69\166\40\163\x74\x79\x6c\145\75\x22\x6d\x61\162\147\151\x6e\72\x33\45\73\144\x69\x73\160\154\141\x79\x3a\142\x6c\x6f\x63\153\x3b\164\x65\170\x74\55\141\x6c\x69\147\156\72\143\x65\156\x74\145\x72\x3b\42\x20\76\74\x2f\144\151\166\76\15\12\40\40\x20\40\40\x20\40\40\x20\40\40\x20\40\40\40\x20\74\x62\165\164\164\157\156\40\x69\x64\x3d\x22\143\157\160\x79\42\x20\157\156\x63\154\151\x63\153\75\x22\x63\157\x70\171\x44\x69\166\x54\x6f\103\154\x69\160\142\x6f\x61\x72\x64\x28\x29\42\x20\x20\x73\164\x79\x6c\145\x3d\x22\160\141\144\x64\x69\156\147\72\x31\45\73\167\x69\x64\x74\x68\x3a\x31\x30\x30\x70\x78\x3b\142\141\143\x6b\147\162\x6f\165\x6e\x64\x3a\x20\x23\x30\60\x39\x31\x43\x44\40\156\x6f\x6e\145\40\162\x65\x70\x65\x61\x74\40\163\143\162\157\x6c\154\40\x30\45\40\x30\45\73\x63\x75\162\163\157\162\72\40\x70\x6f\151\x6e\x74\145\x72\73\x66\157\156\164\x2d\x73\151\x7a\145\72\61\65\x70\x78\73\142\x6f\162\144\x65\x72\55\167\151\x64\164\150\x3a\x20\61\x70\170\73\142\x6f\162\x64\145\x72\x2d\x73\164\171\154\x65\x3a\x20\x73\157\154\151\144\73\142\157\162\x64\x65\x72\55\162\x61\x64\151\x75\x73\x3a\x20\63\x70\170\x3b\x77\x68\151\x74\145\55\x73\160\141\x63\x65\72\40\156\157\x77\x72\141\160\73\x62\157\x78\x2d\x73\151\x7a\151\156\147\72\x20\x62\x6f\x72\x64\145\x72\x2d\142\x6f\170\x3b\x62\x6f\x72\144\x65\162\x2d\x63\x6f\x6c\157\x72\x3a\40\43\x30\x30\67\63\101\101\x3b\x62\157\170\x2d\163\x68\141\144\x6f\x77\72\40\x30\x70\x78\x20\x31\160\x78\x20\x30\160\x78\x20\162\147\142\x61\50\x31\x32\x30\x2c\40\x32\x30\x30\54\x20\x32\x33\x30\x2c\40\x30\56\x36\51\x20\x69\x6e\x73\x65\x74\x3b\x63\157\x6c\157\162\x3a\x20\x23\x46\x46\106\73\42\40\x3e\103\157\160\x79\x3c\x2f\142\x75\x74\x74\x6f\x6e\x3e\46\156\x62\163\160\73\15\xa\x20\40\40\x20\x20\x20\40\x20\40\40\x20\x20\40\40\40\x20\74\x69\156\160\165\x74\x20\x69\x64\x3d\42\x64\x77\156\55\x62\x74\156\42\x20\x73\164\171\154\x65\75\42\x70\141\144\144\151\156\147\x3a\x31\45\73\167\151\x64\164\150\72\61\x30\60\160\170\x3b\x62\141\143\x6b\147\x72\x6f\165\156\144\72\40\43\60\60\x39\x31\103\104\40\x6e\157\x6e\145\x20\x72\x65\160\x65\141\x74\40\163\143\x72\157\154\x6c\x20\x30\45\x20\x30\45\73\x63\x75\162\x73\157\x72\x3a\x20\x70\x6f\151\x6e\164\x65\162\x3b\x66\x6f\156\164\x2d\x73\x69\172\145\x3a\61\x35\x70\170\x3b\142\157\162\x64\145\162\x2d\167\151\144\x74\x68\x3a\x20\x31\x70\x78\73\142\157\x72\144\x65\x72\x2d\163\164\171\x6c\145\x3a\x20\x73\x6f\154\x69\144\73\x62\157\x72\144\x65\x72\x2d\162\141\x64\151\x75\163\72\40\x33\160\x78\x3b\167\150\x69\x74\145\x2d\x73\x70\x61\143\x65\x3a\40\x6e\x6f\167\162\141\160\73\x62\x6f\170\55\x73\151\172\x69\x6e\x67\x3a\40\x62\157\162\x64\145\162\x2d\142\157\170\x3b\x62\x6f\162\144\145\162\55\x63\157\x6c\157\x72\72\x20\43\60\x30\67\x33\x41\101\x3b\x62\157\x78\55\x73\x68\141\144\x6f\x77\x3a\x20\60\x70\170\40\61\x70\x78\x20\60\x70\x78\x20\x72\147\x62\x61\x28\x31\x32\60\54\40\x32\x30\x30\54\40\x32\63\60\x2c\x20\60\56\x36\51\x20\151\x6e\163\x65\164\x3b\x63\157\154\x6f\x72\x3a\40\x23\x46\106\106\x3b\42\164\171\x70\145\75\42\x62\x75\164\164\157\156\42\40\x76\141\x6c\x75\x65\x3d\x22\x44\x6f\x77\x6e\154\x6f\141\144\x22\xd\xa\40\40\x20\40\x20\x20\x20\40\x20\40\x20\x20\40\40\40\x20\42\76\xd\xa\40\x20\40\x20\40\x20\40\x20\x20\40\x20\x20\74\x2f\x64\x69\166\x3e\xd\xa\11\x9\x9\x20\x20\x20\40\x20\40\74\57\144\x69\x76\76";
        ob_end_flush();
        ?>
      <script>
          function copyDivToClipboard() {
              var aux = document.createElement("input");
              aux.setAttribute("value", document.getElementById("SAML_display").textContent);
              document.body.appendChild(aux);
              aux.select();
              document.execCommand("copy");
              document.body.removeChild(aux);
              document.getElementById('copy').textContent = "Copied";
              document.getElementById('copy').style.background = "grey";
              window.getSelection().selectAllChildren( document.getElementById( "SAML_display" ) );
          }

          function download(filename, text) {
              var element = document.createElement('a');
              element.setAttribute('href', 'data:Application/octet-stream;charset=utf-8,' + encodeURIComponent(text));
              element.setAttribute('download', filename);
              element.style.display = 'none';
              document.body.appendChild(element);
              element.click();
              document.body.removeChild(element);
          }

          document.getElementById("dwn-btn").addEventListener("click", function () {
              var filename = document.getElementById("SAML_type").textContent+".xml";
              var node = document.getElementById("SAML_display");
              htmlContent = node.innerHTML;
              text = node.textContent;
              console.log(text);
              download(filename, text);
          }, false);
        </script>
        <?php 
        die;
    }
}
?>
