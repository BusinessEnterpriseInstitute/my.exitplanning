<?php


class Utilities
{
    public static function generateCertificate($wu, $zz, $oo, $gS)
    {
        $NH = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\x72\x65\x73\157\x75\x72\143\x65\163" . DIRECTORY_SEPARATOR . "\157\x70\x65\156\x73\163\x6c\56\143\156\146";
        $eE = array("\143\x6f\x6e\x66\x69\x67" => $NH, "\x64\151\147\x65\163\164\137\x61\154\147" => "{$zz}", "\x70\162\151\166\x61\x74\145\137\x6b\145\171\137\x62\x69\x74\x73" => $oo, "\160\162\x69\166\141\x74\145\x5f\x6b\x65\x79\137\164\x79\x70\x65" => OPENSSL_KEYTYPE_RSA);
        $MZ = openssl_pkey_new($eE);
        $PL = openssl_csr_new($wu, $MZ, $eE);
        if (!($PL === FALSE)) {
            goto ZP;
        }
        drupal_set_message(t("\106\x61\x63\151\156\147\40\x69\x73\163\165\145\163\x20\167\x68\x69\x6c\145\40\147\x65\x6e\x65\162\141\x74\151\x6e\147\40\x63\x75\163\x74\x6f\x6d\40\143\x65\162\x74\x69\x66\151\143\141\x74\145\x2e\40\x50\x6c\x65\x61\x73\x65\40\143\x68\145\143\x6b\40\151\146\40\143\x6f\x75\x6e\x74\x72\171\40\x63\x6f\144\145\40\x69\x73\40\143\x6f\x72\x72\x65\x63\164\x2e"), "\x65\162\162\x6f\162");
        return FALSE;
        ZP:
        $ks = openssl_csr_sign($PL, null, $MZ, $gS, $eE, time());
        openssl_x509_export($ks, $DZ);
        openssl_pkey_export($MZ, $ye, null, $eE);
        openssl_csr_export($PL, $bE);
        Ye:
        if (!(($iJ = openssl_error_string()) !== false)) {
            goto NX;
        }
        error_log($iJ);
        goto Ye;
        NX:
        $fp = array("\160\165\x62\154\x69\143\137\x6b\145\171" => $DZ, "\160\x72\x69\x76\141\x74\x65\137\x6b\145\x79" => $ye);
        variable_set("\155\x69\156\x69\157\162\141\156\x67\x65\x5f\x73\141\155\x6c\137\x70\x75\x62\x6c\x5f\x63\x65\162\164\x69\x66\x69\x63\141\164\145", $fp["\160\165\142\x6c\151\x63\x5f\153\x65\171"]);
        variable_set("\x6d\x69\x6e\x69\157\x72\x61\156\x67\145\137\163\141\155\154\137\x70\x72\x69\166\x61\164\x65\x5f\143\x65\162\164\x69\x66\x69\143\141\x74\x65", $fp["\160\162\151\x76\141\x74\x65\137\153\x65\x79"]);
        file_put_contents(self::getCertificatePath(), $fp["\160\165\x62\x6c\151\143\137\x6b\145\171"]);
        file_put_contents(self::getKeyPath(), $fp["\160\x72\151\x76\x61\x74\145\x5f\x6b\x65\x79"]);
        return TRUE;
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $dW = $base_url . "\57\x61\144\155\151\156\x2f\x63\157\x6e\x66\151\147\57\160\x65\x6f\x70\154\145\x2f\155\x69\156\x69\x6f\162\x61\156\147\145\137\163\x61\x6d\154\57\x63\165\x73\x74\x6f\x6d\x65\162\x5f\x73\x65\x74\x75\x70\x2f";
        if (variable_get("\x6d\151\156\x69\x6f\x72\141\x6e\x67\145\x5f\x73\x61\x6d\x6c\x5f\x63\x75\163\x74\x6f\155\145\162\x5f\x61\144\155\151\156\x5f\x65\x6d\141\151\x6c", NULL) == NULL || variable_get("\155\x69\x6e\151\157\162\x61\x6e\147\x65\x5f\163\x61\x6d\154\137\143\x75\x73\164\157\x6d\145\162\x5f\x69\x64", NULL) == NULL || variable_get("\155\x69\156\x69\157\162\141\156\x67\145\x5f\163\141\155\x6c\137\143\165\163\164\x6f\155\145\x72\x5f\141\x64\155\x69\x6e\137\x74\157\x6b\x65\156", NULL) == NULL || variable_get("\155\x69\156\x69\157\162\x61\156\x67\x65\x5f\163\141\x6d\154\x5f\x63\x75\x73\x74\x6f\155\145\x72\137\141\160\151\x5f\153\145\x79", NULL) == NULL) {
            goto A3;
        }
        if (!(variable_get("\x6d\151\156\151\x6f\x72\141\156\x67\145\x5f\163\x61\155\154\137\x6c\151\x63\145\x6e\x73\145\137\153\x65\171") == NULL && variable_get("\155\x69\x6e\x69\x6f\x72\141\156\x67\145\x5f\163\x61\x6d\x6c\x5f\x63\x75\163\x74\157\155\x65\162\x5f\x61\144\x6d\151\156\x5f\145\155\141\x69\154") != NULL)) {
            goto nb;
        }
        $form["\x6d\x61\x72\x6b\x75\160\x5f\x6d\163\147"] = array("\x23\x6d\x61\162\153\x75\x70" => "\x3c\144\151\x76\x20\143\154\x61\163\163\75\42\155\x6f\x5f\163\x61\155\x6c\x5f\x72\x65\147\151\163\164\x65\162\x5f\x6d\x65\x73\163\x61\x67\145\x22\76\74\160\x3e\131\157\x75\x20\156\145\x65\x64\x20\164\x6f\x20\x3c\x61\40\x68\162\x65\146\x3d\42" . $dW . "\42\40\40\76\166\145\x72\x69\x66\x79\x20\x3c\57\x61\76\40\171\x6f\165\x72\x20\x6c\x69\x63\145\x6e\163\145\40\153\145\171\40\x62\145\x66\157\x72\145\40\165\x73\x69\156\x67\x20\164\150\151\x73\x20\x6d\x6f\x64\165\x6c\145\x2e\x3c\57\141\76\x3c\x2f\160\x3e\74\x2f\x64\151\166\76");
        return TRUE;
        nb:
        goto dW;
        A3:
        $form["\x6d\141\x72\153\x75\160\x5f\162\145\147\137\155\x73\x67"] = array("\x23\x6d\141\x72\x6b\165\160" => "\74\x64\x69\x76\x20\143\x6c\x61\x73\163\x3d\42\155\x6f\x5f\163\x61\155\154\137\162\145\147\151\163\x74\145\162\137\155\x65\x73\163\141\x67\145\x22\x3e\131\157\165\40\x6e\145\145\x64\40\x74\x6f\40\x3c\x61\x20\x68\x72\x65\146\75\42" . $dW . "\42\40\x3e\x4c\x6f\147\151\x6e\x3c\57\141\x3e\x20\167\x69\x74\150\40\x6d\151\x6e\x69\117\162\141\x6e\147\145\40\141\x63\143\x6f\165\156\164\40\142\145\146\157\x72\145\x20\x75\x73\x69\156\x67\x20\164\150\151\163\x20\x6d\157\144\165\154\x65\56\x3c\57\143\x65\x6e\x74\x65\x72\x3e\74\x2f\144\x69\166\x3e");
        return TRUE;
        dW:
        if (!(variable_get("\x6d\151\x6e\x69\x6f\x72\141\x6e\147\x65\137\163\x61\155\x6c\x5f\154\x69\x63\x65\x6e\x73\145\x5f\x6b\145\171") != NULL && variable_get("\155\x69\x6e\x69\157\x72\x61\x6e\147\145\x5f\x73\141\155\x6c\137\x63\165\163\x74\x6f\155\145\162\x5f\x61\x64\155\151\156\137\145\x6d\141\x69\x6c") != NULL)) {
            goto ge;
        }
        return FALSE;
        ge:
    }
    public static function createUpdateUrl($Oe, $uN, $CQ, $vh, $mZ, $vI)
    {
        $Ll = "\61\61\61\61\61\61\61\61\x31\61\x31\61\x31\x31\x31\x31" . $Oe;
        $aa = $vI . "\57\155\x6f\141\163\x2f\x61\160\x69\x2f\x70\154\165\x67\x69\156\x2f\x64\x72\x75\x70\x61\x6c\112\x6f\x6f\155\x6c\x61\125\160\144\x61\164\x65\x2f" . $mZ . "\x2f" . $uN . "\57" . $CQ . "\x2f";
        $RY = openssl_cipher_iv_length($KW = "\x41\x45\123\x2d\61\62\70\55\103\102\x43");
        $NN = openssl_random_pseudo_bytes($RY);
        $Km = openssl_encrypt($Ll, $KW, $vh, $jR = OPENSSL_RAW_DATA, $NN);
        return $aa . str_replace(array("\x2b", "\x2f", "\x3d"), array("\x2d", "\x5f", ''), base64_encode($Km));
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $form["\x6d\141\x72\x6b\x75\x70\x5f\x69\144\160\x5f\x61\164\x74\x72\137\x68\145\141\144\145\x72\x5f\x74\x6f\x70\x5f\163\165\x70\160\157\162\164"] = array("\43\155\x61\162\x6b\165\160" => "\x3c\x64\x69\x76\x20\143\154\141\x73\x73\75\42\x6d\157\137\163\141\x6d\x6c\137\x74\141\142\x6c\x65\x5f\x6c\x61\171\157\165\164\137\x73\165\160\160\x6f\162\x74\137\x31\42\x3e");
        $form["\155\x61\x72\x6b\165\x70\137\163\165\x70\160\157\x72\164\137\x31"] = array("\43\x6d\x61\x72\153\x75\160" => "\74\x68\63\x3e\106\x65\x61\x74\x75\x72\145\x20\x52\145\161\165\145\163\x74\x2f\x43\157\156\x74\141\143\164\x20\125\x73\x3a\x3c\x2f\x68\x33\76\x3c\x64\151\166\76\x4e\145\145\144\40\141\156\x79\40\150\145\154\x70\77\x20\127\145\x20\x63\141\156\x20\x68\145\x6c\x70\x20\171\x6f\x75\x20\167\x69\164\150\x20\143\157\x6e\x66\151\x67\x75\x72\x69\x6e\147\40\x79\x6f\165\162\x20\123\x65\162\166\151\143\x65\x20\120\162\x6f\166\x69\x64\x65\162\56\40\112\x75\163\x74\40\163\x65\x6e\x64\40\x75\163\40\141\40\x71\x75\x65\x72\171\40\141\156\144\x20\167\x65\x20\167\x69\154\x6c\40\147\x65\x74\40\142\x61\143\x6b\x20\x74\x6f\x20\x79\x6f\x75\40\163\157\157\x6e\56\74\x62\162\40\57\x3e\x3c\57\x64\x69\x76\x3e\74\142\x72\76");
        $form["\x6d\151\x6e\x69\157\162\x61\156\x67\145\137\163\141\x6d\x6c\137\x65\155\141\151\154\137\141\144\x64\162\x65\x73\163"] = array("\43\164\171\160\x65" => "\x74\145\x78\164\x66\151\145\154\144", "\x23\141\x74\x74\x72\x69\x62\165\164\x65\163" => array("\163\164\171\154\145" => "\x77\x69\x64\x74\x68\72\x31\x30\x30\x25", "\160\154\x61\143\145\150\x6f\154\x64\x65\x72" => "\x45\156\164\145\x72\x20\x79\157\165\162\x20\x45\155\x61\151\154"), "\x23\144\x65\x66\x61\165\154\164\x5f\166\141\x6c\165\145" => variable_get("\x6d\151\156\151\157\162\x61\x6e\147\x65\x5f\x73\x61\x6d\154\x5f\143\165\x73\164\157\155\145\162\137\141\x64\x6d\x69\156\137\x65\155\x61\151\154", ''));
        $form["\155\151\156\x69\x6f\162\141\x6e\x67\x65\137\163\x61\155\x6c\137\x70\150\157\x6e\x65\137\x6e\165\x6d\x62\145\162"] = array("\43\x74\171\160\x65" => "\164\145\170\164\x66\x69\145\154\x64", "\x23\x61\164\164\x72\x69\142\x75\164\145\x73" => array("\x73\x74\171\154\145" => "\x77\x69\x64\x74\150\72\61\60\x30\x25", "\160\x6c\x61\x63\145\150\x6f\x6c\144\145\x72" => "\105\156\x74\x65\162\x20\171\x6f\x75\162\40\x70\150\x6f\156\145\40\156\x75\155\x62\x65\x72\40\167\151\x74\x68\x20\143\157\x75\x6e\164\162\171\40\143\x6f\x64\x65\x20\x65\147\x2e\50\53\61\x29"), "\43\144\145\x66\x61\165\x6c\x74\x5f\x76\141\154\x75\x65" => variable_get("\155\x69\x6e\151\157\162\141\x6e\147\145\137\x73\141\155\154\x5f\143\x75\x73\164\157\155\145\162\x5f\141\144\x6d\x69\156\x5f\160\x68\x6f\x6e\145", ''));
        $form["\155\x69\x6e\x69\157\x72\x61\x6e\x67\145\x5f\163\141\155\x6c\137\x73\x75\160\160\157\x72\x74\137\161\165\x65\162\171"] = array("\43\164\x79\160\145" => "\x74\x65\170\164\x61\162\x65\x61", "\43\x63\x6f\154\163" => "\x31\x30", "\43\162\x6f\x77\x73" => "\65", "\43\141\164\x74\162\x69\142\165\x74\145\x73" => array("\163\164\171\154\x65" => "\x77\x69\x64\x74\150\x3a\61\60\x30\45\73\142\x6f\x72\x64\145\x72\55\x72\141\144\151\165\163\72\x32\160\x78\x3b\x62\x61\143\153\x67\x72\x6f\x75\x6e\144\72\43\146\x63\x66\143\x66\x61\x3b\x62\157\170\x2d\163\x68\x61\144\157\167\72\40\x69\156\x73\145\x74\40\60\x20\61\x70\170\x20\62\160\170\40\x72\147\142\x61\50\60\x2c\40\x30\x2c\x20\60\54\x20\60\56\x31\62\65\51\x3b\x66\157\x6e\x74\55\x66\141\x6d\151\x6c\171\72\x20\110\x65\154\166\x65\x74\x69\x63\x61\x20\116\145\x75\x65\54\x20\110\145\154\166\145\164\x69\x63\x61\x2c\x20\x41\162\151\141\x6c\54\40\163\x61\156\163\55\163\145\162\x69\146\73", "\x70\x6c\141\143\145\150\x6f\x6c\x64\x65\162" => "\x57\x72\151\x74\145\x20\171\x6f\x75\162\x20\x71\165\145\x72\x79\x20\x68\145\x72\145\56"), "\x23\162\x65\163\151\x7a\x61\142\x6c\145" => False);
        $form["\155\151\x6e\151\157\162\x61\156\147\145\137\163\141\155\154\x5f\163\165\x70\160\157\x72\164\137\x73\165\142\x6d\151\164\137\143\154\x69\143\153"] = array("\43\x74\171\x70\145" => "\163\165\142\155\151\164", "\x23\x76\x61\154\x75\145" => t("\123\165\x62\155\x69\x74\40\x51\165\x65\162\x79"), "\x23\x73\165\142\x6d\x69\x74" => array("\125\164\151\x6c\x69\164\x69\x65\x73\72\x3a\x73\145\156\144\x5f\163\165\160\x70\x6f\162\164\137\161\x75\145\162\171"), "\x23\141\x74\x74\162\151\142\165\x74\145\x73" => array("\x73\x74\171\154\145" => "\142\141\x63\x6b\147\x72\x6f\x75\x6e\144\x3a\x20\43\63\x33\67\x61\x62\67\x3b\x63\x6f\x6c\x6f\x72\72\x20\43\146\146\146\146\x66\x66\73\x74\145\x78\x74\55\x73\150\x61\x64\157\x77\x3a\40\x30\40\x2d\61\x70\170\40\x31\x70\170\40\x23\63\63\x37\x61\142\67\x2c\40\x31\x70\170\40\60\x20\x31\160\x78\40\43\x33\x33\67\141\x62\x37\54\40\60\x20\x31\x70\x78\40\x31\160\x78\40\43\63\x33\x37\x61\x62\x37\x2c\x20\55\61\x70\170\x20\60\x20\61\160\170\40\43\63\x33\x37\141\142\67\x3b\x62\157\x78\x2d\x73\150\141\x64\x6f\167\x3a\x20\60\40\x31\x70\170\40\60\40\43\x33\63\x37\x61\142\67\73\x62\x6f\x72\x64\x65\x72\55\x63\x6f\154\x6f\162\x3a\40\43\x33\x33\67\x61\142\67\40\43\x33\x33\x37\141\x62\67\40\x23\63\x33\67\141\142\x37\x3b\144\151\163\160\x6c\x61\x79\72\x62\x6c\157\143\x6b\73\x6d\x61\x72\147\151\x6e\x2d\x6c\145\146\x74\x3a\x61\165\x74\157\x3b\155\141\x72\x67\x69\156\55\162\x69\x67\150\164\72\x61\x75\x74\x6f\x3b"));
        $form["\x6d\x69\156\151\x6f\x72\141\156\x67\x65\137\163\x61\x6d\154\137\163\x75\x70\160\157\x72\164\137\156\157\x74\x65"] = array("\x23\155\141\x72\x6b\165\x70" => "\74\x64\x69\166\x3e\111\x66\x20\171\x6f\165\x20\x77\x61\x6e\x74\x20\x63\165\163\x74\x6f\x6d\40\146\145\141\164\165\x72\x65\163\x20\x69\x6e\x20\164\150\x65\x20\160\154\165\147\151\156\54\40\152\x75\x73\x74\x20\x64\x72\157\160\x20\141\x6e\40\x65\155\x61\x69\154\x20\164\157\x20\74\141\x20\150\162\x65\x66\x3d\42\155\x61\x69\154\x74\x6f\x3a\x64\162\165\x70\x61\x6c\163\165\x70\x70\157\x72\164\x40\170\145\x63\165\162\151\x66\x79\x2e\143\x6f\x6d\42\x3e\x64\x72\165\x70\141\x6c\163\x75\160\x70\157\162\164\x40\170\x65\x63\x75\x72\x69\x66\171\56\x63\157\x6d\x3c\x2f\x61\x3e\74\x2f\x64\151\166\76");
        $form["\x6d\151\156\151\x6f\x72\141\x6e\x67\145\x5f\146\x61\161"] = array("\43\x6d\x61\x72\x6b\x75\160" => "\74\x62\x72\x3e\74\x64\x69\166\40\x73\164\x79\154\145\75\x22\x74\x65\170\164\55\141\154\x69\x67\156\72\x20\x63\x65\x6e\x74\x65\162\73\42\x3e\74\x61\40\x63\x6c\141\x73\163\75\x22\x6d\157\137\x73\141\155\154\x5f\142\x74\x6e\40\155\x6f\x5f\x73\141\155\x6c\137\x62\x74\x6e\55\160\x72\151\x6d\141\162\171\55\x66\141\161\x20\x6d\x6f\x5f\x73\x61\x6d\154\137\142\x74\156\x2d\154\141\162\x67\x65\x20\155\157\x5f\x73\141\155\154\x5f\x62\164\156\137\146\141\161\137\x62\165\164\x74\157\156\163\42\40\163\164\171\154\x65\x3d\42\x66\x6c\157\x61\x74\72\40\x69\x6e\150\145\x72\151\x74\73\x70\x61\x64\x64\x69\156\x67\72\x20\x33\x70\170\x20\66\160\170\40\x21\x69\x6d\x70\x6f\162\164\x61\156\x74\x3b\143\x6f\x6c\x6f\x72\x3a\x20\43\64\x38\x61\60\x64\143\73\142\x6f\x72\144\145\162\x3a\x20\x32\160\x78\40\163\x6f\x6c\x69\x64\x20\x23\64\x38\x61\x30\x64\143\x3b\x22\x20\x68\162\145\x66\x3d\42\150\x74\x74\x70\x73\x3a\57\57\x66\141\161\x2e\155\151\156\151\157\162\x61\x6e\x67\x65\56\143\x6f\155\57\x6b\x62\x2f\144\x72\x75\x70\141\x6c\57\163\x61\155\x6c\x2d\x64\x72\165\160\141\x6c\x2f\42\40\164\141\162\147\x65\x74\75\42\137\142\154\x61\x6e\x6b\42\76" . "\106\101\x51\x73\74\57\141\76");
        $form["\x6d\151\156\151\157\162\141\156\x67\145\137\x67\x75\x69\x64\x65"] = array("\x23\155\x61\162\153\x75\160" => "\74\141\40\x63\154\141\x73\163\75\x22\x6d\x6f\x5f\x73\141\x6d\154\137\x62\164\156\x20\x6d\x6f\137\x73\141\x6d\x6c\137\142\x74\x6e\55\x70\x72\x69\155\x61\162\x79\55\x66\x61\161\x20\x6d\157\x5f\163\x61\x6d\x6c\x5f\142\164\x6e\x2d\154\141\x72\x67\x65\40\155\x6f\137\163\141\155\154\x5f\x62\x74\156\137\x66\141\x71\x5f\x62\165\164\x74\157\x6e\163\x22\40\x73\x74\x79\x6c\145\75\x22\x66\154\157\x61\x74\72\x20\151\x6e\150\145\162\151\x74\x3b\x70\x61\x64\x64\151\156\147\x3a\x20\x33\160\170\x20\66\x70\x78\40\x21\x69\155\160\x6f\162\x74\141\156\164\73\x63\157\x6c\x6f\x72\x3a\x20\43\x34\x38\141\x30\144\143\73\x62\x6f\x72\x64\145\162\72\40\x32\160\x78\40\x73\157\154\151\144\40\43\x34\x38\141\x30\144\143\73\x22\x20\x68\x72\x65\146\x3d\x22\150\x74\164\160\x73\72\57\x2f\160\154\165\147\151\156\x73\x2e\x6d\x69\156\x69\x6f\x72\141\x6e\x67\145\56\x63\x6f\x6d\57\x63\157\x6e\146\151\147\x75\x72\145\55\144\162\165\160\x61\154\55\163\141\x6d\154\55\163\x69\156\147\154\x65\55\x73\x69\147\x6e\55\x6f\156\42\x20\x74\x61\162\x67\145\164\75\42\x5f\142\x6c\x61\156\153\x22\76" . "\x53\x65\x74\165\160\40\107\165\151\144\145\163\74\57\x61\x3e");
        $form["\x6d\x69\x6e\151\157\162\141\x6e\x67\x65\137\146\x6f\162\165\155"] = array("\43\155\x61\162\153\x75\160" => "\x3c\142\76\74\x2f\x62\x3e\x3c\x61\x20\143\154\x61\x73\x73\75\42\155\x6f\137\163\141\155\154\137\142\164\156\x20\155\157\137\x73\141\155\154\137\x62\x74\156\x2d\160\x72\151\155\141\x72\x79\x2d\146\141\x71\x20\x6d\157\137\163\x61\155\154\x5f\142\x74\156\55\154\141\162\x67\145\40\155\157\137\x73\x61\155\154\137\142\164\156\137\x66\x61\161\x5f\142\x75\x74\164\157\x6e\x73\x22\x20\x73\x74\171\154\145\x3d\42\x6d\x61\162\147\151\156\x2d\154\x65\146\x74\x3a\40\x31\x30\x70\170\x3b\40\x66\154\157\141\x74\x3a\40\151\x6e\150\145\x72\x69\x74\x3b\x70\141\x64\x64\151\x6e\x67\72\40\x33\160\170\x20\66\160\x78\40\x21\151\155\160\157\162\x74\x61\x6e\x74\73\143\x6f\x6c\x6f\162\x3a\x20\43\64\x38\141\x30\144\143\x3b\x62\157\162\x64\145\162\72\x20\x32\160\170\40\x73\x6f\154\x69\144\40\43\64\70\x61\60\144\143\73\42\40\150\162\x65\146\x3d\42\150\164\164\x70\x73\72\x2f\57\146\157\x72\165\x6d\x2e\155\151\x6e\151\x6f\162\141\x6e\x67\145\56\x63\157\x6d\x2f\42\40\164\x61\x72\x67\x65\164\x3d\x22\x5f\142\154\141\156\153\42\x3e" . "\x41\163\x6b\x20\161\x75\145\163\x74\151\157\156\163\x20\157\156\40\146\157\162\165\x6d\x3c\57\141\x3e\x3c\x2f\144\151\166\76\x3c\57\x64\151\x76\76");
    }
    public static function Is_Restricted_Domain($ma)
    {
        $zj = variable_get("\x6d\151\x6e\x69\157\162\141\x6e\147\x65\137\x73\141\x6d\154\x5f\145\156\141\x62\x6c\145\x5f\x64\157\x6d\x61\x69\x6e\x5f\x72\145\x73\x74\x72\151\143\x74\151\x6f\x6e");
        if (!($zj === FALSE)) {
            goto jl;
        }
        return FALSE;
        jl:
        $gf = explode("\100", $ma)[1];
        if (!(is_null($gf) || empty($gf))) {
            goto re;
        }
        return FALSE;
        re:
        $jj = variable_get("\x6d\x69\x6e\151\157\x72\x61\156\x67\x65\137\163\141\x6d\154\x5f\x64\x6f\x6d\x61\151\x6e\163");
        $UB = variable_get("\155\x69\x6e\x69\157\x72\141\x6e\147\x65\137\x73\141\x6d\154\137\144\x6f\x6d\141\x69\156\x73\137\141\x72\145\x5f\167\x68\x69\164\145\137\157\x72\x5f\x62\154\x61\x63\153");
        $jj = explode("\73", $jj);
        if ($UB === "\167\x68\x69\164\145") {
            goto Km;
        }
        if ($UB == "\142\154\x61\143\x6b") {
            goto jQ;
        }
        goto tq;
        Km:
        if (array_search($gf, $jj) === FALSE) {
            goto B_;
        }
        return FALSE;
        goto zn;
        B_:
        return TRUE;
        zn:
        goto tq;
        jQ:
        if (array_search($gf, $jj) === FALSE) {
            goto MP;
        }
        return TRUE;
        goto ol;
        MP:
        return FALSE;
        ol:
        tq:
    }
    public static function send_support_query(&$form, $form_state)
    {
        $xx = trim($form["\x6d\151\x6e\151\157\x72\x61\156\x67\x65\137\163\x61\x6d\154\137\x65\x6d\x61\151\x6c\137\x61\144\x64\162\x65\x73\163"]["\43\166\x61\154\165\145"]);
        $ug = trim($form["\155\151\x6e\151\x6f\x72\x61\x6e\x67\x65\137\163\141\155\x6c\x5f\160\x68\157\156\x65\x5f\156\165\x6d\x62\x65\162"]["\x23\166\141\154\x75\145"]);
        $xI = trim($form["\x6d\x69\156\x69\157\x72\141\156\x67\x65\x5f\x73\141\x6d\154\x5f\163\x75\160\160\157\x72\164\137\161\165\x65\162\171"]["\43\166\141\154\165\x65"]);
        Utilities::send_query($xx, $ug, $xI);
    }
    public static function send_query($xx, $ug, $xI)
    {
        if (empty($xx) || empty($xI)) {
            goto Vm;
        }
        if (!valid_email_address($xx)) {
            goto e2;
        }
        goto mj;
        Vm:
        drupal_set_message(t("\124\150\x65\x20\74\x62\76\x3c\x75\76\x45\x6d\141\151\x6c\x3c\57\165\76\x3c\x2f\x62\76\40\141\x6e\144\40\x3c\142\x3e\x3c\165\76\121\165\145\162\171\x3c\57\165\76\x3c\57\x62\76\x20\146\x69\145\x6c\x64\163\x20\x61\162\145\40\162\145\161\x75\151\x72\x65\x64\x2e"), "\x65\162\x72\157\x72");
        return;
        goto mj;
        e2:
        drupal_set_message(t("\x54\150\145\40\145\155\x61\151\154\x20\141\144\x64\162\145\163\163\40\74\x62\76\74\x69\x3e" . $xx . "\x3c\57\x69\76\x3c\x2f\x62\76\40\x69\163\x20\x6e\157\164\40\x76\141\x6c\151\144\x2e"), "\145\x72\x72\157\x72");
        return;
        mj:
        $JS = new MiniOrangeSamlSupport($xx, $ug, $xI);
        $eu = $JS->sendSupportQuery();
        if ($eu) {
            goto HE;
        }
        drupal_set_message(t("\105\x72\x72\157\x72\40\163\x65\x6e\x64\x69\x6e\147\x20\163\165\160\160\x6f\162\164\x20\161\165\145\x72\x79"), "\145\x72\x72\157\x72");
        goto uo;
        HE:
        drupal_set_message(t("\x53\x75\x70\x70\157\x72\164\x20\x71\165\x65\162\171\x20\x73\x75\143\143\x65\x73\163\146\165\x6c\x6c\171\40\163\x65\x6e\x74"));
        uo:
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $aa = variable_get("\x6d\151\x6e\151\157\162\141\x6e\x67\x65\x5f\163\x61\155\154\137\x62\141\163\x65\x5f\x75\x72\154", '');
        $uf = isset($aa) && !empty($aa) ? $aa : $base_url;
        return $uf;
    }
    public static function getIssuer()
    {
        $vH = variable_get("\155\x69\156\x69\157\x72\141\156\x67\x65\137\163\x61\x6d\154\137\x65\x6e\x74\x69\164\x79\137\151\144", '');
        $uf = Utilities::miniorange_get_baseURL();
        $Do = isset($vH) && !empty($vH) ? $vH : $uf;
        return $Do;
    }
    public static function getCertificatePath($GF = false)
    {
        $uf = '';
        if (!$GF) {
            goto iG;
        }
        $uf = self::miniorange_get_baseURL() . "\x2f";
        iG:
        $na = drupal_get_path("\155\x6f\x64\x75\154\x65", "\155\151\x6e\151\157\162\x61\x6e\x67\145\x5f\163\x61\x6d\154");
        return $uf . $na . "\x2f\x72\x65\163\x6f\165\x72\x63\x65\163\57" . self::getCertficateName();
    }
    public static function getCertficateName()
    {
        $lw = variable_get("\x6d\151\x6e\x69\157\x72\141\x6e\x67\x65\x5f\x73\x61\155\x6c\x5f\x70\x75\142\x6c\137\143\145\162\x74\151\146\151\143\141\164\145", '');
        if (empty($lw)) {
            goto PJ;
        }
        return MiniorangeSAMLConstants::CUSTOM_PUBLIC_CERT_NAME;
        goto Sc;
        PJ:
        return MiniorangeSAMLConstants::DEFAULT_PUBLIC_CERT_NAME;
        Sc:
    }
    public static function getKeyPath()
    {
        $na = drupal_get_path("\x6d\x6f\x64\x75\x6c\145", "\155\x69\156\151\157\162\141\156\x67\145\137\163\x61\x6d\154");
        return $na . "\57\x72\x65\163\x6f\x75\x72\143\145\x73\x2f" . self::getKeyName();
    }
    public static function getKeyName()
    {
        $ag = variable_get("\x6d\x69\x6e\x69\157\x72\141\x6e\147\x65\137\163\x61\x6d\x6c\x5f\x70\x72\151\x76\141\x74\x65\x5f\143\x65\x72\x74\151\146\151\x63\141\164\x65", '');
        if (empty($ag)) {
            goto IH;
        }
        return MiniorangeSAMLConstants::CUSTOM_PRIVATE_KEY_NAME;
        goto gj;
        IH:
        return MiniorangeSAMLConstants::DEFAULT_PRIVATE_KEY_NAME;
        gj:
    }
    public static function getTabNames()
    {
        $mV = array("\x49\144\145\x6e\x74\x69\164\171\137\x50\x72\157\166\151\144\145\162" => "\155\157\137\x6f\x70\x74\151\x6f\156\x73\137\145\156\x75\155\x5f\151\144\145\156\164\x69\164\171\137\160\162\157\166\x69\144\145\162", "\x53\x65\x72\166\x69\143\145\137\120\x72\x6f\x76\151\x64\x65\x72" => "\x6d\157\x5f\x6f\x70\164\151\157\156\x73\x5f\x65\x6e\165\x6d\x5f\163\145\162\166\151\143\145\137\160\162\157\166\x69\x64\x65\162", "\x4d\141\160\160\x69\x6e\147" => "\x6d\157\x5f\x6f\160\164\x69\x6f\x6e\163\x5f\145\x6e\165\155\x5f\155\x61\x70\x70\x69\x6e\x67", "\x53\x69\147\x6e\137\x49\x6e\x5f\123\x65\x74\164\151\156\147\163" => "\x6d\x6f\x5f\x6f\x70\164\x69\x6f\x6e\x73\137\145\156\165\155\x5f\x73\x69\147\156\137\151\x6e\x5f\x73\145\x74\164\x69\x6e\x67\x73", "\103\x75\163\x74\x6f\x6d\x5f\103\x65\162\x74\151\146\x69\x63\141\x74\145" => "\x6d\x6f\x5f\x6f\160\164\x69\157\156\163\137\145\156\165\155\137\143\165\163\164\157\x6d\137\143\x65\x72\x74\x69\x66\151\143\x61\x74\145");
        return $mV;
    }
    public static function getVariableNames($zg)
    {
        if ($zg == "\x6d\157\x5f\157\160\x74\x69\x6f\156\x73\137\145\156\x75\x6d\x5f\151\x64\x65\x6e\x74\151\x74\x79\x5f\x70\162\x6f\166\151\144\145\162") {
            goto w1;
        }
        if ($zg == "\x6d\x6f\137\157\x70\x74\151\157\156\x73\137\145\156\165\x6d\x5f\163\x65\x72\166\151\143\145\x5f\x70\x72\x6f\166\151\x64\x65\x72") {
            goto T5;
        }
        if ($zg == "\x6d\x6f\x5f\157\x70\164\x69\157\x6e\163\137\145\156\165\x6d\x5f\155\x61\x70\x70\151\156\x67") {
            goto Se;
        }
        if ($zg == "\x6d\x6f\x5f\157\160\x74\x69\x6f\x6e\163\137\145\156\165\155\x5f\x73\x69\147\156\x5f\151\156\137\163\x65\164\164\151\x6e\x67\x73") {
            goto Gj;
        }
        if (!($zg == "\x6d\157\137\157\160\164\151\157\x6e\163\137\145\x6e\x75\155\137\x63\x75\x73\164\157\x6d\137\143\x65\162\x74\x69\x66\x69\x63\x61\164\145")) {
            goto C5;
        }
        $Jc = array("\x43\x75\163\x74\157\155\x5f\160\x72\x69\x76\141\x74\145\x5f\x63\145\x72\164" => "\x6d\x69\x6e\151\x6f\x72\x61\156\147\x65\137\163\x61\x6d\154\137\160\162\x69\166\x61\164\x65\x5f\x63\x65\162\164\x69\146\151\x63\x61\164\145", "\x43\165\x73\164\157\155\137\x70\165\x62\x6c\151\x63\x5f\x63\145\162\164" => "\x6d\x69\x6e\151\157\x72\x61\156\147\x65\x5f\x73\141\155\x6c\137\x70\165\142\x6c\x5f\x63\145\x72\164\151\146\x69\143\x61\164\x65");
        C5:
        goto JQ;
        Gj:
        $Jc = array("\x50\162\157\164\145\x63\164\137\167\150\157\154\145\x5f\x73\151\x74\145" => "\155\151\x6e\x69\x6f\x72\x61\156\x67\145\x5f\163\x61\155\x6c\137\x66\x6f\162\143\145\x5f\x61\x75\x74\150", "\101\165\x74\157\137\x72\145\x64\151\x72\145\143\x74" => "\155\x69\156\x69\157\x72\x61\156\147\145\137\163\x61\155\x6c\x5f\141\x75\164\157\137\x72\x65\144\x69\162\145\143\x74\x5f\164\x6f\x5f\x69\x64\160", "\x42\141\x63\153\144\x6f\x6f\x72\137\x4c\x6f\147\x69\156" => "\155\x69\156\151\157\x72\141\x6e\x67\x65\x5f\x73\x61\x6d\x6c\137\145\x6e\x61\142\x6c\x65\x5f\142\141\x63\153\144\157\x6f\162", "\x44\x65\146\141\x75\154\164\137\162\145\x64\151\162\145\x63\x74\137\x75\x72\x6c" => "\x6d\151\156\x69\157\x72\141\x6e\147\x65\x5f\163\x61\x6d\154\x5f\x64\145\146\141\x75\154\x74\x5f\x72\x65\154\141\x79\163\164\x61\164\145", "\x62\141\143\153\x64\x6f\157\x72\x51\165\145\x72\171" => "\155\x69\156\151\157\x72\x61\156\147\x65\137\x62\x61\143\x6b\x64\157\x6f\162\137\161\x75\145\x72\x79", "\x65\x6e\x61\x62\154\x65\x5f\144\157\155\x61\151\156\137\162\145\163\164\x72\151\x63\x74\151\157\156" => "\x6d\151\156\151\x6f\162\141\156\147\x65\x5f\x73\141\155\154\137\x65\156\x61\x62\x6c\x65\x5f\144\157\155\141\x69\x6e\137\162\145\163\x74\x72\x69\x63\x74\151\x6f\156", "\x6d\x69\x6e\151\x6f\x72\141\156\147\145\137\163\x61\x6d\x6c\x5f\144\x6f\x6d\x61\151\156\163\137\x61\162\145\137\x77\150\x69\x74\145\137\x6f\162\137\142\x6c\141\143\153" => "\155\151\156\x69\x6f\x72\x61\156\147\145\x5f\163\141\155\x6c\137\x64\157\155\x61\x69\x6e\163\x5f\141\162\145\x5f\x77\150\151\164\145\137\157\162\137\x62\154\141\143\153", "\x6d\x69\156\151\x6f\162\141\x6e\147\145\137\x73\x61\155\154\137\x64\x6f\x6d\141\151\x6e\163" => "\155\x69\156\151\x6f\x72\x61\x6e\147\145\137\x73\141\x6d\x6c\x5f\x64\157\155\x61\151\x6e\163");
        JQ:
        goto Y_;
        Se:
        $Jc = array("\x55\163\145\162\x6e\141\x6d\x65\137\x61\x74\x74\x72" => "\x6d\x69\x6e\x69\x6f\162\x61\156\147\145\137\163\141\155\x6c\x5f\x75\x73\145\x72\156\141\x6d\x65\137\x61\164\x74\162\151\142\165\164\145", "\x45\x6d\x61\151\154\x5f\141\x74\164\162" => "\155\151\156\151\157\x72\x61\156\147\145\x5f\163\x61\155\x6c\137\x65\155\x61\x69\x6c\x5f\x61\164\x74\162\x69\x62\165\164\x65", "\x52\157\154\x65" => "\155\x69\156\151\x6f\162\x61\x6e\147\145\137\x73\x61\155\x6c\x5f\x69\144\160\137\x61\x74\x74\x72\61\x5f\156\141\x6d\145", "\122\157\x6c\x65\137\x6d\x61\160\x70\x69\156\x67" => "\x6d\x69\156\x69\157\162\141\156\x67\x65\137\x73\x61\x6d\x6c\x5f\x65\156\141\x62\154\145\x5f\x72\157\x6c\145\155\141\160\x70\151\x6e\x67", "\x44\151\163\x61\x62\x6c\x65\137\x61\165\x74\157\137\x63\162\145\141\164\145\137\165\x73\145\x72" => "\x6d\x69\156\x69\x6f\162\141\156\x67\145\137\163\141\155\154\x5f\144\151\x73\141\x62\154\145\137\141\x75\x74\157\x63\162\x65\141\164\x65\x5f\165\163\x65\x72\163", "\x44\x65\146\x61\165\154\x74\x5f\x72\x6f\x6c\145" => "\155\x69\x6e\151\x6f\162\141\x6e\147\145\137\163\141\x6d\x6c\x5f\144\145\146\x61\165\154\x74\x5f\162\157\154\x65", "\x44\x6f\137\x6e\x6f\164\x5f\x75\x70\144\x61\x74\x65\x5f\165\163\145\x72\x5f\162\x6f\154\x65\163" => "\155\x69\156\151\x6f\x72\141\156\147\x65\137\x73\141\x6d\154\x5f\144\x69\x73\141\142\154\145\137\162\157\154\145\x5f\x75\x70\144\141\164\x65");
        Y_:
        goto F2;
        T5:
        $Jc = array("\x49\144\x65\156\164\151\x74\171\x5f\x6e\141\x6d\145" => "\x6d\x69\156\x69\x6f\162\141\156\x67\x65\137\163\x61\155\x6c\137\151\144\160\137\156\141\155\x65", "\x49\x73\163\x75\x65\x72" => "\x6d\x69\x6e\x69\157\x72\141\x6e\x67\145\x5f\x73\x61\155\154\137\x69\144\x70\x5f\151\x73\163\x75\145\162", "\x45\156\141\x62\154\x65\x5f\x53\151\x67\156\x65\x64\x5f\123\123\117\x5f\x61\156\x64\x5f\x53\114\117" => "\155\x69\x6e\x69\157\162\x61\156\147\145\137\x73\x61\155\154\x5f\162\145\x71\165\145\163\x74\137\163\151\147\x6e\145\144", "\116\141\155\145\137\111\x44\x5f\x66\x6f\162\155\141\x74" => "\155\151\x6e\x69\x6f\162\141\x6e\x67\145\x5f\156\x61\155\145\151\144\137\x66\x6f\x72\x6d\x61\x74", "\102\151\156\144\x69\156\147\x5f\123\x53\x4f" => "\155\151\156\x69\157\x72\x61\156\x67\x65\x5f\x73\x61\x6d\x6c\137\x68\164\164\160\x5f\142\x69\x6e\144\x69\x6e\x67", "\102\x69\x6e\x64\151\x6e\147\137\123\x4c\x4f" => "\155\x69\x6e\151\157\x72\x61\x6e\147\145\x5f\x73\141\155\x6c\x5f\150\164\164\160\137\x62\x69\156\x64\151\x6e\147\x5f\163\154\157", "\114\x6f\x67\x69\x6e\x5f\x55\122\x4c" => "\x6d\151\x6e\x69\157\162\141\156\x67\x65\137\x73\141\x6d\x6c\137\151\x64\160\x5f\154\157\147\x69\156\x5f\165\x72\x6c", "\x45\x6e\x61\142\x6c\145\x5f\x6c\x6f\147\157\165\164\x5f\167\x69\x74\x68\157\x75\x74\137\162\145\163\160\x6f\156\163\145" => "\155\151\156\151\157\x72\x61\x6e\x67\x65\137\163\x61\155\154\x5f\x65\x6e\x61\142\154\145\137\154\157\147\x6f\165\x74", "\114\x6f\147\157\x75\x74\x5f\125\x52\x4c" => "\155\151\x6e\151\x6f\162\x61\x6e\x67\x65\x5f\x73\141\155\154\x5f\x69\144\x70\137\154\x6f\x67\157\165\x74\x5f\x75\162\154", "\130\65\60\x39\137\x63\145\x72\x74\151\x66\x69\143\x61\164\x65" => "\155\151\x6e\151\x6f\x72\141\156\147\145\x5f\163\x61\155\x6c\137\151\x64\160\137\x78\x35\x30\x39\x5f\143\x65\162\x74\x69\x66\151\143\141\x74\145", "\105\x6e\141\x62\x6c\145\137\x6c\x6f\147\151\x6e\x5f\x77\151\164\150\x5f\x53\101\115\x4c" => "\155\x69\156\x69\157\x72\x61\x6e\147\145\137\x73\x61\155\x6c\x5f\145\x6e\141\142\x6c\x65\x5f\154\157\147\x69\x6e", "\123\x69\147\x6e\x61\164\x75\162\145\x5f\x41\x6c\147\157" => "\x73\x65\x63\165\x72\x69\164\x79\x5f\163\151\x67\x6e\141\164\165\162\145\137\141\154\x67\x6f\162\151\x74\x68\155");
        F2:
        goto JO;
        w1:
        $Jc = array("\102\162\157\153\145\x72\x5f\163\x65\162\x76\151\x63\x65" => "\x6d\x6f\137\163\141\x6d\x6c\137\x65\x6e\141\142\154\x65\137\143\154\157\x75\144\x5f\x62\x72\x6f\x6b\x65\x72", "\123\x50\137\x42\x61\x73\x65\x5f\125\162\154" => "\x6d\x69\156\151\x6f\x72\x61\x6e\x67\x65\x5f\x73\x61\155\154\x5f\142\141\163\x65\137\165\162\154", "\123\120\x5f\105\x6e\x74\151\x74\x79\137\111\104" => "\x6d\x69\156\x69\x6f\162\x61\x6e\147\x65\x5f\x73\141\155\154\137\x65\156\164\151\164\171\x5f\x69\144");
        JO:
        return $Jc;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\x63\x75\x72\154", get_loaded_extensions())) {
            goto wj;
        }
        return 0;
        goto wa;
        wj:
        return 1;
        wa:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($oR)
    {
        $UR = '';
        $rJ = 0;
        PO:
        if (!($rJ < strlen($oR))) {
            goto o7;
        }
        $UR .= sprintf("\45\60\62\170", ord($oR[$rJ]));
        w5:
        $rJ++;
        goto PO;
        o7:
        return $UR;
    }
    public static function generateRandomBytes($x7, $mD = TRUE)
    {
        return openssl_random_pseudo_bytes($x7);
    }
    public static function insertSignature(XMLSecurityKey $AM, array $fp, DOMElement $NQ = NULL, DOMNode $HZ = NULL)
    {
        $GQ = new XMLSecurityDSig();
        $GQ->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($AM->type) {
            case XMLSecurityKey::RSA_SHA256:
                $S2 = XMLSecurityDSig::SHA256;
                goto RX;
            case XMLSecurityKey::RSA_SHA384:
                $S2 = XMLSecurityDSig::SHA384;
                goto RX;
            case XMLSecurityKey::RSA_SHA512:
                $S2 = XMLSecurityDSig::SHA512;
                goto RX;
            default:
                $S2 = XMLSecurityDSig::SHA1;
        }
        Le:
        RX:
        $GQ->addReferenceList(array($NQ), $S2, array("\150\164\x74\160\x3a\x2f\57\x77\167\167\56\167\63\x2e\157\x72\147\x2f\62\60\60\x30\57\60\x39\x2f\170\x6d\154\144\x73\151\x67\43\145\156\x76\145\154\157\x70\145\x64\55\163\x69\147\x6e\x61\x74\165\162\x65", XMLSecurityDSig::EXC_C14N), array("\151\x64\137\x6e\141\155\x65" => "\x49\104", "\x6f\166\145\x72\x77\162\x69\x74\145" => FALSE));
        $GQ->sign($AM);
        foreach ($fp as $Yy) {
            $GQ->add509Cert($Yy, TRUE);
            p1:
        }
        To:
        $GQ->insertSignature($NQ, $HZ);
    }
    public static function signXML($TW, $Ip, $NW, $DW = '', $aS)
    {
        $Tu = array("\164\171\160\145" => "\160\162\151\166\141\164\x65");
        if ($aS == "\122\123\101\x5f\x53\x48\101\x32\x35\66") {
            goto Ue;
        }
        if ($aS == "\x52\x53\101\x5f\123\110\x41\63\x38\x34") {
            goto MR;
        }
        if ($aS == "\x52\123\x41\x5f\x53\x48\x41\65\61\x32") {
            goto Cn;
        }
        if ($aS == "\122\123\x41\137\123\110\x41\61") {
            goto aF;
        }
        goto Ix;
        Ue:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $Tu);
        goto Ix;
        MR:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $Tu);
        goto Ix;
        Cn:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $Tu);
        goto Ix;
        aF:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $Tu);
        Ix:
        $AM->loadKey($NW, TRUE);
        $iW = file_get_contents($Ip);
        $hW = new DOMDocument();
        $hW->loadXML($TW);
        $S_ = $hW->firstChild;
        if (!empty($DW)) {
            goto V2;
        }
        self::insertSignature($AM, array($iW), $S_);
        goto Zc;
        V2:
        $sN = $hW->getElementsByTagName($DW)->item(0);
        self::insertSignature($AM, array($iW), $S_, $sN);
        Zc:
        $Xq = $S_->ownerDocument->saveXML($S_);
        $bK = base64_encode($Xq);
        return $bK;
    }
    public static function postSAMLRequest($aa, $UM, $y2)
    {
        echo "\74\x68\164\155\x6c\76\x3c\x68\x65\141\x64\76\12\40\x20\x20\40\40\x20\x20\40\40\40\x20\x20\40\x20\40\x20\40\40\x3c\163\143\162\151\x70\164\x20\x73\x72\x63\x3d\x27\x68\164\164\160\163\72\57\x2f\x63\x6f\x64\145\56\152\x71\x75\x65\162\x79\x2e\x63\157\155\57\x6a\x71\165\x65\x72\171\x2d\x31\x2e\x31\x31\x2e\63\56\155\x69\x6e\x2e\x6a\x73\x27\x3e\74\57\163\x63\x72\x69\160\164\x3e\xa\x20\40\x20\40\40\x20\40\x20\40\x20\40\x20\40\x20\40\x20\40\40\x3c\163\143\162\151\160\x74\x20\164\171\160\145\x3d\x22\164\145\x78\164\57\152\141\166\x61\x73\143\162\x69\160\164\x22\76\x24\50\x66\x75\x6e\143\164\x69\x6f\156\x28\x29\x7b\x64\x6f\143\165\x6d\145\x6e\x74\x2e\146\157\162\x6d\x73\x5b\x27\x73\141\x6d\154\x2d\x72\x65\x71\165\145\163\x74\x2d\146\157\162\155\47\135\x2e\x73\x75\x62\x6d\151\164\50\x29\x3b\x7d\51\x3b\74\57\x73\x63\x72\x69\x70\164\76\74\x2f\x68\x65\141\144\x3e\12\x20\x20\40\x20\40\x20\x20\40\40\40\x20\x20\x20\40\40\x20\40\x20\x3c\x62\157\144\x79\x3e\x50\154\145\x61\163\x65\x20\x77\141\151\164\x2e\56\56\74\146\x6f\162\x6d\40\x61\143\164\x69\x6f\x6e\x3d\42" . $aa . "\x22\40\155\x65\164\150\157\144\75\42\160\157\163\164\x22\x20\x69\144\x3d\x22\x73\141\155\154\x2d\x72\145\161\165\x65\x73\x74\55\x66\157\x72\155\42\76\xa\40\40\x20\x20\40\x20\40\40\40\40\x20\40\x20\x20\40\40\x20\40\40\40\x3c\x69\x6e\160\165\x74\x20\164\171\x70\145\x3d\42\150\x69\x64\x64\145\156\x22\x20\156\x61\x6d\x65\x3d\x22\123\101\x4d\x4c\x52\x65\161\x75\x65\163\x74\x22\40\x76\141\154\x75\145\x3d\42" . $UM . "\42\x20\x2f\76\xa\40\x20\40\x20\x20\40\x20\x20\40\40\40\40\x20\40\x20\x20\40\x20\x20\40\x3c\x69\156\160\165\x74\40\164\x79\160\145\x3d\42\150\x69\144\144\x65\156\x22\40\x6e\x61\155\145\75\42\122\x65\154\141\x79\x53\164\141\x74\145\x22\40\x76\141\154\x75\x65\x3d\42" . htmlentities($y2) . "\42\x20\x2f\x3e\x3c\x2f\146\x6f\162\155\x3e\xa\x20\40\x20\x20\40\40\40\x20\40\40\40\x20\x20\40\40\x20\40\x20\40\40\74\57\142\x6f\144\171\76\12\x20\x20\x20\40\x20\40\x20\x20\x20\x20\x20\x20\x20\40\74\x2f\x68\x74\x6d\154\76";
        die;
    }
    public static function createAuthnRequest($vx, $vH, $vu, $pA, $c4 = "\146\x61\154\163\145", $sk)
    {
        $xK = "\74\x3f\170\x6d\x6c\40\x76\x65\x72\163\x69\x6f\156\x3d\42\61\x2e\60\x22\x20\145\156\143\x6f\x64\x69\x6e\147\x3d\42\x55\x54\x46\55\x38\x22\77\x3e" . "\x3c\163\141\155\x6c\160\x3a\x41\x75\x74\150\156\x52\x65\x71\165\x65\x73\x74\40\x78\x6d\x6c\156\x73\72\163\141\x6d\x6c\x70\75\x22\165\162\x6e\72\x6f\141\x73\x69\x73\x3a\x6e\x61\155\145\x73\72\164\143\x3a\x53\101\x4d\x4c\72\x32\x2e\x30\x3a\160\162\x6f\164\x6f\143\157\154\42\x20\x78\155\154\156\163\75\x22\x75\x72\156\x3a\157\141\163\151\x73\x3a\156\141\155\145\x73\x3a\164\x63\72\x53\x41\115\114\x3a\62\56\60\72\x61\x73\x73\145\x72\x74\x69\x6f\156\x22\x20\111\104\x3d\x22" . self::generateID() . "\x22\40\126\145\x72\x73\151\157\156\75\x22\x32\56\x30\x22\x20\x49\x73\163\x75\145\x49\156\x73\164\141\156\164\75\42" . self::generateTimestamp() . "\x22";
        if (!($c4 == "\164\162\165\145")) {
            goto Nd;
        }
        $xK .= "\x20\106\157\162\143\x65\101\165\164\150\156\75\42\164\162\165\145\x22";
        Nd:
        $xK .= "\x20\x50\x72\x6f\164\x6f\143\157\x6c\102\x69\156\144\x69\x6e\147\x3d\42\165\162\156\72\157\x61\163\151\x73\x3a\156\141\x6d\x65\x73\72\x74\143\x3a\x53\101\115\x4c\x3a\62\56\60\x3a\142\151\156\x64\x69\x6e\147\163\x3a\110\x54\x54\x50\x2d\x50\x4f\x53\124\42\x20\101\163\163\x65\162\x74\151\157\156\x43\x6f\x6e\x73\165\x6d\x65\x72\x53\145\x72\166\x69\x63\x65\x55\x52\x4c\x3d\x22" . $vx . "\x22\x20\x44\145\x73\164\151\x6e\x61\164\151\x6f\x6e\75\x22" . $vu . "\x22\76\74\163\141\155\x6c\72\x49\163\x73\165\x65\x72\x20\170\155\x6c\x6e\163\72\163\x61\x6d\x6c\x3d\x22\x75\x72\156\72\157\141\163\x69\x73\72\156\141\x6d\145\x73\72\x74\x63\72\x53\101\x4d\x4c\72\62\x2e\60\72\141\x73\163\145\x72\x74\151\x6f\156\x22\76" . $vH . "\x3c\x2f\163\141\155\154\72\111\163\163\165\145\x72\76\74\163\x61\155\154\160\72\116\141\155\145\x49\x44\x50\x6f\154\x69\143\171\40\101\154\154\157\x77\103\162\145\141\164\145\75\42\x74\162\x75\145\42\x20\106\x6f\x72\155\141\164\75\x22" . $pA . "\42\12\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\40\40\40\40\40\40\40\40\x20\x20\40\40\x20\x2f\76\74\57\163\x61\155\154\x70\72\101\x75\x74\x68\156\122\x65\x71\165\x65\x73\164\76";
        if (!(empty($sk) || $sk == "\x48\x54\124\x50\x2d\x52\145\x64\x69\x72\145\143\x74")) {
            goto fW;
        }
        $Q0 = gzdeflate($xK);
        $kK = base64_encode($Q0);
        $TS = urlencode($kK);
        $xK = $TS;
        fW:
        return $xK;
    }
    public static function createSAMLRequest($vx, $vH, $vu, $pA, $c4 = "\146\141\154\x73\x65")
    {
        $xK = "\x3c\77\x78\155\154\40\x76\145\162\x73\151\x6f\156\75\x22\61\56\60\42\40\x65\156\143\157\x64\151\156\x67\x3d\42\125\124\106\55\70\42\77\x3e" . "\x3c\163\141\x6d\154\160\x3a\x41\x75\x74\x68\156\122\145\161\165\145\x73\164\40\x78\x6d\154\156\x73\72\163\141\155\x6c\x70\75\42\165\x72\x6e\x3a\157\x61\163\x69\x73\72\156\141\x6d\145\x73\72\164\x63\x3a\123\101\x4d\114\72\x32\56\60\72\160\x72\157\x74\157\143\157\x6c\x22\40\111\x44\x3d\42" . self::generateID() . "\42\40\126\x65\162\x73\151\157\x6e\75\x22\62\56\x30\x22\40\x49\x73\163\165\145\x49\x6e\x73\164\141\x6e\x74\75\42" . self::generateTimestamp() . "\x22";
        if (!($c4 == "\x74\162\165\145")) {
            goto qs;
        }
        $xK .= "\x20\106\157\x72\143\145\x41\x75\x74\150\x6e\75\42\164\162\165\x65\42";
        qs:
        $xK .= "\40\x50\x72\x6f\164\157\143\x6f\x6c\x42\151\x6e\x64\x69\156\x67\x3d\42\165\x72\x6e\72\x6f\141\163\x69\x73\x3a\x6e\141\x6d\145\163\x3a\x74\x63\x3a\123\x41\x4d\114\x3a\62\56\60\72\x62\151\156\144\151\156\x67\x73\72\110\124\x54\x50\55\120\117\123\124\x22\40\x41\163\163\145\162\164\151\157\x6e\103\157\156\163\x75\x6d\x65\x72\x53\x65\x72\x76\x69\143\145\x55\122\114\75\x22" . $vx . "\42\40\104\x65\x73\164\151\156\141\x74\151\157\x6e\x3d\42" . $vu . "\42\76\74\x73\x61\x6d\154\72\x49\x73\163\x75\145\x72\40\x78\155\154\x6e\x73\72\163\x61\155\x6c\75\42\x75\162\156\72\x6f\141\x73\151\x73\x3a\156\141\x6d\x65\163\72\x74\x63\x3a\123\101\115\x4c\72\62\x2e\60\72\141\x73\x73\145\x72\164\151\x6f\156\x22\x3e" . $vH . "\x3c\x2f\163\x61\155\154\x3a\x49\163\x73\x75\x65\x72\x3e\74\163\x61\155\154\160\72\x4e\141\x6d\x65\111\x44\120\x6f\x6c\x69\x63\x79\40\x41\154\154\157\x77\103\162\145\141\x74\145\75\x22\164\162\165\145\42\40\x46\x6f\162\x6d\141\x74\x3d\x22" . $pA . "\42\12\40\x20\x20\x20\40\40\40\40\40\40\40\40\x20\40\40\40\40\x20\x20\40\40\x20\40\40\57\x3e\x3c\57\x73\x61\155\154\x70\72\x41\x75\164\x68\156\122\145\161\165\x65\x73\164\76";
        return $xK;
    }
    public static function mo_saml_logout()
    {
        $bO = variable_get("\x6d\x69\156\x69\x6f\x72\141\156\147\145\137\163\x61\x6d\x6c\137\x69\x64\160\x5f\x6c\157\x67\x6f\165\x74\137\165\162\154", '');
        $si = variable_get("\155\151\156\x69\x6f\162\x61\156\147\x65\137\163\x61\x6d\154\137\150\164\164\x70\137\142\x69\x6e\144\x69\156\x67\x5f\163\x6c\x6f", '');
        $aS = variable_get("\163\x65\143\x75\162\151\x74\171\x5f\x73\151\147\156\x61\x74\x75\162\x65\137\x61\154\x67\157\x72\x69\164\x68\x6d");
        if (empty($bO)) {
            goto nE;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto SY;
        }
        session_start();
        SY:
        if (isset($_SESSION["\x6d\x6f\x5f\163\141\x6d\154\x5f\154\157\147\157\x75\164\x5f\162\145\x71\165\145\163\164"])) {
            goto U6;
        }
        if (isset($_SESSION["\x6d\x6f\x5f\163\141\x6d\x6c"]["\154\157\147\147\145\x64\x5f\151\x6e\x5f\167\151\164\x68\x5f\x69\144\x70"])) {
            goto k1;
        }
        session_destroy();
        if (!(isset($_REQUEST["\x52\145\x6c\x61\171\123\164\141\164\x65"]) && !empty($_REQUEST["\122\145\x6c\x61\171\x53\164\x61\164\145"]))) {
            goto OU;
        }
        drupal_goto($_REQUEST["\122\x65\x6c\x61\171\x53\164\141\164\145"]);
        die;
        OU:
        goto zc;
        U6:
        goto zc;
        k1:
        global $base_url;
        unset($_SESSION["\155\x6f\137\x73\x61\155\x6c"]);
        $aA = $_SESSION["\x73\x65\x73\x73\151\157\156\x49\x6e\x64\145\x78"];
        $cO = $_SESSION["\116\x61\155\145\111\104"];
        $Ni = variable_get("\x6d\x69\x6e\x69\157\x72\141\156\x67\x65\x5f\x73\x61\x6d\x6c\x5f\x65\156\141\142\154\145\137\x6c\x6f\x67\157\165\164");
        if (!($Ni == 1 || $Ni == true)) {
            goto nT;
        }
        session_destroy();
        nT:
        if (isset($_SESSION["\154\157\147\x6f\x75\164"]) && !empty($_SESSION["\x6c\157\147\157\x75\164"])) {
            goto x_;
        }
        $Ub = Utilities::miniorange_get_baseURL();
        goto ZR;
        x_:
        $Ub = $_SESSION["\x6c\x6f\147\x6f\165\164"];
        ZR:
        $lx = Utilities::getIssuer();
        $yz = variable_get("\155\151\156\151\157\162\141\x6e\x67\x65\137\163\x61\x6d\x6c\x5f\x72\x65\161\165\145\163\164\137\x73\151\147\x6e\x65\144");
        $vu = $bO;
        $Ki = $Ub;
        $O9 = Utilities::createLogoutRequest($cO, $aA, $lx, $vu, $si);
        $na = drupal_get_path("\x6d\157\x64\x75\x6c\145", "\x6d\151\x6e\x69\157\162\x61\156\147\x65\x5f\163\141\155\x6c");
        if (empty($si) || $si == "\x48\x74\x74\x70\122\145\x64\151\x72\145\143\164") {
            goto gF;
        }
        if ($yz) {
            goto oT;
        }
        $bK = base64_encode($O9);
        Utilities::postSAMLRequest($bO, $bK, $Ki);
        die;
        oT:
        $NW = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $na . DIRECTORY_SEPARATOR . "\162\145\x73\x6f\x75\x72\143\145\x73" . DIRECTORY_SEPARATOR . Utilities::getKeyName();
        $Ip = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $na . DIRECTORY_SEPARATOR . "\162\145\x73\x6f\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . self::getCertficateName();
        $bK = Utilities::signXML($O9, $Ip, $NW, "\116\x61\x6d\x65\x49\104", $aS);
        Utilities::postSAMLRequest($bO, $bK, $Ki);
        goto qQ;
        gF:
        $wD = $bO;
        if (strpos($bO, "\x3f") !== false) {
            goto nd;
        }
        $wD .= "\x3f";
        goto Jq;
        nd:
        $wD .= "\46";
        Jq:
        if ($yz) {
            goto J2;
        }
        $wD .= "\123\x41\115\x4c\122\145\x71\x75\145\x73\164\x3d" . $O9 . "\x26\x52\145\x6c\x61\x79\123\x74\141\x74\x65\x3d" . urlencode($Ki);
        header("\x4c\x6f\143\141\x74\x69\x6f\156\x3a\40" . $wD);
        die;
        J2:
        if ($aS == "\122\x53\x41\x5f\x53\110\x41\62\x35\66") {
            goto Mt;
        }
        if ($aS == "\122\x53\101\x5f\x53\110\101\x33\x38\x34") {
            goto vV;
        }
        if ($aS == "\x52\123\x41\x5f\x53\x48\x41\65\x31\x32") {
            goto wn;
        }
        if ($aS == "\x52\123\x41\137\x53\x48\x41\61") {
            goto l_;
        }
        goto Vo;
        Mt:
        $O9 = "\123\x41\115\x4c\x52\x65\161\x75\145\163\164\x3d" . $O9 . "\x26\122\x65\154\141\x79\x53\164\141\x74\145\75" . urlencode($Ki) . "\x26\x53\x69\147\x41\154\x67\75" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto Vo;
        vV:
        $O9 = "\x53\x41\115\114\x52\x65\161\165\145\x73\x74\x3d" . $O9 . "\46\122\145\x6c\141\x79\123\164\x61\x74\145\75" . urlencode($Ki) . "\x26\123\151\147\x41\x6c\147\75" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto Vo;
        wn:
        $O9 = "\x53\x41\x4d\x4c\x52\x65\x71\165\145\x73\164\75" . $O9 . "\46\x52\145\x6c\141\171\x53\x74\x61\164\145\x3d" . urlencode($Ki) . "\x26\123\x69\147\x41\154\x67\75" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto Vo;
        l_:
        $O9 = "\123\101\x4d\114\x52\x65\161\x75\x65\163\164\x3d" . $O9 . "\46\122\145\154\141\171\123\164\141\x74\x65\x3d" . urlencode($Ki) . "\46\123\151\x67\101\154\x67\75" . urlencode(XMLSecurityKey::RSA_SHA1);
        Vo:
        $Tu = array("\164\171\x70\145" => "\x70\162\151\166\x61\x74\x65");
        if ($aS == "\122\123\101\x5f\123\110\101\x32\x35\66") {
            goto Pt;
        }
        if ($aS == "\122\x53\x41\137\x53\110\101\x33\x38\64") {
            goto iw;
        }
        if ($aS == "\x52\x53\x41\137\123\110\x41\x35\x31\x32") {
            goto zt;
        }
        if ($aS == "\122\x53\x41\x5f\x53\110\101\x31") {
            goto X7;
        }
        goto A8;
        Pt:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $Tu);
        goto A8;
        iw:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $Tu);
        goto A8;
        zt:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $Tu);
        goto A8;
        X7:
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $Tu);
        A8:
        $VT = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $na . DIRECTORY_SEPARATOR . "\162\x65\163\157\165\162\143\x65\x73" . DIRECTORY_SEPARATOR . self::getKeyName();
        $AM->loadKey($VT, FALSE);
        $cZ = new XMLSecurityDSig();
        $d9 = $AM->signData($O9);
        $d9 = base64_encode($d9);
        $wD .= $O9 . "\46\123\x69\x67\x6e\141\x74\165\162\145\75" . urlencode($d9);
        header("\114\157\143\141\164\x69\x6f\156\x3a\x20" . $wD);
        die;
        qQ:
        zc:
        nE:
    }
    public static function createLogoutRequest($cO, $aA = '', $vH, $vu, $C7 = "\110\164\x74\160\122\145\144\151\162\145\x63\x74")
    {
        $xK = "\x3c\x3f\x78\155\x6c\x20\x76\x65\162\163\x69\x6f\x6e\x3d\42\x31\56\x30\x22\40\x65\156\143\x6f\x64\x69\x6e\x67\75\42\x55\124\106\55\70\42\77\76" . "\x3c\x73\141\155\x6c\160\x3a\x4c\157\x67\x6f\165\x74\122\145\161\x75\145\x73\x74\x20\x78\x6d\x6c\x6e\163\72\x73\x61\155\x6c\x70\75\42\165\162\x6e\72\157\141\163\x69\x73\72\156\x61\x6d\x65\163\72\x74\x63\x3a\x53\x41\115\x4c\72\x32\56\60\x3a\160\x72\x6f\164\157\x63\x6f\x6c\42\x20\170\x6d\x6c\156\x73\x3a\163\x61\155\154\x3d\42\165\x72\x6e\x3a\157\x61\163\151\x73\x3a\156\141\155\x65\x73\72\164\143\72\123\x41\115\114\x3a\x32\x2e\60\72\x61\x73\163\145\x72\x74\151\x6f\156\42\x20\x46\157\162\x63\x65\x41\x75\164\x68\x6e\x3d\42\x74\x72\x75\145\42\x20\111\104\x3d\42" . self::generateID() . "\x22\40\111\163\x73\165\x65\111\x6e\163\x74\141\156\x74\75\42" . self::generateTimestamp() . "\x22\40\x56\x65\x72\x73\x69\x6f\156\75\42\62\56\x30\42\40\x44\145\x73\164\x69\156\141\164\151\x6f\x6e\75\42" . $vu . "\x22\x3e\xa\x9\x9\x9\x9\11\11\74\163\x61\155\x6c\x3a\111\163\163\x75\x65\162\x20\x78\x6d\154\156\163\72\x73\x61\155\154\75\42\x75\x72\x6e\72\157\141\x73\x69\163\72\156\x61\155\x65\163\72\x74\143\72\123\101\x4d\x4c\x3a\x32\56\60\72\141\x73\x73\145\162\x74\x69\157\156\42\x3e" . $vH . "\x3c\x2f\163\x61\x6d\x6c\72\111\163\x73\x75\x65\x72\x3e\xa\x9\11\x9\11\x9\x9\x3c\163\x61\x6d\154\72\x4e\141\x6d\145\111\x44\40\170\x6d\x6c\x6e\163\x3a\163\x61\155\154\75\x22\165\162\x6e\x3a\157\141\x73\x69\x73\72\156\141\155\x65\163\72\x74\143\x3a\x53\x41\x4d\114\x3a\62\56\60\72\x61\163\163\145\x72\x74\x69\157\x6e\42\x3e" . $cO . "\74\57\x73\x61\x6d\x6c\x3a\x4e\x61\155\x65\x49\104\76";
        if (empty($aA)) {
            goto mz;
        }
        $xK .= "\x3c\163\x61\x6d\154\x70\72\x53\145\x73\x73\151\x6f\156\x49\156\x64\145\170\76" . $aA . "\x3c\57\x73\141\x6d\154\160\72\x53\x65\x73\163\x69\x6f\156\x49\156\144\145\170\76";
        mz:
        $xK .= "\x3c\x2f\x73\141\155\154\160\72\x4c\x6f\147\x6f\x75\x74\122\145\x71\x75\145\163\164\x3e";
        if (!(empty($C7) || $C7 == "\x48\164\164\160\x52\145\144\151\162\x65\143\164")) {
            goto Sq;
        }
        $Q0 = gzdeflate($xK);
        $kK = base64_encode($Q0);
        $TS = urlencode($kK);
        $xK = $TS;
        Sq:
        return $xK;
    }
    public static function upload_metadata($Ks, $MG = false)
    {
        if (empty(variable_get("\155\151\x6e\x69\157\162\x61\156\x67\145\x5f\163\x61\155\x6c\x5f\x69\144\x70\137\x6e\141\x6d\145"))) {
            goto v6;
        }
        variable_set("\x6d\151\x6e\151\157\162\141\x6e\x67\x65\137\163\141\x6d\x6c\137\x69\144\x70\137\156\x61\155\x65", "\111\144\x65\x6e\x74\x69\x74\x79\40\x50\162\157\x76\151\x64\x65\162");
        v6:
        global $base_url;
        require_once drupal_get_path("\155\157\x64\x75\x6c\145", "\155\151\x6e\151\x6f\162\x61\156\x67\145\x5f\163\141\155\154") . DIRECTORY_SEPARATOR . "\151\156\143\154\165\x64\145\163" . DIRECTORY_SEPARATOR . "\115\145\164\141\144\x61\164\x61\122\145\141\x64\145\x72\56\160\150\x70";
        $hW = new DOMDocument();
        $hW->loadXML($Ks);
        restore_error_handler();
        $cw = $hW->firstChild;
        if (!empty($cw)) {
            goto Bn;
        }
        drupal_set_message(t("\120\x6c\145\x61\x73\145\40\x70\162\157\x76\151\x64\145\x20\x61\x20\x76\141\x6c\x69\x64\x20\x6d\x65\164\x61\x64\x61\x74\x61\x20\x66\x69\x6c\145\x2e"), "\x65\162\x72\157\162");
        return;
        goto xw;
        Bn:
        $VD = new IDPMetadataReader($hW);
        $gv = $VD->getIdentityProviders();
        if (!empty($gv)) {
            goto zK;
        }
        drupal_set_message(t("\120\x6c\x65\141\163\145\x20\x70\162\157\x76\x69\144\145\x20\x61\40\x76\141\154\151\144\40\155\145\164\141\x64\141\164\x61\40\x66\x69\x6c\x65\x2e"), "\145\x72\162\157\162");
        return;
        zK:
        foreach ($gv as $AM => $hh) {
            $Te = $hh->getLoginURL("\110\x54\124\120\x2d\x52\x65\x64\151\x72\145\143\164");
            $bO = $hh->getLogoutURL("\110\x54\x54\x50\x2d\122\x65\x64\x69\162\145\143\164");
            if (!empty($Te)) {
                goto mJ;
            }
            $Te = $hh->getLoginURL("\110\x54\x54\x50\55\120\x4f\x53\124");
            mJ:
            if (!empty($bO)) {
                goto vW;
            }
            $bO = $hh->getLogoutURL("\x48\x54\124\x50\55\120\117\123\x54");
            vW:
            $LJ = $hh->getEntityID();
            $W7 = $hh->getSigningCertificate();
            $K2 = $base_url;
            if (!($MG == true)) {
                goto ec;
            }
            variable_set("\155\x69\156\x69\157\162\141\x6e\147\x65\137\163\x61\x6d\154\137\x69\x64\160\x5f\x6c\157\x67\x69\156\x5f\165\x72\154", $Te);
            variable_set("\155\x69\x6e\x69\x6f\x72\x61\156\147\145\x5f\163\x61\x6d\154\x5f\x69\x64\x70\x5f\x6c\157\147\157\165\x74\137\165\x72\154", $bO);
            ec:
            variable_set("\155\151\x6e\x69\157\162\x61\x6e\x67\x65\x5f\163\x61\155\x6c\137\151\x64\x70\x5f\151\163\163\x75\145\x72", $LJ);
            variable_set("\155\151\x6e\151\x6f\162\141\x6e\147\145\137\x73\141\x6d\x6c\x5f\151\x64\160\x5f\170\65\60\71\137\143\x65\162\x74\x69\x66\x69\x63\x61\x74\x65", $W7);
            h_:
        }
        Z2:
        if (!($MG == true)) {
            goto Yp;
        }
        drupal_set_message(t("\111\144\145\156\x74\x69\x74\x79\40\120\x72\157\166\x69\144\145\x72\40\103\x6f\x6e\146\x69\x67\165\x72\x61\x74\x69\x6f\156\x20\163\165\143\x63\x65\163\x73\146\165\154\x6c\x79\x20\163\141\x76\145\144\56"));
        return;
        Yp:
        xw:
    }
    public static function generateTimestamp($Td = NULL)
    {
        if (!($Td === NULL)) {
            goto r3;
        }
        $Td = time();
        r3:
        return gmdate("\131\x2d\155\55\144\x5c\x54\x48\x3a\x69\x3a\163\x5c\132", $Td);
    }
    public static function xpQuery(DOMNode $FF, $xI)
    {
        watchdog("\x6d\151\156\151\x6f\162\141\x6e\x67\x65\137\163\x61\155\154", "\125\164\151\154\151\x74\x69\x65\x73\40\x78\160\x51\165\x65\162\x79", array());
        static $JP = NULL;
        if ($FF instanceof DOMDocument) {
            goto qO;
        }
        $rU = $FF->ownerDocument;
        goto Bh;
        qO:
        $rU = $FF;
        Bh:
        if (!($JP === NULL || !$JP->document->isSameNode($rU))) {
            goto Wg;
        }
        $JP = new DOMXPath($rU);
        $JP->registerNamespace("\x73\157\x61\x70\55\x65\x6e\166", "\150\164\x74\x70\72\57\x2f\163\x63\150\145\155\141\163\56\170\x6d\154\163\157\141\160\x2e\x6f\162\x67\57\x73\x6f\141\160\x2f\x65\x6e\x76\145\154\157\x70\x65\x2f");
        $JP->registerNamespace("\x73\141\x6d\154\x5f\160\x72\x6f\x74\x6f\x63\x6f\154", "\165\162\156\72\157\141\x73\x69\x73\72\x6e\141\155\x65\163\x3a\164\x63\x3a\x53\101\x4d\x4c\x3a\x32\x2e\60\x3a\x70\x72\157\164\157\143\157\x6c");
        $JP->registerNamespace("\163\x61\x6d\x6c\137\141\x73\x73\145\x72\x74\x69\x6f\x6e", "\165\x72\x6e\x3a\157\141\x73\x69\163\72\x6e\x61\155\x65\x73\72\164\143\x3a\123\x41\115\x4c\x3a\62\x2e\x30\x3a\x61\x73\163\x65\162\164\x69\x6f\156");
        $JP->registerNamespace("\x73\x61\155\154\137\x6d\x65\x74\141\144\141\164\141", "\x75\x72\156\72\x6f\141\163\x69\x73\x3a\x6e\141\155\x65\x73\x3a\164\x63\72\x53\x41\x4d\x4c\72\x32\56\x30\x3a\155\145\x74\141\144\x61\164\141");
        $JP->registerNamespace("\144\163", "\150\164\x74\160\x3a\57\57\167\167\167\x2e\167\63\x2e\157\x72\147\57\x32\x30\60\x30\57\x30\x39\57\x78\155\154\144\163\x69\147\43");
        $JP->registerNamespace("\170\x65\156\143", "\150\x74\x74\160\x3a\57\x2f\167\x77\167\x2e\x77\63\56\157\x72\147\x2f\x32\60\60\61\x2f\x30\64\57\170\x6d\x6c\x65\156\143\x23");
        Wg:
        $WK = $JP->query($xI, $FF);
        $UR = array();
        $rJ = 0;
        qW:
        if (!($rJ < $WK->length)) {
            goto dt;
        }
        $UR[$rJ] = $WK->item($rJ);
        vN:
        $rJ++;
        goto qW;
        dt:
        return $UR;
    }
    public static function parseNameId(DOMElement $TW)
    {
        $UR = array("\126\x61\154\165\x65" => trim($TW->textContent));
        foreach (array("\x4e\x61\x6d\145\x51\x75\141\x6c\151\146\x69\145\x72", "\123\x50\116\x61\155\x65\121\165\141\x6c\151\x66\x69\x65\162", "\106\x6f\x72\x6d\141\164") as $yk) {
            if (!$TW->hasAttribute($yk)) {
                goto qU;
            }
            $UR[$yk] = $TW->getAttribute($yk);
            qU:
            Pu:
        }
        wT:
        return $UR;
    }
    public static function xsDateTimeToTimestamp($bz)
    {
        $th = array();
        $TK = "\57\x5e\x28\x5c\144\134\144\134\x64\x5c\x64\51\x2d\x28\134\144\x5c\x64\51\x2d\50\134\x64\x5c\144\51\x54\50\x5c\144\134\x64\x29\72\50\x5c\x64\x5c\144\x29\x3a\50\x5c\144\134\144\x29\x28\77\72\x5c\x2e\x5c\144\53\x29\77\x5a\44\x2f\x44";
        if (!(preg_match($TK, $bz, $th) == 0)) {
            goto XI;
        }
        echo sprintf("\156\x76\x61\154\x69\x64\x20\123\x41\x4d\114\62\x20\x74\151\x6d\x65\x73\x74\x61\x6d\x70\x20\x70\141\x73\163\145\x64\x20\x74\x6f\40\x78\x73\x44\x61\164\145\x54\151\x6d\x65\124\x6f\x54\x69\x6d\x65\x73\164\141\155\x70\x3a\40" . $bz);
        die;
        XI:
        $S1 = intval($th[1]);
        $S8 = intval($th[2]);
        $sI = intval($th[3]);
        $aI = intval($th[4]);
        $R1 = intval($th[5]);
        $oa = intval($th[6]);
        $aE = gmmktime($aI, $R1, $oa, $S8, $sI, $S1);
        return $aE;
    }
    public static function extractStrings(DOMElement $Ba, $qv, $Hp)
    {
        $UR = array();
        $FF = $Ba->firstChild;
        wo:
        if (!($FF !== NULL)) {
            goto Vj;
        }
        if (!($FF->namespaceURI !== $qv || $FF->localName !== $Hp)) {
            goto sc;
        }
        goto z2;
        sc:
        $UR[] = trim($FF->textContent);
        z2:
        $FF = $FF->nextSibling;
        goto wo;
        Vj:
        return $UR;
    }
    public static function validateElement(DOMElement $NQ)
    {
        $GQ = new XMLSecurityDSig();
        $GQ->idKeys[] = "\x49\104";
        $aX = self::xpQuery($NQ, "\56\x2f\x64\163\72\x53\151\147\156\141\164\x75\x72\x65");
        if (count($aX) === 0) {
            goto c5;
        }
        if (count($aX) > 1) {
            goto eX;
        }
        goto Za;
        c5:
        return FALSE;
        goto Za;
        eX:
        echo sprintf("\x58\115\x4c\123\x65\x63\x3a\40\155\157\162\x65\40\x74\150\141\156\x20\x6f\x6e\145\40\x73\x69\x67\x6e\141\164\x75\x72\145\40\145\x6c\x65\x6d\145\x6e\x74\x20\x69\x6e\x20\162\x6f\157\x74\x2e");
        die;
        Za:
        $aX = $aX[0];
        $GQ->sigNode = $aX;
        $GQ->canonicalizeSignedInfo();
        if ($GQ->validateReference()) {
            goto xa;
        }
        echo sprintf("\x58\115\114\163\145\x63\x3a\x20\x64\x69\x67\145\x73\x74\x20\166\x61\x6c\151\144\141\x74\151\157\x6e\x20\146\141\151\x6c\x65\x64");
        die;
        xa:
        $AY = FALSE;
        foreach ($GQ->getValidatedNodes() as $se) {
            if ($se->isSameNode($NQ)) {
                goto Kg;
            }
            if ($NQ->parentNode instanceof DOMDocument && $se->isSameNode($NQ->ownerDocument)) {
                goto y0;
            }
            goto xL;
            Kg:
            $AY = TRUE;
            goto qf;
            goto xL;
            y0:
            $AY = TRUE;
            goto qf;
            xL:
            am:
        }
        qf:
        if ($AY) {
            goto VZ;
        }
        echo sprintf("\130\x4d\x4c\x53\x65\x63\x3a\40\124\x68\145\x20\162\x6f\x6f\164\40\x65\154\x65\155\145\x6e\164\40\x69\x73\40\x6e\x6f\164\40\163\151\147\x6e\145\x64\x2e");
        die;
        VZ:
        $fp = array();
        foreach (self::xpQuery($aX, "\x2e\x2f\144\163\72\113\145\x79\111\x6e\146\x6f\x2f\x64\x73\72\130\x35\x30\x39\x44\x61\x74\x61\x2f\144\x73\72\x58\x35\60\71\x43\145\162\x74\151\146\151\x63\x61\x74\145") as $Iu) {
            $Em = trim($Iu->textContent);
            $Em = str_replace(array("\xd", "\xa", "\11", "\x20"), '', $Em);
            $fp[] = $Em;
            WX:
        }
        Uu:
        $UR = array("\x53\151\x67\x6e\141\x74\x75\162\x65" => $GQ, "\x43\x65\162\164\x69\x66\x69\143\141\x74\145\163" => $fp);
        return $UR;
    }
    public static function validateSignature(array $ss, XMLSecurityKey $AM)
    {
        watchdog("\155\x69\156\x69\x6f\162\141\156\x67\x65\x5f\163\x61\x6d\x6c", "\125\164\151\x6c\151\x74\151\145\163\40\x76\141\x6c\x69\x64\x61\x74\x65\123\151\x67\156\141\x74\x75\x72\x65", array());
        $GQ = $ss["\x53\151\147\156\141\164\165\x72\145"];
        $OL = self::xpQuery($GQ->sigNode, "\56\x2f\144\163\72\123\x69\147\x6e\145\x64\111\x6e\x66\x6f\57\x64\163\72\123\x69\147\156\x61\164\165\x72\145\115\x65\x74\x68\x6f\144");
        if (!empty($OL)) {
            goto XF;
        }
        watchdog("\155\x69\x6e\x69\x6f\x72\141\156\147\x65\137\163\141\155\154", "\x55\x74\151\154\x69\164\x69\x65\163\x20\x76\x61\x6c\x69\144\x61\164\145\x53\x69\147\x6e\141\164\165\162\x65\x20\x69\146\40\x65\155\x70\164\x79\50\x24\x73\x69\147\x4d\x65\x74\150\157\x64\x29", array());
        echo sprintf("\x4d\151\163\x73\x69\x6e\147\40\123\x69\147\x6e\141\x74\165\162\x65\115\145\x74\150\157\x64\40\x65\154\x65\155\145\156\164");
        die;
        XF:
        $OL = $OL[0];
        if ($OL->hasAttribute("\x41\x6c\147\x6f\162\x69\164\x68\x6d")) {
            goto Bq;
        }
        watchdog("\155\x69\x6e\x69\x6f\x72\141\156\x67\145\137\163\141\155\154", "\x55\164\151\x6c\151\x74\151\145\x73\x20\x76\141\154\x69\144\141\x74\x65\x53\x69\147\156\x61\164\165\162\145\x20\151\146\40\x21\44\163\151\x67\x4d\145\x74\x68\157\144\55\76\x68\141\x73\x41\164\x74\162\151\142\x75\164\x65\50\42\101\x6c\x67\x6f\x72\151\x74\150\x6d\x22\51", array());
        echo sprintf("\x4d\x69\163\x73\x69\x6e\147\x20\101\x6c\x67\157\x72\151\x74\x68\155\55\x61\164\x74\x72\151\142\165\x74\145\40\157\156\40\123\x69\x67\156\141\x74\165\x72\145\x4d\x65\164\150\157\144\x20\x65\x6c\x65\155\x65\156\x74\x2e");
        die;
        Bq:
        $in = $OL->getAttribute("\101\154\147\x6f\162\151\164\x68\155");
        if (!($AM->type === XMLSecurityKey::RSA_SHA1 && $in !== $AM->type)) {
            goto WB;
        }
        watchdog("\155\x69\156\x69\157\162\x61\156\x67\x65\137\x73\x61\155\154", "\x55\164\151\154\151\x74\151\x65\x73\x20\166\x61\154\x69\144\x61\164\145\x53\x69\x67\x6e\141\164\165\162\145\x20\x69\x66\x20\x24\153\x65\x79\55\76\x74\x79\160\145\40\75\x3d\75\40\x58\115\114\123\145\x63\165\x72\151\164\171\113\145\x79\72\72\x52\x53\x41\137\123\110\x41\x31\40\46\x26\x20\x24\141\154\147\157\40\x21\75\x3d\40\44\x6b\x65\171\x2d\x3e\164\171\x70\x65", array());
        $AM = self::castKey($AM, $in);
        WB:
        if ($GQ->verify($AM)) {
            goto y8;
        }
        watchdog("\x6d\x69\x6e\x69\x6f\x72\x61\156\x67\x65\137\163\x61\x6d\154", "\125\x74\x69\154\151\x74\151\x65\x73\x20\166\141\x6c\x69\144\x61\x74\145\x53\151\147\156\141\x74\165\162\x65\x20\x69\146\x20\x21\44\157\x62\x6a\130\115\x4c\123\x65\143\x44\x53\x69\147\x2d\x3e\166\x65\x72\151\146\x79\50\44\153\x65\x79\51", array());
        echo sprintf("\125\156\141\x62\x6c\x65\x20\164\x6f\40\x76\x61\x6c\151\144\141\164\x65\40\123\147\x6e\x61\164\x75\x72\145");
        die;
        y8:
    }
    public static function castKey(XMLSecurityKey $AM, $LO, $S2 = "\160\x75\x62\x6c\x69\143")
    {
        if (!($AM->type === $LO)) {
            goto Rq;
        }
        return $AM;
        Rq:
        $bq = openssl_pkey_get_details($AM->key);
        if (!($bq === FALSE)) {
            goto sQ;
        }
        echo sprintf("\x55\156\x61\142\x6c\x65\40\164\157\x20\147\x65\x74\x20\x6b\x65\x79\40\x64\x65\164\x61\151\154\163\x20\x66\162\x6f\x6d\40\x58\x4d\114\x53\145\x63\165\x72\x69\x74\171\113\145\x79\x2e");
        die;
        sQ:
        if (isset($bq["\x6b\x65\171"])) {
            goto V3;
        }
        echo sprintf("\x4d\x69\163\163\151\156\x67\40\x6b\x65\171\40\151\x6e\40\160\x75\x62\154\151\143\x20\x6b\x65\171\x20\x64\145\164\141\151\x6c\163\56");
        die;
        V3:
        $p7 = new XMLSecurityKey($LO, array("\x74\x79\x70\145" => $S2));
        $p7->loadKey($bq["\x6b\145\x79"]);
        return $p7;
    }
    public static function processResponse($xp, $Am, $NM, SAML2_Response $od, $y2)
    {
        watchdog("\x6d\151\x6e\151\x6f\162\141\156\x67\145\137\163\141\x6d\154", "\125\x74\151\154\151\164\151\x65\x73\40\160\x72\x6f\143\145\163\163\x52\145\x73\x70\x6f\156\163\145", array());
        $UF = $od->getDestination();
        if (!($UF !== NULL && $UF !== $xp)) {
            goto NB;
        }
        watchdog("\x6d\x69\x6e\x69\157\x72\x61\156\x67\145\x5f\163\x61\155\154", "\125\x74\x69\154\151\x74\x69\x65\163\40\x70\x72\157\143\x65\x73\x73\122\145\163\160\157\156\163\x65\x20\x69\146\40\x24\x6d\163\147\104\x65\163\x74\x69\156\141\x74\x69\157\156\40\41\75\x3d\40\116\125\x4c\114\x20\46\x26\40\x24\155\163\147\x44\x65\163\164\x69\156\x61\164\x69\157\156\x20\x21\75\75\x20\44\x63\165\162\162\145\156\164\125\122\114", array());
        echo sprintf("\x44\145\163\164\x69\156\141\x74\x69\x6f\x6e\40\x69\156\x20\x72\145\x73\160\x6f\x6e\x73\x65\40\144\x6f\145\163\156\x27\x74\x20\x6d\x61\x74\143\x68\40\164\x68\x65\40\143\x75\x72\x72\145\156\164\x20\125\x52\x4c\56\40\x44\145\x73\164\151\156\141\x74\x69\157\156\40\151\163\40\42" . $UF . "\42\54\40\x63\x75\x72\162\145\156\x74\x20\x55\x52\114\40\151\163\40\42" . $xp . "\x22\x2e");
        die;
        NB:
        $AI = self::checkSign($Am, $NM, $y2);
        return $AI;
    }
    public static function checkSign($Am, $NM, $y2)
    {
        watchdog("\155\x69\x6e\151\157\x72\141\x6e\x67\145\137\x73\x61\x6d\154", "\125\x74\151\154\151\164\x69\145\163\x20\143\x68\x65\143\x6b\x53\151\x67\156", array());
        $fp = $NM["\103\145\x72\164\x69\146\151\143\x61\x74\x65\x73"];
        watchdog("\155\x69\x6e\151\157\x72\x61\156\x67\x65\x5f\x73\141\x6d\x6c", "\x55\164\x69\x6c\x69\164\151\x65\x73\40\x63\x68\x65\x63\153\x53\x69\x67\156\40\x63\145\x72\164\x69\x66\151\143\x61\164\145\163\x28\44\x73\151\147\x6e\141\x74\165\162\145\104\x61\164\141\133\x22\103\x65\x72\x74\151\x66\151\143\141\x74\x65\163\x22\x5d\51\72\40\74\160\x72\145\x3e\100\143\x65\x72\164\151\146\x69\x63\x61\x74\x65\163\x3c\x2f\x70\162\145\76", array("\x40\143\x65\162\164\x69\146\x69\x63\x61\x74\x65\163" => print_r($fp, TRUE)), WATCHDOG_INFO);
        if (!(count($fp) === 0)) {
            goto O4;
        }
        watchdog("\155\x69\x6e\151\x6f\x72\x61\x6e\147\145\137\x73\141\155\x6c", "\125\164\151\x6c\151\x74\151\145\x73\40\x63\x68\x65\143\153\123\151\x67\x6e\x20\x69\x66\x20\143\x6f\x75\x6e\x74\50\x24\143\145\162\x74\151\146\151\x63\x61\164\145\x73\x29\x20\x3d\75\x3d\40\60", array());
        return FALSE;
        O4:
        $PZ = self::findCertificate($Am, $fp, $y2);
        $Q1 = NULL;
        $AM = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\x70\145" => "\x70\x75\142\x6c\151\143"));
        $AM->loadKey($PZ);
        try {
            self::validateSignature($NM, $AM);
            return TRUE;
        } catch (Exception $iJ) {
            $Q1 = $iJ;
        }
        if ($Q1 !== NULL) {
            goto sT;
        }
        watchdog("\155\151\156\x69\x6f\162\141\156\x67\145\x5f\163\141\x6d\x6c", "\x55\x74\151\x6c\x69\164\151\x65\163\40\x63\150\145\143\153\x53\151\x67\x6e\x20\145\154\x73\145\40\x6f\x66\40\x69\146\x20\x24\x6c\x61\163\x74\105\170\143\x65\x70\164\x69\157\x6e\x20\41\75\x3d\x20\116\x55\x4c\x4c", array());
        return FALSE;
        goto sA;
        sT:
        watchdog("\155\151\x6e\151\x6f\162\141\x6e\147\145\137\x73\141\x6d\x6c", "\x55\164\151\x6c\x69\x74\151\145\x73\x20\x63\150\145\143\x6b\123\x69\x67\x6e\40\x69\x66\40\44\154\x61\163\x74\x45\170\x63\145\160\x74\151\x6f\x6e\40\41\x3d\75\40\x4e\x55\x4c\114", array());
        throw $Q1;
        sA:
    }
    private static function findCertificate(array $bX, array $fp, $y2)
    {
        watchdog("\155\x69\156\x69\x6f\162\141\156\x67\x65\137\x73\141\155\x6c", "\125\x74\x69\154\151\164\151\x65\163\x20\x66\x69\156\144\x43\x65\x72\x74\x69\146\x69\143\x61\x74\145", array());
        $Fu = $fp[0];
        $Fu = chunk_split($Fu, 80);
        foreach ($fp as $fN) {
            $qH = strtolower(sha1(base64_decode($fN)));
            if (!in_array($qH, $bX, TRUE)) {
                goto Ny;
            }
            $c1 = "\55\55\55\x2d\55\x42\x45\x47\x49\116\40\103\x45\122\124\x49\106\x49\x43\101\x54\105\55\x2d\55\55\55\xa" . chunk_split($fN, 64) . "\55\x2d\x2d\x2d\x2d\x45\116\x44\40\103\105\122\x54\x49\x46\x49\x43\x41\x54\x45\x2d\x2d\55\x2d\55\12";
            return $c1;
            Ny:
            eY:
        }
        N7:
        if ($y2 == "\x74\145\163\164\126\141\154\x69\144\x61\x74\x65") {
            goto rB;
        }
        watchdog("\x6d\151\156\151\x6f\x72\x61\156\147\145\x5f\163\x61\x6d\154", "\x55\x74\151\154\151\164\x69\145\163\40\146\x69\156\x64\103\145\162\164\151\146\151\143\141\164\145\x20\x65\x6c\163\x65\x20\157\146\x20\x69\146\x20\44\x72\x65\154\x61\171\123\x74\141\164\x65\x20\75\75\x20\x22\164\145\x73\164\x56\x61\154\151\x64\x61\164\145\x22", array());
        echo "\x20\74\144\x69\x76\40\x73\x74\x79\x6c\145\75\42\143\157\x6c\x6f\162\x3a\x20\x23\x61\x39\64\x34\64\62\x3b\x66\157\156\x74\55\163\x69\x7a\x65\x3a\x31\x34\x70\x74\x3b\40\x6d\141\x72\x67\x69\x6e\55\x62\157\164\x74\157\155\72\x32\60\x70\x78\x3b\42\76\x3c\160\x3e\x3c\163\164\162\157\156\x67\x3e\x45\162\x72\157\162\72\x20\74\x2f\x73\x74\x72\x6f\x6e\147\x3e\127\x65\40\x63\x6f\x75\154\x64\40\x6e\x6f\164\40\x73\x69\x67\156\40\x79\157\165\40\151\x6e\x2e\x20\120\x6c\x65\x61\x73\x65\x20\x63\x6f\x6e\164\x61\x63\x74\40\x79\x6f\165\x72\x20\x41\144\155\x69\156\151\163\164\162\x61\164\x6f\x72\x2e\74\57\x70\x3e\74\x2f\x64\x69\166\x3e";
        die;
        goto qX;
        rB:
        watchdog("\155\x69\x6e\x69\x6f\162\x61\x6e\147\x65\137\x73\x61\x6d\154", "\x55\164\x69\x6c\x69\x74\151\x65\x73\40\x66\151\x6e\144\x43\145\x72\x74\151\x66\151\143\x61\x74\x65\x20\151\x66\x20\x24\x72\x65\154\141\x79\123\164\x61\164\x65\x20\x3d\75\40\42\164\x65\163\164\126\141\x6c\x69\144\141\x74\145\x22", array());
        echo "\x3c\144\151\166\40\x73\x74\x79\x6c\x65\75\x22\x66\157\x6e\164\x2d\x66\x61\155\x69\154\171\x3a\x43\x61\x6c\151\x62\x72\x69\73\x70\x61\144\144\x69\156\147\72\x30\x20\x33\45\x3b\x22\x3e";
        echo "\x3c\x64\151\x76\x20\163\164\171\x6c\x65\x3d\42\143\157\154\x6f\162\x3a\40\43\141\71\64\x34\64\x32\73\x62\x61\143\x6b\x67\x72\157\165\156\144\55\143\157\x6c\157\162\72\40\43\146\x32\144\x65\144\x65\73\x70\x61\x64\144\x69\156\x67\72\x20\x31\x35\x70\x78\x3b\x6d\141\x72\147\151\156\x2d\x62\x6f\164\164\x6f\155\72\x20\62\x30\160\170\x3b\164\145\170\164\x2d\x61\x6c\x69\x67\x6e\x3a\143\145\x6e\164\145\162\73\x62\157\162\x64\x65\x72\72\x31\x70\170\x20\x73\x6f\154\x69\144\x20\x23\x45\66\102\x33\x42\x32\73\146\x6f\x6e\x74\55\x73\x69\x7a\x65\72\61\70\160\x74\x3b\x22\76\x20\105\122\x52\x4f\x52\74\x2f\x64\x69\x76\x3e\12\40\40\40\40\40\x20\x20\40\x20\40\x20\x20\x3c\x64\151\x76\40\x73\x74\171\x6c\x65\x3d\x22\x63\x6f\154\157\x72\x3a\x20\43\x61\x39\x34\x34\64\62\x3b\146\157\156\x74\55\163\x69\172\x65\72\61\x34\x70\x74\x3b\x20\155\141\162\147\151\156\x2d\x62\157\164\x74\x6f\x6d\72\x32\60\x70\170\73\x22\76\74\160\x3e\74\x73\164\x72\x6f\156\147\76\x45\162\162\x6f\162\x3a\40\x3c\x2f\x73\x74\x72\157\x6e\147\76\x55\156\x61\142\154\x65\x20\x74\157\40\x66\x69\156\144\x20\x61\40\143\x65\x72\x74\x69\146\x69\x63\141\164\145\40\x6d\x61\164\x63\x68\151\x6e\147\40\164\150\145\40\x63\x6f\156\146\151\x67\165\162\145\144\x20\x66\151\156\x67\145\x72\160\162\x69\x6e\164\x2e\74\x2f\x70\x3e\12\40\40\40\40\40\40\x20\40\40\40\40\x20\74\160\76\74\163\x74\x72\157\x6e\x67\76\120\157\x73\163\x69\142\x6c\x65\40\103\141\x75\x73\x65\x3a\x20\x3c\57\x73\x74\x72\x6f\x6e\147\76\103\157\x6e\x74\x65\x6e\164\40\157\x66\40\47\130\56\x35\x30\71\x20\x43\145\x72\x74\x69\x66\x69\143\x61\164\145\47\40\x66\151\x65\x6c\144\40\x69\156\40\123\x65\162\x76\151\x63\x65\40\120\x72\x6f\x76\x69\144\x65\x72\40\123\x65\x74\x74\x69\x6e\147\163\40\151\x73\x20\x69\156\x63\157\x72\162\x65\x63\164\74\57\160\x3e\xa\x9\x9\x9\74\160\76\74\142\x3e\105\170\160\x65\143\x74\x65\x64\40\166\141\x6c\165\145\x3a\x20\74\57\x62\76" . $Fu . "\74\57\x70\x3e";
        echo str_repeat("\46\x6e\142\163\x70\73", 15);
        echo "\74\x2f\x64\151\x76\76\12\40\40\40\40\40\x20\x20\x20\x20\x20\40\40\40\40\40\40\x3c\x64\x69\x76\x20\x73\164\171\x6c\145\75\42\x6d\141\x72\147\x69\x6e\72\63\45\x3b\144\151\x73\160\154\141\171\x3a\x62\154\x6f\143\x6b\x3b\164\x65\x78\164\x2d\x61\x6c\x69\147\x6e\72\143\145\156\x74\145\162\73\x22\76\12\x20\x20\40\40\x20\x20\40\x20\40\x20\40\40\x20\40\x20\x20\74\146\x6f\162\x6d\40\141\143\164\151\157\156\75\42\151\156\x64\145\170\56\x70\x68\x70\42\x3e\12\x20\x20\40\x20\x20\40\40\x20\40\x20\x20\x20\x20\x20\40\x20\x3c\x64\151\x76\x20\x73\164\171\x6c\145\x3d\42\155\x61\162\147\x69\156\72\63\45\x3b\x64\151\163\x70\154\141\x79\72\x62\154\x6f\x63\x6b\x3b\x74\x65\x78\x74\x2d\141\154\x69\x67\156\72\x63\x65\x6e\x74\145\x72\x3b\42\76\74\151\156\x70\x75\164\x20\x73\164\171\x6c\x65\75\42\x70\141\144\x64\x69\x6e\x67\72\61\x25\x3b\167\x69\x64\164\x68\72\61\x30\60\160\170\73\142\141\143\x6b\147\162\x6f\165\x6e\144\72\40\43\60\x30\x39\x31\x43\104\40\x6e\157\156\145\x20\x72\x65\160\x65\141\164\40\163\x63\x72\x6f\x6c\x6c\40\60\x25\40\x30\x25\x3b\x63\x75\162\x73\x6f\x72\72\40\160\x6f\151\x6e\164\145\162\x3b\146\157\x6e\x74\55\x73\151\172\x65\72\61\x35\x70\170\73\x62\157\162\x64\145\x72\55\167\x69\x64\x74\150\x3a\x20\x31\x70\170\x3b\x62\x6f\x72\x64\x65\x72\x2d\163\164\171\154\x65\x3a\x20\x73\x6f\x6c\x69\144\73\x62\157\x72\144\x65\x72\55\162\x61\x64\151\165\163\72\40\63\x70\x78\x3b\x77\x68\151\164\x65\55\x73\x70\x61\143\x65\x3a\x20\x6e\157\167\162\141\x70\73\x62\x6f\170\55\x73\x69\x7a\151\x6e\x67\x3a\40\142\157\x72\144\x65\162\x2d\142\x6f\170\x3b\142\x6f\x72\144\145\x72\x2d\143\157\x6c\157\162\72\40\43\60\x30\67\x33\x41\x41\73\142\157\x78\55\163\x68\x61\144\x6f\167\72\40\x30\x70\x78\x20\x31\160\170\x20\x30\160\x78\40\x72\147\142\x61\50\x31\x32\x30\54\40\62\x30\60\54\40\62\63\60\x2c\40\x30\56\x36\51\x20\x69\x6e\163\145\164\x3b\x63\x6f\154\x6f\x72\x3a\x20\43\x46\x46\106\73\42\164\x79\160\x65\75\42\142\165\x74\164\x6f\x6e\x22\40\x76\141\x6c\x75\x65\75\42\104\157\x6e\x65\42\40\157\156\103\154\x69\x63\x6b\x3d\x22\x73\145\x6c\x66\56\143\154\157\163\x65\50\x29\x3b\x22\x3e\74\57\x64\151\x76\76";
        die;
        qX:
    }
    public static function validateIssuerAndAudience($mW, $Rh, $R0, $base_url, $y2)
    {
        watchdog("\155\x69\156\151\x6f\x72\x61\x6e\x67\145\137\x73\x61\x6d\x6c", "\x55\x74\x69\154\151\x74\x69\x65\163\40\x76\141\x6c\x69\x64\141\164\x65\111\163\x73\165\145\x72\x41\x6e\x64\101\x75\x64\151\145\x6e\x63\145", array());
        $vH = current($mW->getAssertions())->getIssuer();
        $ge = current(current($mW->getAssertions())->getValidAudiences());
        if (strcmp($R0, $vH) === 0) {
            goto ky;
        }
        watchdog("\x6d\151\x6e\151\157\162\x61\156\x67\x65\137\163\x61\155\x6c", "\x55\164\x69\x6c\x69\x74\151\145\x73\40\166\x61\x6c\x69\x64\141\164\x65\x49\163\x73\x75\145\162\101\x6e\144\x41\x75\144\151\145\156\x63\145\x20\x65\x6c\x73\145\40\157\146\40\x69\146\x20\x73\164\162\143\x6d\x70\50\x24\x69\163\163\x75\x65\x72\124\157\x56\141\154\151\x64\141\164\145\x41\147\x61\151\156\163\x74\54\x20\x24\x69\163\x73\x75\x65\x72\51\x3d\75\x3d\x30", array());
        if ($y2 == "\x74\x65\163\164\126\141\x6c\x69\x64\141\164\x65") {
            goto Gt;
        }
        watchdog("\x6d\151\156\151\157\162\141\156\x67\x65\137\163\141\155\154", "\x55\x74\151\x6c\151\164\151\x65\163\40\166\141\154\151\x64\141\164\x65\x49\x73\163\x75\145\162\101\156\x64\101\x75\144\x69\x65\x6e\x63\x65\x20\x65\x6c\x73\x65\40\x6f\146\x20\151\x66\40\162\145\154\x61\171\x53\x74\141\164\x65\40\75\75\x20\42\164\145\163\x74\x56\141\154\151\144\x61\164\x65\x22", array());
        echo "\40\74\144\151\x76\x20\163\x74\171\x6c\145\75\x22\143\x6f\154\x6f\x72\x3a\40\x23\x61\71\x34\x34\64\62\73\146\x6f\x6e\164\x2d\x73\x69\172\x65\72\x31\64\x70\x74\x3b\x20\x6d\141\x72\x67\x69\156\55\142\x6f\x74\164\x6f\x6d\72\x32\x30\x70\170\x3b\x22\x3e\74\160\x3e\x3c\163\164\x72\x6f\x6e\147\76\x45\162\162\x6f\162\x3a\40\x3c\x2f\163\x74\162\x6f\x6e\147\x3e\127\x65\40\x63\157\x75\154\x64\x20\x6e\157\x74\40\163\x69\147\x6e\40\171\157\x75\40\x69\x6e\56\x20\x50\154\x65\141\x73\145\40\x63\x6f\156\x74\141\x63\164\40\171\157\165\162\x20\x41\x64\155\151\156\151\163\x74\x72\141\x74\157\162\x2e\74\x2f\160\x3e\74\x2f\144\x69\x76\76\12\x20\40\x20\40\x20\40\x20\40\40\x20\40\x20\40\x20\x20\40\40\x20\x3c\144\x69\x76\40\x73\164\171\154\145\75\x22\155\141\162\x67\x69\156\x3a\63\45\x3b\x64\151\163\160\x6c\141\171\72\142\154\x6f\143\x6b\x3b\x74\145\x78\164\x2d\x61\x6c\151\x67\156\72\x63\145\x6e\164\145\162\x3b\x22\x3e";
        die;
        goto x4;
        Gt:
        watchdog("\x6d\x69\156\x69\157\162\141\156\147\x65\137\163\141\x6d\154", "\125\x74\151\154\x69\164\x69\145\163\x20\x76\141\x6c\x69\144\141\164\145\111\163\x73\165\x65\162\101\156\144\x41\x75\144\151\x65\x6e\x63\x65\40\162\145\154\141\171\123\164\141\x74\x65\40\x3d\x3d\x20\x22\164\145\163\x74\x56\x61\x6c\x69\144\x61\x74\x65\x22", array());
        ob_end_clean();
        echo "\x3c\144\x69\x76\x20\x73\x74\171\x6c\145\x3d\x22\x66\157\x6e\x74\55\x66\141\x6d\x69\x6c\171\72\103\x61\x6c\151\x62\162\x69\x3b\x70\141\144\x64\x69\156\x67\x3a\x30\x20\63\x25\x3b\x22\76";
        echo "\74\144\151\166\40\163\x74\x79\154\145\75\x22\x63\x6f\154\x6f\162\72\x20\43\141\71\x34\64\64\x32\73\x62\x61\143\153\147\162\157\165\156\144\55\143\157\x6c\157\x72\72\40\x23\x66\x32\x64\x65\144\x65\x3b\160\x61\144\x64\x69\x6e\147\x3a\x20\x31\65\160\x78\73\x6d\x61\x72\x67\x69\156\x2d\x62\x6f\164\x74\157\x6d\72\x20\x32\60\160\170\73\x74\145\170\x74\x2d\x61\x6c\x69\x67\x6e\72\x63\x65\x6e\164\x65\162\73\142\x6f\x72\x64\x65\162\x3a\61\x70\170\40\x73\157\154\x69\144\x20\43\x45\x36\x42\x33\x42\62\73\146\157\x6e\164\55\x73\151\172\145\x3a\x31\70\x70\164\x3b\x22\x3e\40\x45\x52\x52\x4f\122\x3c\57\x64\151\166\x3e\xa\40\40\40\x20\40\40\40\x20\40\40\40\x20\x20\40\40\x20\x3c\144\151\x76\40\x73\164\171\154\x65\75\42\x63\x6f\x6c\157\162\72\x20\43\141\71\x34\x34\x34\x32\73\146\x6f\x6e\x74\55\163\x69\x7a\x65\72\x31\64\x70\164\x3b\40\155\141\x72\147\151\156\55\142\x6f\x74\164\157\155\x3a\x32\60\x70\x78\73\x22\x3e\x3c\160\x3e\x3c\163\164\162\157\x6e\x67\x3e\x45\162\x72\x6f\162\72\x20\74\x2f\x73\164\x72\x6f\156\x67\76\x49\163\163\165\x65\x72\x20\x63\141\156\156\157\164\40\x62\145\40\166\x65\x72\x69\146\151\x65\144\x2e\74\57\160\76\xa\x20\x20\x20\x20\x20\40\40\40\40\x20\40\40\40\40\x20\x20\74\160\x3e\x50\x6c\145\x61\163\145\x20\143\x6f\156\x74\x61\143\x74\40\171\x6f\165\162\x20\x61\x64\x6d\x69\156\151\163\164\162\141\164\157\162\40\141\x6e\x64\40\162\145\x70\x6f\x72\164\x20\x74\x68\x65\x20\146\x6f\x6c\154\157\x77\151\x6e\147\40\145\162\162\157\162\72\74\x2f\x70\x3e\xa\40\40\x20\40\40\x20\x20\x20\x20\x20\x20\x20\40\40\x20\40\x3c\x70\76\74\x73\x74\162\157\156\x67\x3e\120\x6f\x73\x73\x69\x62\154\145\x20\103\x61\165\163\145\72\x20\x3c\x2f\163\x74\162\x6f\156\x67\x3e\x54\150\145\x20\x76\x61\154\165\x65\x20\151\156\x20\x27\111\144\x50\40\105\156\164\x69\164\171\x20\x49\104\40\157\x72\x20\111\x73\163\165\x65\162\x27\40\146\151\x65\154\144\x20\151\156\40\x53\x65\x72\166\151\x63\145\40\120\162\157\x76\x69\x64\145\x72\x20\x53\x65\x74\x74\151\156\147\x73\x20\x69\163\x20\151\156\x63\x6f\162\162\145\x63\x74\74\x2f\x70\x3e\12\40\40\x20\x20\40\x20\40\40\x20\40\x20\40\40\x20\40\40\x3c\160\x3e\74\163\164\162\x6f\156\x67\x3e\105\170\160\x65\143\x74\x65\x64\40\105\156\164\x69\164\171\x20\x49\104\x3a\40\x3c\x2f\x73\x74\162\157\156\147\76" . $vH . "\x3c\160\x3e\xa\40\40\40\x20\x20\x20\40\40\40\x20\x20\x20\x20\40\40\40\74\160\76\x3c\x73\x74\162\x6f\156\x67\76\105\156\164\x69\164\x79\x20\x49\x44\x20\x46\157\165\156\x64\72\40\x3c\x2f\x73\164\162\157\156\x67\x3e" . $R0 . "\74\57\x70\x3e\12\40\40\x20\40\x20\x20\40\40\40\x20\40\x20\x20\x20\x20\40\x3c\x2f\x64\151\x76\x3e\xa\x20\40\x20\40\x20\x20\40\x20\x20\40\40\40\x20\40\x20\x20\x3c\x64\x69\166\x20\163\x74\x79\x6c\145\x3d\x22\155\141\x72\147\151\x6e\x3a\x33\45\73\x64\151\x73\x70\154\x61\171\72\x62\154\157\x63\x6b\73\164\x65\170\164\x2d\x61\x6c\151\x67\x6e\72\x63\x65\x6e\x74\x65\162\73\42\x3e\12\40\x20\40\40\x20\40\x20\40\x20\40\40\40\40\40\40\40\x3c\144\x69\x76\x20\163\x74\x79\154\x65\75\42\x6d\x61\x72\147\x69\x6e\x3a\63\45\x3b\x64\x69\x73\160\154\x61\171\x3a\x62\x6c\x6f\x63\153\73\x74\x65\x78\164\x2d\141\154\x69\147\156\x3a\143\x65\x6e\164\145\x72\73\42\76\74\x69\x6e\x70\x75\164\x20\x73\164\x79\154\x65\x3d\42\x70\x61\144\144\x69\x6e\x67\x3a\x31\45\x3b\167\151\144\164\x68\x3a\61\x30\60\x70\170\73\142\141\143\153\x67\162\157\x75\x6e\144\x3a\x20\43\60\x30\71\x31\x43\x44\x20\156\x6f\x6e\145\x20\162\x65\160\145\x61\x74\x20\163\x63\x72\x6f\154\154\x20\x30\45\x20\x30\x25\73\x63\x75\x72\163\x6f\162\72\40\160\x6f\x69\156\164\x65\x72\73\146\x6f\x6e\x74\55\x73\x69\172\x65\x3a\61\x35\x70\170\73\142\157\162\144\145\162\x2d\x77\151\144\164\x68\x3a\x20\61\160\170\x3b\142\157\x72\144\145\x72\x2d\163\x74\x79\154\145\72\x20\163\x6f\154\x69\x64\73\x62\x6f\162\x64\x65\162\x2d\162\x61\144\151\165\x73\x3a\40\63\160\x78\x3b\167\x68\151\164\x65\x2d\163\x70\x61\143\145\x3a\x20\x6e\x6f\x77\x72\x61\160\73\x62\x6f\x78\x2d\x73\151\172\x69\x6e\147\x3a\x20\x62\157\162\x64\145\162\55\142\157\x78\x3b\142\157\162\144\x65\x72\55\x63\157\154\157\x72\72\40\43\x30\x30\x37\63\101\101\73\142\x6f\x78\x2d\x73\x68\x61\x64\157\167\x3a\x20\x30\x70\170\x20\x31\160\170\x20\60\160\x78\40\162\x67\x62\x61\x28\61\62\60\x2c\x20\x32\x30\x30\x2c\x20\62\63\x30\x2c\40\x30\x2e\x36\51\x20\151\156\163\x65\x74\x3b\x63\157\x6c\x6f\x72\x3a\40\x23\106\106\x46\73\42\x74\171\160\x65\x3d\42\x62\x75\x74\x74\157\x6e\x22\x20\x76\141\x6c\x75\x65\75\x22\x44\x6f\x6e\145\42\40\157\x6e\103\154\x69\x63\x6b\x3d\x22\163\145\x6c\x66\56\x63\154\157\163\x65\x28\x29\73\x22\76\74\57\144\x69\166\x3e";
        die;
        x4:
        goto HB;
        ky:
        watchdog("\155\x69\x6e\151\157\x72\141\156\x67\x65\137\x73\141\155\x6c", "\125\164\151\154\x69\164\x69\145\163\40\x76\x61\x6c\x69\x64\x61\x74\x65\x49\x73\163\x75\145\162\x41\156\x64\101\165\x64\151\x65\x6e\x63\x65\x20\x69\146\40\163\x74\162\143\155\160\50\x24\x69\x73\x73\165\x65\x72\x54\157\126\x61\x6c\151\144\141\164\145\101\x67\x61\151\156\x73\164\54\x20\x24\151\x73\x73\x75\145\x72\51\75\x3d\x3d\x30", array());
        if (strcmp($ge, $Rh) === 0) {
            goto Lx;
        }
        watchdog("\x6d\151\156\x69\x6f\162\141\x6e\147\145\x5f\163\x61\155\154", "\x55\164\x69\x6c\151\x74\x69\145\x73\40\166\141\154\151\x64\141\164\145\111\x73\x73\165\145\x72\x41\x6e\144\101\165\144\151\x65\156\x63\x65\x20\145\154\x73\145\40\x6f\146\40\x69\x66\x20\163\x74\x72\x63\155\x70\x28\x24\x61\x75\144\151\145\156\x63\145\x2c\40\x24\163\160\x45\156\164\x69\164\171\x49\144\51\40\x3d\75\75\x20\x30", array());
        watchdog("\x6d\x69\156\151\157\x72\141\x6e\x67\145\137\x73\141\x6d\x6c", "\x55\164\x69\x6c\151\x74\x69\x65\163\x20\x76\141\154\151\144\x61\164\x65\x49\x73\x73\165\145\162\101\x6e\144\x41\165\x64\x69\145\x6e\143\x65\x20\x61\165\x64\151\x65\x6e\143\145\72\40\74\160\162\x65\x3e\100\x61\165\x64\x69\x65\156\143\x65\74\x2f\x70\162\145\76", array("\100\141\x75\x64\x69\x65\156\x63\145" => print_r($ge, TRUE)), WATCHDOG_INFO);
        watchdog("\x6d\151\x6e\x69\157\x72\141\x6e\x67\145\137\x73\x61\155\154", "\x55\x74\151\x6c\151\164\151\x65\163\x20\166\x61\x6c\x69\144\x61\x74\145\x49\x73\x73\x75\x65\162\x41\x6e\x64\101\165\144\151\x65\x6e\143\145\40\163\160\105\156\164\x69\164\x79\111\x64\72\40\74\x70\x72\x65\x3e\x40\163\160\105\x6e\x74\151\x74\x79\111\144\x3c\57\x70\162\x65\76", array("\x40\163\160\x45\x6e\164\x69\x74\171\111\144" => print_r($Rh, TRUE)), WATCHDOG_INFO);
        echo sprintf("\x49\x6e\x76\x61\x6c\151\144\x20\x61\165\x64\151\x65\x6e\x63\145");
        die;
        goto On;
        Lx:
        watchdog("\x6d\151\x6e\151\x6f\x72\x61\x6e\x67\x65\x5f\x73\141\x6d\x6c", "\125\x74\x69\x6c\x69\164\151\145\163\40\x76\x61\154\x69\x64\x61\x74\145\111\163\163\x75\x65\x72\101\x6e\144\x41\165\x64\151\145\x6e\x63\x65\x20\x69\x66\x20\163\x74\x72\x63\x6d\160\50\44\x61\165\x64\151\x65\x6e\143\145\54\40\44\x73\x70\x45\x6e\x74\x69\x74\171\x49\144\x29\x20\x3d\75\x3d\40\60", array());
        return TRUE;
        On:
        HB:
    }
    private static function doDecryptElement(DOMElement $X2, XMLSecurityKey $Nb, array &$vt)
    {
        $MR = new XMLSecEnc();
        $MR->setNode($X2);
        $MR->type = $X2->getAttribute("\x54\171\160\x65");
        $u8 = $MR->locateKey($X2);
        if ($u8) {
            goto c_;
        }
        echo sprintf("\x43\157\x75\154\x64\x20\x6e\x6f\164\40\154\157\143\x61\x74\x65\40\x6b\145\x79\40\141\154\x67\157\162\x69\164\x68\x6d\x20\151\x6e\x20\x65\x6e\x63\162\x79\160\x74\145\144\x20\144\141\x74\141\56");
        die;
        c_:
        $w4 = $MR->locateKeyInfo($u8);
        if ($w4) {
            goto zr;
        }
        echo sprintf("\x43\x6f\x75\x6c\144\40\156\x6f\164\40\x6c\x6f\143\141\164\x65\40\74\144\x73\x69\x67\72\x4b\x65\171\111\156\x66\157\76\x20\146\x6f\x72\x20\164\150\145\40\x65\156\x63\162\x79\x70\x74\x65\x64\x20\x6b\145\x79\x2e");
        die;
        zr:
        $VF = $Nb->getAlgorithm();
        if ($w4->isEncrypted) {
            goto tS;
        }
        $hp = $u8->getAlgorithm();
        if (!($VF !== $hp)) {
            goto L4;
        }
        echo sprintf("\101\x6c\x67\x6f\162\151\x74\x68\x6d\x20\x6d\x69\163\155\x61\164\143\x68\x20\142\145\164\x77\x65\x65\156\40\151\x6e\x70\x75\164\40\153\x65\x79\40\141\x6e\144\x20\153\145\x79\40\151\x6e\x20\x6d\145\x73\x73\x61\x67\x65\x2e\40" . "\113\x65\171\x20\167\141\163\72\x20" . var_export($VF, TRUE) . "\x3b\40\155\x65\163\163\x61\x67\145\40\167\x61\163\x3a\40" . var_export($hp, TRUE));
        die;
        L4:
        $u8 = $Nb;
        goto ey;
        tS:
        $Yr = $w4->getAlgorithm();
        if (!in_array($Yr, $vt, TRUE)) {
            goto kc;
        }
        echo sprintf("\x41\154\147\157\162\x69\164\150\x6d\x20\x64\x69\163\141\142\154\x65\x64\x3a\40" . var_export($Yr, TRUE));
        die;
        kc:
        if (!($Yr === XMLSecurityKey::RSA_OAEP_MGF1P && $VF === XMLSecurityKey::RSA_1_5)) {
            goto xZ;
        }
        $VF = XMLSecurityKey::RSA_OAEP_MGF1P;
        xZ:
        if (!($VF !== $Yr)) {
            goto NV;
        }
        echo sprintf("\101\x6c\147\x6f\x72\151\164\150\155\40\x6d\151\163\x6d\x61\x74\143\150\x20\x62\x65\164\x77\145\145\x6e\40\x69\x6e\160\x75\x74\x20\x6b\x65\171\x20\x61\x6e\x64\x20\153\x65\x79\x20\165\x73\145\x64\x20\x74\157\x20\145\x6e\x63\x72\x79\x70\164\40" . "\x20\164\150\145\x20\163\x79\155\155\145\164\x72\x69\143\40\153\145\x79\x20\146\157\162\40\164\x68\x65\40\155\x65\x73\x73\x61\147\145\56\40\113\x65\x79\40\167\141\163\x3a\40" . var_export($VF, TRUE) . "\x3b\40\155\145\163\163\x61\147\145\40\x77\x61\163\72\x20" . var_export($Yr, TRUE));
        die;
        NV:
        $mb = $w4->encryptedCtx;
        $w4->key = $Nb->key;
        $BG = $u8->getSymmetricKeySize();
        if (!($BG === NULL)) {
            goto so;
        }
        echo sprintf("\x55\x6e\153\x6e\157\167\x6e\x20\x6b\x65\171\40\x73\151\x7a\145\x20\x66\x6f\x72\x20\x65\156\143\x72\x79\x70\164\x69\x6f\156\x20\141\x6c\x67\x6f\x72\151\x74\x68\155\x3a\40" . var_export($u8->type, TRUE));
        die;
        so:
        try {
            $AM = $mb->decryptKey($w4);
            if (!(strlen($AM) != $BG)) {
                goto i7;
            }
            echo sprintf("\125\156\x65\170\160\x65\x63\x74\145\x64\x20\x6b\145\x79\40\163\151\172\145\40\50" . strlen($AM) * 8 . "\142\151\x74\163\x29\x20\146\157\x72\40\145\156\x63\x72\x79\160\x74\151\x6f\156\40\141\154\147\x6f\x72\151\x74\150\155\x3a\x20" . var_export($u8->type, TRUE));
            die;
            i7:
        } catch (Exception $iJ) {
            $m3 = $mb->getCipherValue();
            $nW = openssl_pkey_get_details($w4->key);
            $nW = sha1(serialize($nW), TRUE);
            $AM = sha1($m3 . $nW, TRUE);
            if (strlen($AM) > $BG) {
                goto yW;
            }
            if (strlen($AM) < $BG) {
                goto Hv;
            }
            goto ZV;
            yW:
            $AM = substr($AM, 0, $BG);
            goto ZV;
            Hv:
            $AM = str_pad($AM, $BG);
            ZV:
        }
        $u8->loadkey($AM);
        ey:
        $LO = $u8->getAlgorithm();
        if (!in_array($LO, $vt, TRUE)) {
            goto XQ;
        }
        echo sprintf("\101\154\147\157\x72\151\164\x68\155\40\x64\x69\163\141\x62\x6c\x65\144\x3a\40" . var_export($LO, TRUE));
        die;
        XQ:
        $Ci = $MR->decryptNode($u8, FALSE);
        $TW = "\x3c\x72\x6f\x6f\164\40\x78\x6d\154\156\x73\x3a\163\141\x6d\x6c\x3d\42\165\x72\x6e\x3a\x6f\x61\x73\151\x73\72\156\141\x6d\x65\163\72\x74\143\72\x53\101\x4d\x4c\x3a\x32\56\60\72\141\163\163\x65\x72\164\151\157\x6e\x22\40" . "\170\x6d\x6c\x6e\163\x3a\x78\163\x69\x3d\x22\150\164\x74\x70\x3a\x2f\x2f\167\x77\167\x2e\x77\63\x2e\x6f\162\x67\x2f\62\x30\x30\61\57\130\115\114\123\143\150\x65\x6d\141\55\x69\156\163\x74\141\156\x63\x65\42\76" . $Ci . "\x3c\x2f\x72\x6f\157\164\x3e";
        $L9 = new DOMDocument();
        if (@$L9->loadXML($TW)) {
            goto I1;
        }
        throw new Exception("\x46\141\x69\154\x65\x64\40\x74\157\40\x70\x61\162\x73\145\x20\144\145\x63\x72\171\x70\x74\x65\x64\40\x58\115\114\x2e\40\x4d\x61\171\142\x65\x20\x74\150\145\x20\x77\x72\157\156\x67\x20\x73\150\x61\x72\145\x64\153\145\171\x20\x77\x61\x73\40\x75\163\145\144\x3f");
        I1:
        $Ng = $L9->firstChild->firstChild;
        if (!($Ng === NULL)) {
            goto bX;
        }
        echo sprintf("\115\151\163\x73\151\156\x67\40\145\156\x63\162\x79\160\x74\145\x64\x20\x65\154\x65\x6d\145\156\164\56");
        throw new Exception("\x4d\151\163\x73\151\156\147\x20\x65\x6e\x63\x72\171\x70\x74\145\x64\x20\145\x6c\x65\x6d\x65\x6e\164\x2e");
        bX:
        if ($Ng instanceof DOMElement) {
            goto rT;
        }
        echo sprintf("\104\145\143\x72\x79\160\x74\x65\x64\x20\x65\154\x65\155\x65\x6e\x74\40\167\x61\x73\40\x6e\157\x74\x20\141\x63\x74\165\141\154\x6c\x79\x20\x61\x20\x44\x4f\x4d\x45\x6c\x65\155\x65\x6e\x74\x2e");
        rT:
        return $Ng;
    }
    public static function decryptElement(DOMElement $X2, XMLSecurityKey $Nb, array $vt = array(), XMLSecurityKey $e3 = NULL)
    {
        try {
            return self::doDecryptElement($X2, $Nb, $vt);
        } catch (Exception $iJ) {
            try {
                return self::doDecryptElement($X2, $e3, $vt);
            } catch (Exception $KH) {
            }
            die;
        }
    }
    public static function metadata_builder($tf)
    {
        $TW = new DOMDocument();
        $aa = plugins_url() . "\57\155\151\156\x69\157\x72\x61\x6e\147\x65\x2d\x73\141\x6d\x6c\55\62\x30\55\x73\151\x6e\x67\154\145\55\163\x69\147\156\55\x6f\156\x2f\x73\160\x2d\155\145\x74\141\x64\x61\x74\141\x2e\x78\155\x6c";
        $TW->load($aa);
        $pR = new DOMXPath($TW);
        $Oy = $pR->query("\57\57\x6d\x64\72\x45\x6e\x74\151\x74\x79\x44\145\163\x63\162\151\160\x74\x6f\x72\133\100\x65\156\164\x69\x74\x79\111\x44\75\42\150\x74\164\x70\72\x2f\x2f\x7b\160\141\x74\150\55\164\157\55\x79\x6f\165\162\x2d\x73\151\164\145\175\x2f\x77\160\x2d\x63\x6f\156\x74\145\156\164\57\160\154\165\147\151\x6e\163\57\x6d\151\156\151\x6f\162\141\156\x67\145\55\163\x61\x6d\154\x2d\62\x30\x2d\163\151\156\147\154\145\x2d\x73\x69\x67\156\x2d\157\x6e\57\x22\x5d");
        if (!($Oy->length >= 1)) {
            goto FA;
        }
        $S_ = $Oy->item(0);
        $S_->setAttribute("\x65\156\x74\151\x74\x79\x49\x44", $tf . "\x2f\167\x70\55\143\157\x6e\164\145\x6e\164\x2f\x70\154\x75\147\151\x6e\x73\57\155\x69\156\x69\x6f\x72\x61\x6e\x67\x65\x2d\163\141\x6d\x6c\55\x32\60\x2d\163\151\156\147\x6c\x65\x2d\163\151\x67\x6e\x2d\x6f\x6e\x2f");
        FA:
        $Oy = $pR->query("\57\x2f\x6d\x64\x3a\x41\x73\163\x65\162\164\151\157\x6e\x43\157\156\163\165\x6d\145\162\x53\x65\162\x76\x69\x63\x65\133\x40\114\x6f\x63\x61\164\x69\x6f\x6e\75\42\x68\x74\x74\160\72\x2f\x2f\x7b\160\141\x74\x68\x2d\x74\157\x2d\x79\157\x75\x72\55\x73\151\164\x65\175\42\135");
        if (!($Oy->length >= 1)) {
            goto kM;
        }
        $S_ = $Oy->item(0);
        $S_->setAttribute("\114\x6f\143\141\164\x69\157\x6e", $tf . "\x2f");
        kM:
        $TW->save(plugins_url() . "\57\155\x69\156\151\157\x72\x61\x6e\147\145\55\163\x61\155\154\55\x32\x30\x2d\163\x69\156\147\154\145\x2d\x73\x69\x67\x6e\55\157\156\57\x73\x70\x2d\x6d\145\x74\x61\x64\x61\164\141\56\170\x6d\154");
    }
    public static function get_mapped_groups($RB, $fe)
    {
        $tM = array();
        if (empty($fe)) {
            goto Qw;
        }
        $Ov = array();
        $rJ = 1;
        Xv:
        if (!($rJ < 10)) {
            goto qv;
        }
        $cE = $RB->get("\147\x72\157\x75\x70" . $rJ . "\137\x6d\x61\160");
        $Ov[$rJ] = explode("\73", $cE);
        $rJ++;
        goto Xv;
        qv:
        Qw:
        foreach ($fe as $Jq) {
            if (empty($Jq)) {
                goto W2;
            }
            $rJ = 0;
            $vg = false;
            zN:
            if (!($rJ < 9 && !$vg)) {
                goto Tp;
            }
            if (!(!empty($Ov[$rJ]) && in_array($Jq, $Ov[$rJ]))) {
                goto Mw;
            }
            $tM[] = $RB->get("\147\x72\157\165\x70" . $rJ);
            $vg = true;
            Mw:
            $rJ++;
            goto zN;
            Tp:
            W2:
            cm:
        }
        nC:
        return array_unique($tM);
    }
    public static function getEncryptionAlgorithm($L8)
    {
        switch ($L8) {
            case "\x68\164\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\56\157\x72\147\57\x32\x30\60\x31\x2f\60\x34\57\170\155\154\x65\x6e\x63\x23\x74\x72\x69\160\x6c\x65\144\x65\163\55\143\142\x63":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto to;
            case "\x68\x74\x74\160\72\x2f\x2f\x77\167\167\56\167\x33\x2e\157\x72\147\57\62\60\60\61\x2f\x30\64\x2f\x78\155\154\x65\x6e\143\43\x61\145\163\x31\x32\x38\55\143\x62\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\x74\164\160\x3a\x2f\x2f\167\167\x77\x2e\167\x33\x2e\x6f\162\x67\x2f\62\x30\60\x31\x2f\60\64\57\x78\x6d\154\145\x6e\x63\x23\141\x65\x73\61\71\62\x2d\x63\x62\143":
                return XMLSecurityKey::AES192_CBC;
                goto to;
            case "\150\x74\x74\160\72\x2f\57\167\x77\x77\x2e\x77\x33\56\x6f\x72\x67\57\x32\x30\60\x31\x2f\60\64\57\170\x6d\x6c\x65\x6e\143\43\141\x65\163\x32\65\66\x2d\x63\142\143":
                return XMLSecurityKey::AES256_CBC;
                goto to;
            case "\x68\164\x74\x70\72\x2f\x2f\x77\167\167\x2e\x77\63\56\157\x72\x67\x2f\62\60\60\61\x2f\60\64\x2f\x78\155\154\145\x6e\143\x23\162\x73\x61\55\x31\x5f\x35":
                return XMLSecurityKey::RSA_1_5;
                goto to;
            case "\x68\x74\164\x70\x3a\x2f\x2f\x77\x77\x77\x2e\167\63\x2e\x6f\x72\147\57\62\x30\60\x31\x2f\60\x34\x2f\x78\155\154\x65\156\x63\x23\x72\163\x61\x2d\x6f\141\145\x70\55\x6d\x67\x66\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto to;
            case "\x68\164\x74\x70\72\57\x2f\x77\167\x77\56\x77\63\x2e\157\162\147\x2f\62\x30\60\x30\57\60\x39\57\x78\155\x6c\144\163\x69\147\x23\144\x73\x61\x2d\163\x68\141\x31":
                return XMLSecurityKey::DSA_SHA1;
                goto to;
            case "\150\164\164\x70\72\x2f\57\x77\x77\167\x2e\167\63\56\157\x72\x67\x2f\62\60\60\x30\57\x30\x39\57\x78\x6d\154\144\163\x69\x67\43\162\x73\141\55\163\150\x61\61":
                return XMLSecurityKey::RSA_SHA1;
                goto to;
            case "\150\164\164\160\x3a\57\x2f\167\167\167\x2e\167\x33\56\x6f\x72\147\x2f\62\x30\x30\x31\57\60\64\x2f\x78\155\x6c\144\163\151\x67\x2d\155\x6f\x72\145\x23\162\x73\x61\x2d\x73\150\x61\x32\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto to;
            case "\150\x74\x74\x70\72\57\57\167\x77\x77\x2e\167\x33\x2e\157\x72\147\57\x32\x30\60\61\57\x30\x34\57\x78\x6d\x6c\144\x73\151\147\55\155\x6f\162\x65\43\162\163\x61\x2d\163\x68\141\x33\x38\64":
                return XMLSecurityKey::RSA_SHA384;
                goto to;
            case "\x68\x74\164\160\72\x2f\x2f\x77\x77\x77\56\167\63\56\157\162\x67\57\x32\60\x30\61\x2f\60\x34\x2f\x78\155\154\144\x73\x69\147\55\155\x6f\x72\145\x23\x72\163\x61\55\x73\150\141\65\x31\62":
                return XMLSecurityKey::RSA_SHA512;
                goto to;
            default:
                echo sprintf("\111\156\166\x61\x6c\151\x64\40\x45\x6e\x63\x72\x79\x70\164\x69\x6f\x6e\40\115\145\164\x68\157\144\x3a\40" . $L8);
                die;
                goto to;
        }
        rn:
        to:
    }
    public static function sanitize_certificate($Yy)
    {
        $Yy = preg_replace("\x2f\133\15\12\135\53\x2f", '', $Yy);
        $Yy = str_replace("\x2d", '', $Yy);
        $Yy = str_replace("\102\x45\107\111\x4e\x20\103\x45\x52\124\111\x46\111\103\x41\124\x45", '', $Yy);
        $Yy = str_replace("\x45\x4e\x44\40\x43\x45\122\124\111\x46\x49\x43\x41\x54\x45", '', $Yy);
        $Yy = str_replace("\40", '', $Yy);
        $Yy = chunk_split($Yy, 64, "\xd\xa");
        $Yy = "\55\55\55\55\55\102\x45\x47\x49\116\40\103\105\122\x54\x49\106\x49\x43\x41\124\105\55\55\55\x2d\55\xd\xa" . $Yy . "\55\55\55\55\55\105\x4e\104\40\x43\105\x52\124\x49\x46\111\x43\x41\x54\x45\x2d\55\x2d\x2d\55";
        return $Yy;
    }
    public static function sanitize_private_key($MZ)
    {
        $MZ = preg_replace("\57\x5b\xd\xa\135\53\x2f", '', $MZ);
        $MZ = str_replace("\55", '', $MZ);
        $MZ = str_replace("\102\x45\107\x49\116\x20\x50\x52\111\x56\101\124\x45\x20\113\105\131", '', $MZ);
        $MZ = str_replace("\x45\116\x44\40\x50\x52\x49\x56\101\x54\105\x20\x4b\105\x59", '', $MZ);
        $MZ = str_replace("\x20", '', $MZ);
        $MZ = chunk_split($MZ, 64, "\xd\12");
        $MZ = "\x2d\55\x2d\x2d\55\x42\105\x47\x49\116\x20\x50\x52\111\x56\x41\124\x45\x20\113\105\x59\55\x2d\55\x2d\x2d\xd\12" . $MZ . "\x2d\x2d\55\x2d\x2d\x45\116\x44\40\120\x52\x49\x56\101\x54\x45\x20\x4b\105\131\x2d\x2d\55\55\55";
        return $MZ;
    }
    public static function desanitize_certificate($Yy)
    {
        $Yy = preg_replace("\x2f\133\xd\12\135\x2b\x2f", '', $Yy);
        $Yy = str_replace("\x2d\x2d\55\55\x2d\102\x45\107\111\x4e\x20\103\105\x52\124\111\106\x49\x43\x41\124\x45\55\55\x2d\x2d\55", '', $Yy);
        $Yy = str_replace("\x2d\x2d\55\55\x2d\105\116\x44\x20\x43\x45\x52\124\111\106\111\103\x41\124\x45\55\55\55\x2d\55", '', $Yy);
        $Yy = str_replace("\40", '', $Yy);
        return $Yy;
    }
    public static function Print_SAML_Request($Nh, $S2)
    {
        header("\x43\157\x6e\164\145\156\164\55\x54\171\x70\145\x3a\40\x74\145\170\164\x2f\150\x74\x6d\154");
        $rU = new DOMDocument();
        $rU->preserveWhiteSpace = false;
        $rU->formatOutput = true;
        $rU->loadXML($Nh);
        if ($S2 == "\144\x69\x73\160\154\141\171\x53\101\115\x4c\122\145\x71\x75\145\163\164") {
            goto lp;
        }
        $rb = "\x53\101\115\x4c\40\x52\x65\x73\160\157\156\x73\x65";
        goto ym;
        lp:
        $rb = "\123\101\115\x4c\40\x52\x65\x71\x75\145\163\164";
        ym:
        $CF = $rU->saveXML();
        $b7 = htmlentities($CF);
        $b7 = rtrim($b7);
        $TW = simplexml_load_string($CF);
        $aa = drupal_get_path("\155\x6f\x64\165\x6c\145", "\x6d\151\156\151\157\162\141\x6e\147\x65\137\163\141\x6d\154") . "\57\x63\x73\163\57\x73\x74\171\154\x65\x5f\x73\x65\164\x74\151\156\x67\x73\56\143\x73\163";
        echo "\x3c\x6c\x69\156\x6b\x20\x72\x65\154\75\47\163\164\171\x6c\145\x73\150\145\x65\x74\47\x20\x69\x64\75\47\x6d\x6f\x5f\163\x61\155\x6c\x5f\x61\144\x6d\x69\x6e\x5f\163\x65\x74\x74\151\x6e\x67\163\137\x73\x74\171\x6c\x65\55\143\x73\163\x27\40\40\x68\162\145\146\x3d\47" . $aa . "\47\x20\x74\171\160\x65\75\x27\164\145\x78\x74\57\143\163\163\x27\40\155\x65\144\x69\x61\x3d\x27\141\154\154\x27\40\57\x3e\xa\40\x20\40\x20\40\x20\40\40\x20\40\x20\40\xa\x9\x9\11\74\x64\x69\x76\x20\143\x6c\141\163\x73\75\42\155\x6f\55\x64\x69\163\x70\x6c\141\x79\x2d\x6c\x6f\x67\163\42\x20\76\x3c\x70\40\x74\x79\160\x65\x3d\42\x74\145\x78\x74\42\40\x20\x20\151\144\75\42\123\101\x4d\114\x5f\x74\171\x70\x65\x22\x3e" . $rb . "\74\x2f\160\76\74\57\x64\151\x76\x3e\xa\11\x9\11\xa\x9\11\11\74\x64\151\166\x20\164\171\160\x65\x3d\x22\164\145\170\164\x22\x20\151\144\75\x22\123\101\115\114\137\144\x69\x73\160\x6c\141\x79\x22\x20\143\x6c\x61\x73\163\75\x22\155\x6f\55\144\x69\x73\160\154\x61\x79\55\x62\x6c\x6f\x63\153\42\x3e\x3c\x70\x72\145\x20\x63\154\x61\x73\163\x3d\x27\x62\x72\165\163\150\72\40\x78\x6d\x6c\x3b\x27\76" . $b7 . "\x3c\x2f\160\x72\145\x3e\74\57\144\151\166\x3e\xa\11\x9\11\x3c\142\162\x3e\12\11\11\x9\74\144\151\166\40\163\164\x79\x6c\145\x3d\42\155\x61\x72\x67\x69\x6e\72\63\45\73\144\151\163\x70\x6c\x61\x79\x3a\142\154\x6f\x63\153\x3b\x74\145\x78\164\x2d\141\154\151\x67\x6e\x3a\143\145\x6e\x74\x65\x72\73\x22\x3e\12\40\40\40\x20\x20\40\40\x20\40\x20\x20\40\12\11\x9\x9\74\x64\151\x76\40\x73\x74\x79\154\145\75\x22\155\141\x72\x67\x69\x6e\x3a\x33\x25\x3b\144\151\163\160\154\141\x79\72\x62\x6c\157\x63\153\73\x74\145\170\x74\55\x61\x6c\151\147\156\72\143\145\156\164\145\162\x3b\42\x20\76\xa\11\12\40\x20\40\40\40\x20\40\x20\40\40\40\40\74\57\x64\x69\166\76\xa\x9\x9\11\x3c\142\x75\x74\164\x6f\x6e\x20\151\x64\x3d\x22\143\x6f\x70\x79\x22\x20\x6f\x6e\x63\154\151\143\x6b\75\42\x63\x6f\x70\171\104\151\166\x54\x6f\x43\154\151\x70\x62\157\141\162\x64\x28\x29\42\40\40\x73\x74\171\x6c\x65\x3d\x22\x70\x61\144\x64\x69\x6e\147\x3a\61\45\x3b\x77\x69\144\x74\x68\72\61\x30\60\x70\x78\x3b\142\141\143\153\x67\162\x6f\x75\x6e\144\x3a\x20\x23\60\60\x39\61\103\x44\40\156\157\x6e\x65\40\162\145\x70\145\141\x74\40\163\x63\x72\157\x6c\x6c\40\x30\45\40\60\x25\73\x63\165\x72\x73\157\162\72\x20\160\x6f\x69\156\164\x65\162\73\x66\x6f\x6e\x74\55\x73\x69\x7a\145\72\x31\65\x70\170\x3b\x62\x6f\162\144\145\162\x2d\x77\151\x64\164\x68\72\x20\x31\x70\170\73\142\157\162\144\145\162\x2d\163\x74\x79\154\145\72\40\163\x6f\x6c\x69\x64\73\x62\x6f\162\x64\145\162\x2d\162\x61\x64\151\x75\163\72\x20\63\x70\x78\x3b\x77\150\x69\x74\x65\55\163\160\x61\x63\x65\72\x20\x6e\x6f\167\x72\x61\160\73\142\157\x78\x2d\x73\x69\x7a\151\x6e\147\x3a\40\142\157\162\x64\x65\x72\55\142\157\170\73\142\157\162\144\x65\x72\55\143\157\x6c\x6f\x72\72\x20\x23\x30\60\67\x33\x41\101\x3b\x62\x6f\170\x2d\163\150\141\144\157\167\x3a\x20\60\160\170\40\x31\160\170\40\x30\160\x78\x20\162\147\x62\x61\50\x31\62\x30\54\x20\62\60\60\54\40\x32\63\x30\54\x20\60\x2e\66\51\x20\x69\156\x73\x65\x74\x3b\x63\x6f\x6c\157\162\x3a\40\x23\106\106\x46\x3b\42\x20\76\103\157\x70\171\74\57\x62\165\x74\164\157\156\x3e\12\x9\11\11\x26\x6e\142\x73\160\73\xa\x20\40\x20\40\x20\40\x20\40\40\x20\40\x20\40\40\40\74\151\x6e\x70\x75\164\40\x69\144\x3d\x22\x64\x77\x6e\x2d\x62\x74\x6e\x22\x20\163\164\171\154\145\75\42\x70\x61\144\x64\151\x6e\147\72\61\x25\73\167\151\144\164\x68\72\x31\60\x30\160\x78\73\x62\141\x63\153\147\x72\x6f\x75\156\144\x3a\40\x23\x30\x30\71\61\103\x44\40\x6e\x6f\156\145\x20\162\145\x70\145\x61\164\x20\163\143\162\x6f\154\x6c\40\60\45\x20\x30\45\x3b\x63\x75\x72\x73\x6f\x72\x3a\x20\x70\157\x69\156\x74\x65\x72\73\146\157\156\164\55\x73\151\x7a\x65\72\61\65\160\170\x3b\142\157\x72\x64\x65\162\x2d\x77\x69\x64\x74\150\x3a\40\x31\x70\x78\73\x62\157\x72\144\x65\x72\x2d\163\164\x79\154\x65\72\x20\163\157\154\x69\144\73\142\157\162\x64\x65\x72\x2d\162\x61\144\x69\165\163\72\40\63\x70\x78\x3b\167\150\151\164\x65\x2d\x73\160\x61\143\x65\x3a\40\156\x6f\x77\x72\141\x70\73\x62\x6f\170\55\x73\x69\x7a\x69\156\x67\x3a\40\x62\157\162\144\x65\x72\x2d\x62\157\x78\73\x62\157\162\x64\x65\162\55\143\157\154\x6f\162\x3a\x20\x23\60\x30\67\63\x41\x41\73\142\157\x78\x2d\x73\x68\141\x64\157\167\72\40\60\160\x78\40\61\x70\170\40\x30\x70\170\x20\162\x67\x62\x61\x28\61\62\60\54\x20\62\x30\x30\54\40\x32\63\x30\54\40\60\x2e\66\x29\x20\151\x6e\163\145\x74\73\143\x6f\154\157\162\72\x20\x23\106\x46\x46\73\x22\164\171\160\145\x3d\42\142\x75\164\164\157\x6e\x22\40\x76\141\154\x75\x65\75\x22\x44\157\x77\x6e\x6c\157\141\x64\42\40\12\x20\40\40\40\40\40\x20\40\40\x20\40\40\x20\x20\x20\42\x3e\xa\11\x9\x9\74\57\x64\151\166\x3e\12\11\x9\11\x3c\x2f\x64\x69\x76\x3e\12\x9\x9\x9\xa\11\x9";
        ob_end_flush();
        ?>

        <script>

            function copyDivToClipboard() {
                var aux = document.createElement("input");
                aux.setAttribute("value", document.getElementById("SAML_display").textContent);
                document.body.appendChild(aux);
                aux.select();
                document.execCommand("copy");
                document.body.removeChild(aux);
                document.getElementById('copy').textContent = "Copied";
                document.getElementById('copy').style.background = "grey";
                window.getSelection().selectAllChildren(document.getElementById("SAML_display"));
            }

            function download(filename, text) {
                var element = document.createElement('a');
                element.setAttribute('href', 'data:Application/octet-stream;charset=utf-8,' + encodeURIComponent(text));
                element.setAttribute('download', filename);

                element.style.display = 'none';
                document.body.appendChild(element);

                element.click();

                document.body.removeChild(element);
            }

            document.getElementById("dwn-btn").addEventListener("click", function () {

                var filename = document.getElementById("SAML_type").textContent + ".xml";
                var node = document.getElementById("SAML_display");
                htmlContent = node.innerHTML;
                text = node.textContent;
                console.log(text);
                download(filename, text);
            }, false);

        </script>
        <?php 
        die;
    }
}
?>
