<?php


class Utilities
{
    public static function generateCertificate($Ev, $dc, $o0, $mF)
    {
        $N3 = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\x72\x65\163\157\165\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\x6f\x70\x65\x6e\163\x73\x6c\x2e\x63\x6e\146";
        $YB = array("\143\x6f\x6e\x66\x69\147" => $N3, "\x64\x69\x67\145\163\x74\137\x61\154\x67" => "{$dc}", "\160\162\x69\x76\x61\164\x65\137\x6b\145\x79\x5f\142\x69\x74\163" => $o0, "\x70\162\151\166\x61\x74\x65\137\x6b\x65\171\x5f\x74\x79\160\x65" => OPENSSL_KEYTYPE_RSA);
        $mc = openssl_pkey_new($YB);
        $Hj = openssl_csr_new($Ev, $mc, $YB);
        if (!($Hj === FALSE)) {
            goto Sh;
        }
        drupal_set_message(t("\x46\141\x63\151\x6e\147\x20\151\x73\x73\165\145\163\40\x77\x68\151\x6c\145\40\147\145\x6e\x65\162\141\164\151\x6e\x67\40\143\x75\x73\x74\x6f\155\40\143\145\x72\x74\151\146\x69\x63\x61\x74\145\56\40\x50\x6c\145\141\x73\145\40\x63\150\x65\143\x6b\40\151\146\40\x63\157\x75\156\x74\x72\171\40\143\157\x64\x65\40\151\163\x20\143\x6f\x72\x72\x65\143\164\x2e"), "\x65\x72\162\157\162");
        return FALSE;
        Sh:
        $Bg = openssl_csr_sign($Hj, null, $mc, $mF, $YB, time());
        openssl_x509_export($Bg, $Fb);
        openssl_pkey_export($mc, $ZD, null, $YB);
        openssl_csr_export($Hj, $BO);
        Rl:
        if (!(($pE = openssl_error_string()) !== false)) {
            goto OE;
        }
        error_log($pE);
        goto Rl;
        OE:
        $Un = array("\160\165\142\154\151\x63\x5f\x6b\x65\x79" => $Fb, "\160\162\151\x76\x61\164\x65\x5f\x6b\145\x79" => $ZD);
        variable_set("\155\151\x6e\151\157\162\141\156\x67\x65\137\x73\x61\x6d\x6c\137\160\165\x62\x6c\x5f\143\x65\162\x74\151\x66\x69\x63\141\x74\145", $Un["\x70\x75\142\x6c\x69\143\x5f\153\x65\x79"]);
        variable_set("\155\151\156\x69\x6f\x72\x61\x6e\147\145\137\163\x61\155\x6c\x5f\x70\162\151\166\x61\164\x65\137\x63\x65\x72\x74\151\x66\x69\143\141\x74\145", $Un["\x70\162\151\x76\x61\x74\145\137\x6b\145\171"]);
        file_put_contents(self::getCertificatePath(), $Un["\160\165\142\x6c\151\143\x5f\153\x65\171"]);
        file_put_contents(self::getKeyPath(), $Un["\160\x72\151\166\x61\x74\145\x5f\153\x65\x79"]);
        return TRUE;
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $DG = $base_url . "\x2f\141\144\155\151\x6e\57\143\x6f\156\x66\151\147\x2f\160\x65\157\x70\154\145\57\155\x69\156\x69\157\162\141\x6e\147\145\x5f\x73\x61\x6d\x6c\x2f\x63\x75\x73\x74\x6f\x6d\x65\162\137\x73\x65\164\x75\x70\57";
        if (variable_get("\x6d\x69\x6e\x69\x6f\x72\141\156\x67\x65\x5f\x73\x61\155\x6c\x5f\x63\x75\163\x74\x6f\155\145\x72\x5f\141\144\x6d\151\156\137\x65\x6d\141\151\154", NULL) == NULL || variable_get("\x6d\151\156\151\x6f\x72\141\x6e\147\145\137\x73\141\x6d\154\x5f\143\x75\163\x74\157\155\145\162\x5f\151\x64", NULL) == NULL || variable_get("\155\151\x6e\x69\157\x72\x61\x6e\x67\145\x5f\x73\x61\x6d\x6c\x5f\143\165\163\x74\157\155\145\162\x5f\x61\144\155\151\156\x5f\x74\x6f\153\x65\156", NULL) == NULL || variable_get("\155\151\x6e\151\x6f\162\x61\156\x67\145\137\163\141\x6d\154\137\143\165\x73\x74\157\x6d\145\x72\x5f\x61\x70\x69\x5f\x6b\145\x79", NULL) == NULL) {
            goto Ha;
        }
        if (!(variable_get("\x6d\x69\x6e\x69\x6f\162\141\x6e\x67\145\x5f\x73\141\x6d\x6c\x5f\x6c\x69\x63\x65\156\x73\x65\x5f\x6b\x65\171") == NULL && variable_get("\x6d\151\x6e\151\157\x72\x61\x6e\147\x65\137\163\141\155\154\x5f\x63\165\x73\x74\x6f\x6d\145\x72\137\x61\144\155\x69\x6e\137\x65\x6d\141\151\x6c") != NULL)) {
            goto oh;
        }
        $form["\x6d\141\162\x6b\x75\160\137\155\163\x67"] = array("\x23\x6d\141\162\x6b\x75\160" => "\x3c\144\x69\166\40\143\x6c\141\163\163\75\x22\155\x6f\x5f\163\x61\155\154\137\162\145\x67\151\163\164\x65\162\x5f\155\145\x73\163\141\147\145\42\x3e\74\160\76\131\x6f\x75\40\156\x65\x65\x64\x20\164\157\40\x3c\x61\x20\x68\162\145\146\x3d\42" . $DG . "\42\x20\40\76\x76\145\x72\151\x66\171\x20\x3c\x2f\141\x3e\x20\171\x6f\x75\162\x20\x6c\x69\x63\x65\156\163\145\x20\153\x65\171\x20\x62\145\146\157\162\145\x20\x75\163\x69\x6e\x67\x20\164\150\x69\163\40\x6d\x6f\144\165\x6c\x65\56\74\57\141\x3e\x3c\x2f\160\76\74\x2f\x64\x69\166\76");
        return TRUE;
        oh:
        goto Qq;
        Ha:
        $form["\155\x61\x72\x6b\165\160\137\x72\x65\x67\137\155\x73\147"] = array("\43\155\141\162\153\x75\x70" => "\x3c\144\151\166\x20\143\x6c\141\163\x73\75\x22\155\157\x5f\163\141\x6d\x6c\x5f\x72\x65\147\151\x73\x74\145\162\x5f\x6d\145\x73\163\141\x67\x65\x22\x3e\x59\157\165\40\x6e\x65\145\144\40\164\157\x20\74\x61\x20\x68\162\x65\146\75\x22" . $DG . "\42\x20\x3e\114\157\147\x69\x6e\x3c\57\141\76\40\167\151\x74\x68\x20\x6d\151\156\x69\x4f\162\141\x6e\147\x65\40\x61\x63\143\157\165\156\164\x20\x62\x65\x66\157\x72\145\40\165\x73\x69\156\x67\x20\164\x68\151\x73\x20\155\157\x64\165\154\x65\x2e\74\57\143\145\156\164\x65\162\x3e\x3c\x2f\144\x69\x76\76");
        return TRUE;
        Qq:
        if (!(variable_get("\x6d\151\x6e\x69\157\162\141\x6e\x67\145\x5f\x73\141\x6d\154\137\x6c\151\143\x65\156\163\145\137\x6b\x65\171") != NULL && variable_get("\x6d\x69\156\151\157\162\x61\156\147\145\137\x73\x61\x6d\x6c\137\143\165\x73\164\157\x6d\x65\162\x5f\x61\144\x6d\151\x6e\137\x65\x6d\141\151\154") != NULL)) {
            goto MM;
        }
        return FALSE;
        MM:
    }
    public static function createUpdateUrl($BJ, $hC, $Xr, $TP, $DN, $JR)
    {
        $e0 = "\61\x31\61\61\x31\x31\61\61\x31\61\61\61\x31\x31\61\x31" . $BJ;
        $Rq = $JR . "\57\x6d\x6f\141\x73\57\141\x70\x69\57\x70\x6c\165\x67\x69\x6e\x2f\144\162\x75\160\x61\154\x4a\157\157\155\154\141\x55\160\x64\141\164\145\57" . $DN . "\x2f" . $hC . "\x2f" . $Xr . "\57";
        $vP = openssl_cipher_iv_length($AS = "\101\105\x53\x2d\61\62\x38\x2d\103\102\x43");
        $zi = openssl_random_pseudo_bytes($vP);
        $wp = openssl_encrypt($e0, $AS, $TP, $tl = OPENSSL_RAW_DATA, $zi);
        return $Rq . str_replace(array("\x2b", "\x2f", "\75"), array("\55", "\137", ''), base64_encode($wp));
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $form["\x6d\141\x72\x6b\x75\160\x5f\x69\x64\x70\137\141\x74\164\x72\137\x68\145\141\144\x65\162\x5f\x74\157\160\137\163\165\160\160\157\x72\164"] = array("\x23\x6d\x61\x72\153\x75\160" => "\x3c\x64\x69\x76\40\143\154\x61\163\x73\75\x22\x6d\157\137\163\x61\155\154\137\x74\141\x62\154\x65\x5f\x6c\x61\x79\x6f\165\x74\x5f\163\x75\x70\160\157\162\164\x5f\61\42\76");
        $form["\x6d\x61\x72\153\165\x70\137\x73\165\160\160\157\162\164\137\x31"] = array("\43\155\141\x72\x6b\165\x70" => "\x3c\x68\63\76\x46\x65\x61\x74\x75\x72\x65\x20\x52\x65\x71\x75\x65\163\164\57\x43\x6f\x6e\164\141\x63\x74\40\x55\163\72\x3c\57\150\63\x3e\74\144\x69\166\76\116\x65\x65\144\x20\141\x6e\x79\x20\150\145\x6c\x70\x3f\40\127\145\x20\x63\x61\156\x20\x68\x65\154\160\x20\171\157\x75\40\x77\x69\164\x68\40\143\157\x6e\x66\151\x67\165\162\151\x6e\x67\x20\171\157\x75\162\x20\x53\x65\x72\166\151\143\145\40\x50\x72\157\166\151\144\x65\162\56\x20\112\165\163\164\x20\x73\x65\x6e\144\40\x75\x73\x20\x61\40\161\165\145\162\171\x20\x61\x6e\144\x20\167\145\40\x77\x69\154\x6c\x20\147\145\x74\x20\x62\x61\x63\153\x20\164\x6f\40\x79\x6f\165\40\163\157\157\156\x2e\x3c\142\x72\40\x2f\x3e\x3c\57\x64\x69\166\76\x3c\142\x72\x3e");
        $form["\x6d\x69\x6e\x69\157\x72\141\x6e\147\x65\137\163\x61\155\x6c\137\x65\x6d\x61\151\x6c\x5f\x61\x64\x64\x72\145\163\x73"] = array("\x23\164\171\160\145" => "\x74\145\170\164\146\151\145\154\x64", "\43\x61\x74\x74\162\x69\142\x75\x74\x65\163" => array("\163\x74\x79\154\145" => "\167\151\144\164\150\72\x31\x30\60\x25", "\x70\x6c\141\x63\x65\x68\x6f\154\144\x65\x72" => "\105\x6e\x74\x65\x72\40\x79\157\165\162\x20\x45\x6d\x61\x69\154"), "\43\x64\x65\x66\x61\165\x6c\164\x5f\x76\141\154\x75\145" => variable_get("\x6d\x69\156\x69\157\x72\141\156\x67\145\137\163\x61\x6d\x6c\137\x63\x75\x73\164\x6f\x6d\x65\x72\x5f\x61\144\155\151\x6e\x5f\x65\x6d\x61\151\x6c", ''));
        $form["\155\x69\156\151\x6f\x72\141\156\x67\145\137\163\x61\155\154\x5f\160\150\157\x6e\145\137\156\165\155\x62\x65\162"] = array("\x23\x74\171\160\x65" => "\x74\145\170\164\x66\x69\x65\x6c\144", "\43\141\x74\x74\162\151\x62\x75\164\145\163" => array("\x73\x74\171\x6c\x65" => "\x77\x69\144\x74\x68\x3a\x31\x30\60\x25", "\160\x6c\141\143\145\150\157\x6c\x64\x65\162" => "\x45\x6e\164\145\x72\x20\171\x6f\x75\x72\x20\160\150\157\156\145\x20\156\165\x6d\142\145\162\40\x77\151\164\x68\x20\x63\x6f\165\x6e\164\x72\171\40\x63\157\144\x65\40\145\147\x2e\x28\53\x31\51"), "\43\x64\145\146\141\165\x6c\164\137\x76\141\154\x75\145" => variable_get("\x6d\x69\x6e\x69\x6f\162\141\156\x67\145\137\163\x61\155\x6c\137\143\165\163\x74\157\155\145\x72\137\x61\144\x6d\151\x6e\x5f\160\150\x6f\156\145", ''));
        $form["\x6d\151\156\x69\157\x72\141\x6e\147\145\137\x73\141\x6d\154\137\163\165\160\160\157\162\164\137\161\165\x65\x72\x79"] = array("\x23\164\x79\160\145" => "\164\145\x78\164\x61\x72\145\x61", "\43\143\157\154\x73" => "\x31\x30", "\43\x72\157\167\163" => "\x35", "\x23\x61\x74\164\162\151\142\x75\x74\145\x73" => array("\163\164\x79\154\145" => "\167\x69\x64\x74\x68\72\x31\60\x30\x25\73\142\157\162\x64\145\162\x2d\x72\x61\x64\151\x75\x73\72\62\160\x78\73\x62\141\x63\x6b\147\162\x6f\165\x6e\x64\72\x23\x66\x63\146\x63\x66\141\73\142\157\x78\55\163\x68\141\x64\157\167\x3a\40\151\156\x73\145\164\x20\60\x20\61\x70\x78\x20\x32\x70\x78\x20\162\147\x62\141\50\x30\x2c\40\x30\54\x20\60\54\x20\60\56\61\62\65\x29\x3b\146\157\156\x74\55\x66\x61\155\x69\x6c\171\72\x20\x48\145\x6c\x76\x65\164\x69\x63\141\x20\x4e\145\x75\145\x2c\40\x48\145\x6c\166\145\x74\151\143\141\54\x20\101\x72\x69\x61\x6c\x2c\x20\x73\141\x6e\x73\x2d\163\x65\162\151\x66\x3b", "\x70\x6c\x61\143\145\x68\x6f\x6c\144\x65\x72" => "\x57\x72\x69\x74\x65\40\x79\x6f\165\x72\x20\x71\165\145\x72\x79\x20\x68\x65\x72\145\56"), "\x23\162\145\x73\x69\x7a\141\x62\x6c\x65" => False);
        $form["\x6d\151\156\151\x6f\162\x61\156\x67\145\137\x73\x61\x6d\x6c\x5f\x73\165\x70\160\x6f\x72\164\137\163\165\x62\x6d\x69\x74\x5f\x63\154\151\143\x6b"] = array("\x23\x74\x79\160\145" => "\x73\x75\142\155\x69\x74", "\43\166\x61\154\165\145" => t("\x53\165\x62\x6d\151\x74\x20\121\x75\145\162\171"), "\x23\163\165\x62\x6d\151\x74" => array("\125\x74\x69\x6c\151\x74\151\145\163\x3a\x3a\x73\x65\156\x64\137\x73\x75\160\160\x6f\x72\164\x5f\x71\x75\145\x72\x79"), "\x23\141\164\164\x72\151\x62\x75\x74\x65\x73" => array("\x73\164\x79\x6c\x65" => "\x62\x61\143\153\147\162\157\x75\156\x64\72\x20\x23\63\x33\x37\x61\x62\67\x3b\x63\x6f\154\157\x72\72\x20\x23\146\x66\146\146\x66\146\73\x74\x65\x78\164\x2d\x73\x68\141\x64\x6f\x77\72\40\x30\x20\55\x31\x70\170\x20\x31\160\170\40\x23\63\x33\x37\x61\x62\67\54\x20\61\x70\170\x20\x30\40\61\x70\170\40\43\63\63\x37\x61\142\x37\x2c\40\60\40\61\x70\x78\40\x31\x70\170\x20\x23\63\63\67\x61\142\x37\54\x20\55\x31\x70\170\x20\60\x20\x31\160\x78\40\43\x33\63\x37\141\x62\67\73\x62\x6f\170\55\163\150\x61\144\157\167\x3a\40\x30\x20\61\160\170\40\x30\40\43\63\63\x37\141\142\x37\x3b\142\x6f\x72\x64\145\162\55\143\x6f\x6c\x6f\162\72\x20\x23\x33\63\67\141\142\67\40\x23\63\x33\67\x61\x62\67\x20\x23\63\63\67\141\x62\x37\73\144\x69\163\160\154\x61\x79\x3a\142\154\157\143\153\x3b\155\x61\162\x67\x69\x6e\x2d\154\x65\x66\x74\72\141\165\164\157\x3b\x6d\141\162\147\x69\156\x2d\x72\151\x67\150\164\x3a\141\x75\x74\157\73"));
        $form["\155\151\x6e\151\x6f\x72\x61\156\x67\x65\x5f\163\x61\x6d\x6c\137\x73\x75\x70\x70\157\162\x74\137\x6e\157\164\145"] = array("\43\155\x61\162\153\165\x70" => "\x3c\x64\151\166\76\111\146\x20\x79\157\x75\x20\x77\141\156\x74\x20\143\x75\x73\x74\157\155\x20\x66\x65\141\164\165\162\x65\x73\40\151\x6e\40\x74\x68\145\40\160\x6c\165\147\x69\x6e\x2c\x20\x6a\x75\x73\164\x20\x64\x72\x6f\x70\x20\141\156\x20\x65\155\141\151\154\x20\164\x6f\40\x3c\x61\x20\x68\x72\145\x66\75\42\155\x61\x69\x6c\164\157\72\144\x72\165\x70\141\154\163\165\x70\x70\x6f\x72\x74\100\170\x65\x63\165\162\151\146\171\x2e\143\157\x6d\x22\76\x64\x72\165\160\141\154\x73\165\x70\x70\x6f\162\164\x40\x78\x65\143\165\x72\x69\x66\x79\x2e\x63\x6f\x6d\74\x2f\141\76\x3c\57\144\151\x76\x3e");
        $form["\155\151\156\151\x6f\x72\x61\x6e\x67\145\137\x66\x61\161"] = array("\43\155\141\162\153\165\160" => "\74\142\162\x3e\x3c\144\x69\166\x20\x73\164\171\154\145\x3d\42\x74\x65\170\164\55\141\154\x69\x67\x6e\x3a\x20\x63\145\x6e\x74\x65\x72\x3b\42\76\74\141\x20\x63\x6c\x61\x73\163\x3d\42\155\157\137\163\x61\155\x6c\x5f\142\x74\156\x20\x6d\x6f\137\163\x61\x6d\x6c\x5f\142\164\x6e\x2d\160\162\x69\155\141\162\171\55\x66\141\x71\x20\x6d\157\137\x73\141\155\x6c\x5f\142\164\x6e\x2d\154\x61\x72\147\145\40\x6d\157\x5f\x73\x61\x6d\154\x5f\x62\x74\156\x5f\146\141\x71\x5f\x62\165\x74\164\x6f\156\x73\x22\40\x73\164\x79\x6c\145\75\x22\x66\x6c\x6f\x61\164\72\x20\x69\x6e\x68\x65\162\151\x74\73\160\141\144\x64\x69\x6e\147\x3a\x20\63\160\x78\40\66\x70\x78\40\41\x69\x6d\x70\157\162\164\141\x6e\164\73\x63\x6f\154\157\x72\x3a\x20\43\x34\70\141\60\x64\143\73\142\157\x72\144\145\x72\x3a\40\62\160\170\x20\x73\157\x6c\x69\x64\x20\x23\x34\70\x61\x30\144\143\x3b\x22\x20\150\162\145\x66\x3d\42\x68\164\x74\160\x73\72\57\x2f\146\141\x71\56\x6d\151\x6e\x69\157\162\141\156\147\x65\56\143\x6f\x6d\x2f\x6b\x62\x2f\x64\x72\x75\x70\141\154\57\163\x61\x6d\x6c\x2d\144\x72\x75\160\x61\x6c\x2f\x22\x20\x74\141\x72\147\x65\x74\x3d\x22\x5f\142\154\141\156\x6b\x22\x3e" . "\106\x41\x51\x73\x3c\x2f\x61\x3e");
        $form["\155\151\156\x69\157\162\x61\156\x67\145\137\147\x75\151\x64\x65"] = array("\43\x6d\141\x72\153\x75\160" => "\74\141\40\143\x6c\141\163\x73\75\42\x6d\157\x5f\x73\141\x6d\x6c\x5f\x62\164\156\x20\155\157\137\x73\x61\155\154\137\x62\164\x6e\55\160\162\151\x6d\x61\162\x79\55\x66\x61\161\x20\x6d\x6f\x5f\x73\141\x6d\x6c\x5f\x62\164\x6e\55\x6c\x61\162\147\145\x20\x6d\157\x5f\x73\141\x6d\x6c\137\142\x74\x6e\x5f\146\x61\x71\137\x62\x75\164\164\x6f\x6e\163\x22\40\x73\x74\171\x6c\x65\x3d\42\x66\154\157\x61\164\72\x20\151\156\x68\145\162\x69\x74\x3b\x70\x61\144\x64\x69\x6e\x67\x3a\x20\x33\x70\x78\x20\x36\160\170\x20\41\x69\x6d\x70\x6f\x72\x74\141\x6e\164\x3b\143\x6f\154\x6f\162\x3a\x20\x23\64\x38\x61\x30\x64\143\x3b\x62\x6f\x72\144\x65\x72\72\x20\x32\160\170\40\x73\x6f\154\151\x64\x20\43\x34\x38\141\x30\144\x63\73\x22\40\150\162\145\x66\x3d\42\150\164\164\160\x73\72\57\x2f\x70\154\165\x67\x69\156\x73\x2e\155\151\156\151\157\162\141\x6e\147\145\x2e\x63\x6f\155\57\143\157\156\x66\151\x67\165\x72\x65\x2d\x64\x72\x75\160\x61\154\55\x73\x61\x6d\154\55\163\151\156\x67\154\x65\55\x73\151\x67\x6e\55\157\x6e\42\40\164\x61\x72\147\145\164\x3d\42\137\142\154\141\156\153\42\76" . "\123\x65\164\165\160\40\107\x75\x69\x64\145\x73\x3c\57\x61\76");
        $form["\x6d\151\x6e\151\157\x72\141\x6e\x67\145\x5f\146\157\x72\x75\x6d"] = array("\43\155\x61\162\x6b\165\160" => "\x3c\142\x3e\74\x2f\x62\x3e\x3c\141\40\143\x6c\x61\x73\163\x3d\x22\155\x6f\x5f\163\141\x6d\x6c\137\x62\164\156\x20\x6d\x6f\137\x73\x61\x6d\154\137\x62\164\x6e\55\160\x72\x69\155\141\x72\171\x2d\x66\x61\161\x20\x6d\x6f\x5f\163\x61\155\x6c\137\x62\164\x6e\x2d\154\x61\162\147\145\x20\155\x6f\x5f\x73\141\155\x6c\137\x62\164\x6e\x5f\146\x61\x71\137\142\x75\164\x74\157\156\x73\42\x20\163\x74\x79\154\x65\75\x22\x6d\141\x72\147\151\x6e\x2d\154\x65\x66\x74\72\x20\x31\x30\160\x78\73\x20\x66\x6c\157\141\164\72\40\x69\156\x68\x65\x72\151\164\x3b\x70\x61\x64\x64\151\x6e\x67\72\x20\x33\160\x78\40\66\x70\170\x20\41\x69\x6d\x70\x6f\162\164\x61\x6e\164\x3b\x63\157\154\157\162\72\x20\x23\64\70\141\60\x64\143\x3b\142\157\162\x64\145\x72\72\40\x32\x70\170\40\x73\157\154\x69\144\40\x23\x34\70\141\60\144\143\73\42\x20\x68\x72\145\146\75\42\150\x74\164\x70\163\x3a\57\x2f\x66\x6f\162\x75\x6d\x2e\x6d\151\x6e\151\157\x72\141\156\147\145\x2e\x63\x6f\x6d\x2f\x22\x20\x74\x61\162\x67\x65\164\75\x22\x5f\142\x6c\x61\x6e\153\x22\x3e" . "\101\x73\153\40\x71\165\145\163\164\151\157\x6e\163\x20\157\x6e\40\146\157\162\x75\x6d\74\x2f\x61\x3e\74\57\x64\151\166\x3e\74\x2f\144\151\x76\76");
    }
    public static function Is_Restricted_Domain($Kf)
    {
        $qm = variable_get("\x6d\151\156\151\157\x72\141\x6e\147\145\137\163\x61\x6d\154\137\145\x6e\141\x62\x6c\145\137\144\157\155\141\x69\x6e\x5f\x72\x65\x73\x74\x72\x69\x63\164\x69\157\x6e");
        if (!($qm === FALSE)) {
            goto TE;
        }
        return FALSE;
        TE:
        $mQ = explode("\x40", $Kf)[1];
        if (!(is_null($mQ) || empty($mQ))) {
            goto Uq;
        }
        return FALSE;
        Uq:
        $ky = variable_get("\155\151\x6e\151\157\162\141\156\x67\x65\137\x73\x61\x6d\x6c\137\x64\x6f\155\141\x69\156\x73");
        $d2 = variable_get("\155\151\156\x69\x6f\162\x61\x6e\x67\x65\137\163\141\x6d\x6c\x5f\144\157\155\x61\151\156\163\137\x61\x72\145\x5f\x77\x68\151\x74\145\x5f\157\x72\137\x62\x6c\141\x63\x6b");
        $ky = explode("\73", $ky);
        if ($d2 === "\x77\150\x69\164\x65") {
            goto q5;
        }
        if ($d2 == "\142\154\x61\143\x6b") {
            goto s8;
        }
        goto Sg;
        q5:
        if (array_search($mQ, $ky) === FALSE) {
            goto K6;
        }
        return FALSE;
        goto l2;
        K6:
        return TRUE;
        l2:
        goto Sg;
        s8:
        if (array_search($mQ, $ky) === FALSE) {
            goto Q1;
        }
        return TRUE;
        goto RD;
        Q1:
        return FALSE;
        RD:
        Sg:
    }
    public static function send_support_query(&$form, $form_state)
    {
        $Ry = trim($form["\x6d\151\x6e\151\x6f\162\141\156\x67\x65\x5f\163\x61\155\x6c\137\x65\155\141\x69\154\x5f\141\144\144\x72\x65\163\163"]["\43\x76\141\154\x75\x65"]);
        $EZ = trim($form["\x6d\151\x6e\151\x6f\162\141\156\147\x65\137\x73\x61\x6d\154\137\160\150\157\156\145\x5f\156\x75\155\x62\145\x72"]["\43\166\x61\x6c\165\145"]);
        $hO = trim($form["\x6d\151\156\151\157\162\x61\156\147\x65\137\163\141\155\154\x5f\x73\165\x70\x70\157\x72\164\x5f\161\165\x65\162\x79"]["\x23\166\x61\154\165\x65"]);
        Utilities::send_query($Ry, $EZ, $hO);
    }
    public static function send_query($Ry, $EZ, $hO)
    {
        if (empty($Ry) || empty($hO)) {
            goto nI;
        }
        if (!valid_email_address($Ry)) {
            goto Ae;
        }
        goto R0;
        nI:
        drupal_set_message(t("\x54\x68\x65\40\74\x62\76\74\165\x3e\105\155\x61\x69\x6c\x3c\57\165\x3e\x3c\x2f\142\x3e\40\141\156\144\x20\74\142\76\x3c\165\x3e\121\165\145\x72\171\x3c\x2f\x75\76\74\x2f\x62\x3e\x20\x66\x69\x65\x6c\144\163\40\x61\x72\x65\x20\x72\145\161\x75\151\x72\x65\144\56"), "\x65\162\162\157\x72");
        return;
        goto R0;
        Ae:
        drupal_set_message(t("\x54\150\x65\x20\x65\x6d\141\x69\154\40\141\x64\x64\162\x65\163\163\40\74\142\76\74\151\76" . $Ry . "\74\57\x69\76\x3c\x2f\x62\76\x20\x69\x73\x20\156\x6f\164\x20\166\x61\x6c\151\x64\56"), "\x65\162\x72\157\162");
        return;
        R0:
        $JV = new MiniOrangeSamlSupport($Ry, $EZ, $hO);
        $xH = $JV->sendSupportQuery();
        if ($xH) {
            goto ZN;
        }
        drupal_set_message(t("\105\162\x72\x6f\x72\x20\163\145\x6e\144\151\156\x67\40\163\x75\x70\160\157\x72\x74\x20\x71\x75\145\x72\171"), "\145\x72\162\157\x72");
        goto pN;
        ZN:
        drupal_set_message(t("\123\x75\x70\160\157\x72\164\x20\161\x75\x65\x72\171\x20\163\165\x63\x63\x65\163\163\146\165\154\154\171\x20\x73\145\156\x74"));
        pN:
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $Rq = variable_get("\155\151\x6e\x69\x6f\x72\x61\156\147\x65\x5f\x73\141\155\x6c\137\x62\x61\163\145\x5f\x75\x72\x6c", '');
        $oK = isset($Rq) && !empty($Rq) ? $Rq : $base_url;
        return $oK;
    }
    public static function getIssuer()
    {
        $Pz = variable_get("\x6d\x69\x6e\151\x6f\162\x61\156\x67\145\x5f\x73\141\155\x6c\137\145\x6e\164\151\164\x79\137\151\x64", '');
        $oK = Utilities::miniorange_get_baseURL();
        $e1 = isset($Pz) && !empty($Pz) ? $Pz : $oK;
        return $e1;
    }
    public static function getCertificatePath($QS = false)
    {
        $oK = '';
        if (!$QS) {
            goto MW;
        }
        $oK = self::miniorange_get_baseURL() . "\57";
        MW:
        $Oi = drupal_get_path("\x6d\x6f\144\165\154\x65", "\x6d\x69\156\x69\157\162\141\x6e\x67\x65\x5f\163\141\155\x6c");
        return $oK . $Oi . "\x2f\x72\x65\x73\157\x75\162\x63\145\x73\57" . self::getCertficateName();
    }
    public static function getCertficateName()
    {
        $Hx = variable_get("\x6d\151\x6e\x69\157\162\141\156\147\x65\137\x73\x61\x6d\154\137\160\165\142\x6c\137\x63\x65\x72\164\x69\146\x69\x63\141\164\x65", '');
        if (empty($Hx)) {
            goto Vv;
        }
        return MiniorangeSAMLConstants::CUSTOM_PUBLIC_CERT_NAME;
        goto yd;
        Vv:
        return MiniorangeSAMLConstants::DEFAULT_PUBLIC_CERT_NAME;
        yd:
    }
    public static function getKeyPath()
    {
        $Oi = drupal_get_path("\x6d\157\144\x75\x6c\x65", "\x6d\x69\156\151\157\162\141\x6e\147\x65\x5f\163\x61\x6d\154");
        return $Oi . "\x2f\162\x65\163\157\165\162\143\x65\x73\57" . self::getKeyName();
    }
    public static function getKeyName()
    {
        $tE = variable_get("\155\151\x6e\x69\157\162\141\x6e\147\x65\137\x73\x61\155\x6c\x5f\160\x72\151\x76\x61\x74\x65\x5f\143\x65\162\164\x69\146\x69\x63\141\164\145", '');
        if (empty($tE)) {
            goto wE;
        }
        return MiniorangeSAMLConstants::CUSTOM_PRIVATE_KEY_NAME;
        goto pm;
        wE:
        return MiniorangeSAMLConstants::DEFAULT_PRIVATE_KEY_NAME;
        pm:
    }
    public static function getTabNames()
    {
        $Ai = array("\111\x64\x65\156\x74\x69\x74\171\137\120\162\x6f\x76\x69\x64\145\x72" => "\x6d\157\137\x6f\x70\x74\x69\157\x6e\x73\137\145\156\x75\x6d\137\151\144\x65\x6e\164\x69\x74\x79\x5f\x70\162\157\x76\x69\x64\145\x72", "\x53\x65\x72\x76\x69\143\145\137\120\x72\157\166\151\x64\145\x72" => "\155\x6f\137\x6f\160\164\151\157\x6e\x73\x5f\x65\156\x75\x6d\x5f\163\x65\x72\166\151\143\x65\x5f\160\162\x6f\166\151\x64\x65\162", "\x4d\x61\160\x70\x69\156\x67" => "\x6d\x6f\x5f\157\x70\164\x69\157\156\163\x5f\145\x6e\x75\155\137\x6d\141\160\x70\x69\x6e\x67", "\123\x69\147\x6e\137\111\x6e\x5f\123\x65\x74\164\x69\x6e\x67\x73" => "\155\157\x5f\157\x70\164\x69\157\x6e\x73\x5f\145\156\x75\x6d\x5f\163\151\147\x6e\x5f\151\156\137\x73\145\x74\x74\x69\x6e\x67\x73", "\103\x75\x73\x74\157\x6d\137\103\x65\x72\x74\x69\146\x69\143\x61\x74\145" => "\155\x6f\137\x6f\160\164\151\x6f\156\163\x5f\145\156\165\x6d\x5f\143\x75\163\164\x6f\155\x5f\143\x65\x72\164\x69\x66\151\x63\x61\164\x65");
        return $Ai;
    }
    public static function getVariableNames($v2)
    {
        if ($v2 == "\155\157\x5f\x6f\160\164\151\x6f\x6e\163\x5f\145\156\x75\x6d\x5f\x69\x64\145\x6e\x74\x69\164\171\137\160\162\157\166\151\144\145\x72") {
            goto Yv;
        }
        if ($v2 == "\155\157\x5f\157\160\164\151\157\x6e\x73\x5f\145\x6e\165\x6d\x5f\x73\x65\162\166\x69\x63\145\137\x70\x72\157\x76\151\144\x65\162") {
            goto ti;
        }
        if ($v2 == "\x6d\x6f\137\x6f\160\x74\151\157\x6e\163\x5f\145\x6e\x75\155\137\155\141\x70\160\x69\x6e\x67") {
            goto dB;
        }
        if ($v2 == "\155\157\137\x6f\160\x74\x69\157\x6e\x73\137\145\156\x75\x6d\x5f\x73\151\147\156\137\x69\156\137\163\x65\164\164\151\156\147\163") {
            goto Ri;
        }
        if (!($v2 == "\x6d\157\137\157\160\164\151\157\x6e\x73\x5f\x65\156\165\155\137\x63\165\163\x74\157\155\x5f\x63\x65\162\164\x69\146\151\x63\x61\164\145")) {
            goto l_;
        }
        $Iv = array("\x43\165\x73\x74\x6f\155\137\x70\x72\151\x76\141\164\x65\137\143\x65\x72\164" => "\x6d\x69\156\151\157\162\x61\x6e\x67\x65\x5f\163\x61\x6d\x6c\137\x70\162\151\x76\141\164\x65\x5f\143\x65\162\x74\x69\x66\151\x63\141\164\145", "\x43\x75\x73\164\157\155\137\x70\x75\x62\x6c\151\143\137\x63\145\x72\x74" => "\x6d\151\x6e\151\157\x72\x61\156\x67\145\x5f\x73\x61\155\154\x5f\160\165\x62\x6c\137\x63\x65\x72\164\x69\146\x69\x63\x61\164\x65");
        l_:
        goto Mt;
        Ri:
        $Iv = array("\120\162\157\164\145\143\x74\137\x77\150\157\154\x65\x5f\x73\x69\x74\x65" => "\x6d\151\156\x69\157\162\x61\x6e\x67\x65\137\163\141\x6d\154\x5f\x66\x6f\x72\143\145\137\141\x75\164\x68", "\x41\x75\164\x6f\137\162\x65\x64\x69\162\x65\143\164" => "\x6d\151\x6e\x69\x6f\x72\x61\x6e\147\145\137\163\141\x6d\x6c\x5f\141\165\x74\x6f\137\x72\x65\x64\151\162\145\143\164\137\164\x6f\137\151\x64\x70", "\102\x61\143\x6b\x64\157\x6f\x72\137\114\x6f\147\x69\x6e" => "\155\151\x6e\x69\157\x72\141\x6e\147\x65\x5f\x73\141\155\x6c\x5f\145\156\x61\x62\x6c\x65\x5f\142\x61\x63\x6b\144\x6f\x6f\x72", "\104\145\x66\x61\x75\x6c\164\137\x72\145\x64\151\162\145\x63\x74\x5f\165\162\154" => "\155\x69\x6e\151\157\x72\x61\x6e\x67\x65\137\163\x61\155\154\137\144\145\146\141\165\x6c\x74\137\x72\145\154\141\171\x73\x74\x61\x74\145", "\x62\x61\x63\153\144\x6f\157\x72\121\x75\x65\162\171" => "\x6d\151\156\151\157\162\x61\156\x67\145\x5f\x62\x61\x63\x6b\x64\x6f\x6f\x72\x5f\x71\x75\x65\162\171", "\x65\x6e\141\142\154\x65\x5f\144\157\x6d\141\151\156\x5f\162\x65\163\164\x72\x69\143\x74\151\157\x6e" => "\155\151\x6e\151\x6f\x72\x61\156\147\x65\x5f\163\x61\x6d\x6c\x5f\x65\156\141\x62\x6c\x65\137\x64\x6f\155\141\x69\156\137\162\x65\163\164\x72\151\x63\x74\151\157\156", "\155\151\156\x69\157\162\141\156\x67\x65\137\x73\x61\155\154\x5f\144\157\x6d\x61\x69\156\163\x5f\141\x72\x65\x5f\x77\x68\x69\x74\x65\137\157\162\x5f\x62\154\141\143\153" => "\155\x69\x6e\x69\x6f\x72\x61\x6e\147\x65\x5f\163\141\x6d\154\137\x64\x6f\155\141\x69\156\x73\137\141\x72\145\x5f\167\150\151\164\145\137\157\162\137\142\x6c\x61\x63\153", "\x6d\x69\156\x69\157\162\x61\156\x67\145\x5f\163\141\155\x6c\x5f\x64\157\x6d\141\x69\156\163" => "\x6d\151\x6e\x69\x6f\x72\x61\156\x67\145\x5f\x73\141\x6d\154\x5f\x64\x6f\155\x61\151\156\x73");
        Mt:
        goto td;
        dB:
        $Iv = array("\125\163\x65\x72\156\141\155\x65\137\x61\x74\164\x72" => "\155\x69\156\151\x6f\162\x61\156\x67\x65\137\x73\141\x6d\154\137\165\x73\145\162\x6e\141\155\x65\x5f\141\164\164\162\151\x62\165\164\145", "\105\155\x61\x69\154\137\x61\x74\x74\x72" => "\x6d\151\156\x69\157\162\x61\x6e\x67\145\x5f\163\x61\x6d\x6c\137\145\155\141\151\154\137\x61\x74\x74\162\x69\x62\165\x74\x65", "\x52\x6f\154\145" => "\155\151\x6e\x69\x6f\x72\x61\x6e\x67\x65\137\x73\141\155\x6c\x5f\x69\144\x70\137\141\164\164\162\61\x5f\x6e\x61\x6d\x65", "\x52\157\154\x65\x5f\x6d\x61\x70\160\151\156\147" => "\x6d\151\x6e\151\157\162\141\x6e\147\x65\x5f\x73\x61\155\x6c\x5f\x65\x6e\141\142\x6c\145\137\162\157\154\x65\155\141\160\160\x69\x6e\147", "\104\x69\x73\141\x62\154\x65\x5f\141\x75\x74\157\x5f\x63\162\x65\x61\164\x65\x5f\x75\163\145\x72" => "\155\151\x6e\x69\x6f\x72\141\x6e\147\145\x5f\163\x61\155\x6c\137\x64\x69\163\141\x62\154\x65\137\x61\165\164\x6f\143\x72\145\141\164\x65\137\165\x73\145\x72\x73", "\104\x65\x66\x61\x75\x6c\x74\137\162\157\154\x65" => "\x6d\x69\156\x69\157\162\x61\156\x67\145\137\163\x61\x6d\x6c\x5f\x64\145\x66\x61\x75\x6c\164\x5f\x72\157\154\x65", "\104\157\137\156\x6f\164\x5f\165\x70\x64\x61\164\x65\137\165\x73\x65\x72\137\162\157\x6c\x65\163" => "\x6d\151\x6e\151\157\162\141\156\147\x65\137\x73\141\x6d\x6c\137\x64\x69\163\141\x62\x6c\x65\x5f\x72\x6f\154\145\137\x75\x70\x64\x61\x74\145");
        td:
        goto qv;
        ti:
        $Iv = array("\111\144\145\x6e\x74\151\x74\171\x5f\156\x61\x6d\145" => "\x6d\x69\156\x69\x6f\162\x61\x6e\147\x65\137\x73\141\155\x6c\x5f\x69\x64\x70\x5f\156\141\x6d\x65", "\x49\163\x73\165\145\x72" => "\x6d\151\x6e\x69\x6f\x72\x61\156\147\145\137\163\x61\x6d\154\x5f\x69\144\160\x5f\151\x73\x73\165\145\x72", "\x45\156\x61\x62\154\x65\x5f\123\151\147\156\x65\x64\x5f\x53\x53\x4f\137\141\x6e\x64\x5f\123\x4c\x4f" => "\155\x69\x6e\151\157\x72\x61\156\147\x65\137\x73\141\155\x6c\137\162\x65\161\165\x65\163\x74\137\x73\151\147\x6e\x65\x64", "\116\141\155\145\x5f\x49\104\137\x66\157\x72\155\141\x74" => "\155\x69\156\x69\157\x72\141\156\147\x65\x5f\156\141\x6d\145\x69\144\x5f\x66\x6f\162\x6d\x61\x74", "\x42\x69\156\x64\x69\156\x67\137\x53\123\117" => "\155\151\x6e\151\x6f\162\141\156\147\x65\x5f\163\141\x6d\154\x5f\x68\164\x74\x70\x5f\x62\x69\x6e\x64\x69\x6e\x67", "\102\x69\156\144\x69\x6e\x67\137\123\114\117" => "\x6d\151\x6e\151\157\162\141\x6e\x67\145\137\163\141\155\154\137\x68\164\164\160\x5f\142\151\156\x64\x69\156\147\137\x73\154\x6f", "\x4c\x6f\147\151\x6e\x5f\125\x52\x4c" => "\155\151\x6e\151\157\x72\x61\156\147\145\137\x73\x61\155\x6c\137\x69\x64\160\137\154\157\147\x69\x6e\x5f\165\x72\x6c", "\105\x6e\x61\142\154\x65\137\x6c\157\x67\157\165\164\137\167\x69\x74\150\157\x75\164\x5f\162\145\x73\160\x6f\156\163\145" => "\155\x69\x6e\x69\x6f\162\141\156\x67\145\137\x73\x61\x6d\x6c\137\145\156\x61\x62\x6c\145\137\x6c\157\147\157\165\164", "\x4c\157\x67\x6f\165\164\137\125\x52\114" => "\155\x69\156\x69\x6f\162\141\x6e\x67\145\137\x73\141\155\154\137\x69\144\x70\x5f\154\x6f\x67\157\x75\164\137\x75\162\x6c", "\130\x35\60\71\x5f\x63\x65\162\164\151\146\x69\x63\141\x74\145" => "\155\151\x6e\x69\157\x72\x61\x6e\147\145\137\x73\141\x6d\154\137\x69\x64\x70\137\x78\65\60\71\137\x63\145\x72\164\x69\146\x69\x63\141\164\145", "\x45\156\x61\142\154\145\137\x6c\157\x67\x69\156\137\167\x69\x74\x68\137\123\x41\115\114" => "\155\x69\x6e\151\x6f\162\x61\156\x67\x65\137\x73\141\x6d\154\137\x65\x6e\x61\142\x6c\x65\137\x6c\157\x67\151\x6e", "\123\151\x67\156\x61\164\165\x72\145\137\101\x6c\147\157" => "\163\x65\143\x75\162\x69\164\171\137\x73\151\147\156\x61\x74\x75\162\x65\x5f\141\x6c\x67\x6f\162\x69\164\150\155");
        qv:
        goto sW;
        Yv:
        $Iv = array("\102\x72\157\153\x65\162\x5f\x73\145\162\x76\151\x63\x65" => "\155\x6f\x5f\163\141\155\154\137\145\x6e\x61\142\154\x65\x5f\143\154\x6f\x75\x64\x5f\x62\x72\x6f\x6b\145\x72", "\x53\x50\x5f\x42\x61\163\145\x5f\x55\x72\x6c" => "\155\x69\x6e\x69\x6f\162\x61\156\147\145\137\163\141\x6d\x6c\x5f\x62\141\x73\145\x5f\x75\162\x6c", "\123\x50\x5f\x45\x6e\x74\x69\164\171\137\x49\104" => "\x6d\151\156\151\x6f\x72\141\156\x67\145\x5f\163\x61\155\154\137\145\x6e\x74\x69\164\171\x5f\151\144");
        sW:
        return $Iv;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\x75\x72\154", get_loaded_extensions())) {
            goto u5;
        }
        return 0;
        goto T0;
        u5:
        return 1;
        T0:
    }
    public static function generateID()
    {
        return "\x5f" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($ke)
    {
        $vX = '';
        $n5 = 0;
        nc:
        if (!($n5 < strlen($ke))) {
            goto kU;
        }
        $vX .= sprintf("\x25\60\62\x78", ord($ke[$n5]));
        lN:
        $n5++;
        goto nc;
        kU:
        return $vX;
    }
    public static function generateRandomBytes($M0, $xL = TRUE)
    {
        return openssl_random_pseudo_bytes($M0);
    }
    public static function insertSignature(XMLSecurityKey $l9, array $Un, DOMElement $V1 = NULL, DOMNode $ES = NULL)
    {
        $ZG = new XMLSecurityDSig();
        $ZG->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($l9->type) {
            case XMLSecurityKey::RSA_SHA256:
                $dE = XMLSecurityDSig::SHA256;
                goto eU;
            case XMLSecurityKey::RSA_SHA384:
                $dE = XMLSecurityDSig::SHA384;
                goto eU;
            case XMLSecurityKey::RSA_SHA512:
                $dE = XMLSecurityDSig::SHA512;
                goto eU;
            default:
                $dE = XMLSecurityDSig::SHA1;
        }
        qS:
        eU:
        $ZG->addReferenceList(array($V1), $dE, array("\x68\164\x74\160\x3a\x2f\x2f\167\167\x77\56\x77\x33\x2e\157\162\x67\x2f\62\60\x30\x30\x2f\x30\71\x2f\170\x6d\x6c\x64\x73\151\147\x23\145\x6e\x76\x65\154\x6f\160\x65\144\55\x73\x69\x67\x6e\141\164\x75\x72\145", XMLSecurityDSig::EXC_C14N), array("\151\144\x5f\156\141\x6d\145" => "\111\x44", "\x6f\166\145\162\167\x72\151\x74\x65" => FALSE));
        $ZG->sign($l9);
        foreach ($Un as $La) {
            $ZG->add509Cert($La, TRUE);
            ZO:
        }
        uz:
        $ZG->insertSignature($V1, $ES);
    }
    public static function signXML($L_, $YD, $aq, $gn = '', $MR)
    {
        $OT = array("\164\x79\160\145" => "\x70\162\x69\166\x61\x74\145");
        if ($MR == "\x52\123\101\x5f\x53\110\x41\62\x35\66") {
            goto Nn;
        }
        if ($MR == "\122\x53\x41\x5f\x53\110\x41\x33\70\64") {
            goto Pn;
        }
        if ($MR == "\x52\123\101\x5f\123\110\x41\65\61\x32") {
            goto jR;
        }
        if ($MR == "\122\123\x41\137\x53\x48\101\61") {
            goto Sr;
        }
        goto f2;
        Nn:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $OT);
        goto f2;
        Pn:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $OT);
        goto f2;
        jR:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $OT);
        goto f2;
        Sr:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $OT);
        f2:
        $l9->loadKey($aq, TRUE);
        $YL = file_get_contents($YD);
        $XU = new DOMDocument();
        $XU->loadXML($L_);
        $xK = $XU->firstChild;
        if (!empty($gn)) {
            goto yi;
        }
        self::insertSignature($l9, array($YL), $xK);
        goto DE;
        yi:
        $eo = $XU->getElementsByTagName($gn)->item(0);
        self::insertSignature($l9, array($YL), $xK, $eo);
        DE:
        $Jo = $xK->ownerDocument->saveXML($xK);
        $x4 = base64_encode($Jo);
        return $x4;
    }
    public static function postSAMLRequest($Rq, $m9, $ZB)
    {
        echo "\x3c\150\x74\x6d\x6c\76\x3c\x68\145\x61\144\76\12\40\x20\x20\x20\40\x20\40\40\40\40\x20\x20\x20\x20\40\x20\x20\x20\74\163\x63\162\151\160\164\x20\x73\162\143\x3d\47\150\x74\x74\x70\163\x3a\x2f\57\143\x6f\x64\145\x2e\152\161\165\x65\x72\171\56\143\157\x6d\x2f\x6a\161\165\145\x72\x79\55\61\x2e\61\x31\x2e\x33\56\155\151\x6e\x2e\x6a\x73\x27\76\x3c\x2f\x73\143\162\x69\x70\x74\x3e\xa\x20\40\40\x20\40\40\x20\40\40\x20\x20\40\40\x20\40\40\x20\40\x3c\163\x63\162\151\x70\164\40\x74\x79\160\x65\x3d\42\164\145\170\164\57\152\x61\166\141\x73\x63\x72\x69\160\x74\42\76\44\50\x66\x75\156\143\164\x69\x6f\156\x28\51\173\144\157\x63\165\155\x65\x6e\x74\x2e\x66\157\x72\x6d\163\x5b\x27\x73\141\155\x6c\x2d\162\145\x71\x75\x65\x73\x74\x2d\x66\157\x72\x6d\47\135\x2e\x73\x75\x62\x6d\x69\x74\x28\x29\x3b\x7d\x29\73\x3c\57\x73\x63\162\151\160\x74\76\x3c\x2f\x68\x65\x61\144\76\xa\40\x20\x20\x20\40\x20\40\x20\x20\40\40\x20\40\x20\40\40\40\40\74\142\157\144\171\x3e\x50\154\x65\141\x73\x65\x20\167\x61\151\x74\x2e\56\56\74\x66\x6f\162\155\x20\x61\x63\x74\x69\157\x6e\75\42" . $Rq . "\42\x20\x6d\145\x74\150\157\x64\x3d\42\x70\157\163\x74\42\40\x69\144\75\42\163\x61\155\154\55\162\x65\161\165\x65\x73\x74\55\x66\157\162\x6d\42\76\xa\x20\x20\40\40\x20\40\40\x20\x20\x20\40\40\x20\40\40\40\40\40\x20\x20\x3c\151\156\x70\165\164\40\164\171\160\x65\75\42\x68\151\144\x64\145\156\42\40\x6e\141\x6d\x65\75\x22\x53\x41\x4d\x4c\122\x65\x71\165\145\163\164\42\40\x76\x61\154\165\145\75\42" . $m9 . "\42\x20\57\x3e\12\40\40\40\x20\40\x20\x20\x20\x20\x20\40\40\40\x20\40\x20\40\x20\x20\x20\74\x69\x6e\x70\165\x74\40\164\x79\x70\x65\x3d\x22\x68\x69\144\x64\x65\x6e\x22\x20\x6e\x61\155\145\75\42\x52\x65\154\x61\x79\123\164\141\x74\145\42\x20\166\x61\x6c\x75\x65\75\x22" . htmlentities($ZB) . "\x22\x20\57\x3e\74\x2f\146\x6f\x72\155\76\xa\40\40\40\x20\40\40\x20\x20\x20\40\40\40\x20\40\x20\40\40\x20\40\40\74\x2f\142\x6f\x64\171\x3e\12\40\x20\x20\x20\40\40\x20\40\x20\x20\40\40\x20\40\74\57\x68\164\x6d\154\76";
        die;
    }
    public static function createAuthnRequest($ZJ, $Pz, $ax, $xB, $zw = "\146\141\154\163\x65", $TY)
    {
        $Zu = "\x3c\x3f\170\x6d\154\x20\x76\145\162\x73\151\x6f\156\75\x22\61\56\x30\42\40\x65\x6e\143\x6f\x64\x69\x6e\x67\75\x22\125\x54\x46\55\x38\42\x3f\76" . "\74\x73\141\x6d\x6c\160\72\101\165\x74\x68\156\x52\145\161\x75\145\x73\x74\40\x78\x6d\154\156\x73\x3a\x73\x61\x6d\154\160\x3d\x22\165\x72\156\x3a\x6f\x61\163\151\163\72\x6e\x61\155\x65\x73\x3a\x74\x63\72\x53\101\x4d\x4c\72\62\56\x30\72\160\x72\157\164\157\x63\157\154\x22\x20\x78\x6d\x6c\156\x73\x3d\42\x75\162\x6e\x3a\x6f\x61\163\151\x73\72\x6e\x61\x6d\145\163\x3a\164\143\x3a\x53\x41\x4d\114\x3a\x32\x2e\x30\x3a\141\x73\x73\x65\x72\x74\x69\x6f\156\42\40\x49\104\x3d\x22" . self::generateID() . "\x22\40\x56\145\162\x73\x69\157\156\75\x22\62\x2e\x30\42\40\111\x73\x73\x75\145\111\156\x73\164\141\156\164\x3d\42" . self::generateTimestamp() . "\42";
        if (!($zw == "\x74\162\x75\x65")) {
            goto ag;
        }
        $Zu .= "\x20\x46\x6f\x72\x63\145\x41\165\164\150\156\75\x22\164\162\165\145\x22";
        ag:
        $Zu .= "\40\x50\162\157\x74\157\143\157\x6c\102\x69\x6e\144\151\156\x67\x3d\x22\165\162\156\72\157\141\163\x69\163\x3a\156\141\155\145\163\x3a\x74\143\72\123\101\115\x4c\x3a\x32\x2e\60\72\142\x69\x6e\x64\151\156\147\163\x3a\110\x54\x54\x50\55\120\117\x53\x54\42\40\101\163\163\x65\162\164\151\x6f\x6e\103\x6f\156\163\x75\x6d\145\162\123\145\x72\x76\151\143\x65\125\122\114\75\42" . $ZJ . "\x22\40\104\145\163\x74\151\156\x61\x74\151\x6f\x6e\75\42" . $ax . "\42\x3e\74\x73\141\155\154\x3a\x49\163\x73\165\x65\x72\40\170\x6d\154\156\x73\x3a\163\x61\155\154\75\x22\165\162\x6e\72\x6f\141\163\151\163\72\156\141\155\x65\x73\x3a\x74\x63\x3a\x53\101\115\114\72\x32\56\60\x3a\x61\x73\163\x65\x72\164\x69\x6f\x6e\42\x3e" . $Pz . "\74\57\x73\141\x6d\x6c\x3a\x49\163\x73\x75\145\162\76\74\x73\x61\x6d\x6c\x70\72\116\141\155\145\111\x44\x50\x6f\x6c\151\143\171\x20\101\x6c\x6c\x6f\x77\x43\x72\x65\x61\164\145\75\x22\164\x72\x75\x65\x22\x20\x46\x6f\162\155\141\x74\75\42" . $xB . "\42\12\x20\x20\x20\x20\x20\x20\40\40\x20\40\40\40\40\x20\40\40\x20\40\x20\40\40\40\40\40\57\x3e\x3c\57\163\141\x6d\x6c\x70\72\101\165\164\x68\x6e\x52\x65\161\165\145\163\164\x3e";
        if (!(empty($TY) || $TY == "\110\124\x54\120\55\122\145\144\x69\162\145\143\164")) {
            goto jt;
        }
        $CB = gzdeflate($Zu);
        $Ur = base64_encode($CB);
        $sz = urlencode($Ur);
        $Zu = $sz;
        jt:
        return $Zu;
    }
    public static function createSAMLRequest($ZJ, $Pz, $ax, $xB, $zw = "\146\141\x6c\163\145")
    {
        $Zu = "\74\x3f\x78\x6d\x6c\x20\x76\145\x72\x73\x69\x6f\x6e\75\42\x31\x2e\x30\42\x20\x65\x6e\x63\157\144\x69\156\147\75\42\x55\124\x46\55\x38\x22\77\x3e" . "\74\163\141\x6d\154\x70\x3a\101\165\x74\150\156\x52\145\161\x75\x65\x73\164\x20\x78\x6d\154\x6e\x73\x3a\x73\x61\155\x6c\160\75\42\165\162\x6e\x3a\157\x61\163\x69\x73\x3a\x6e\141\x6d\x65\x73\72\164\143\72\x53\x41\115\114\72\x32\x2e\x30\72\160\162\157\164\x6f\143\157\x6c\x22\40\x49\104\75\x22" . self::generateID() . "\x22\40\x56\x65\162\163\x69\x6f\156\x3d\x22\x32\56\x30\x22\40\x49\163\163\x75\145\x49\x6e\x73\164\x61\x6e\x74\75\42" . self::generateTimestamp() . "\x22";
        if (!($zw == "\164\162\x75\145")) {
            goto hO;
        }
        $Zu .= "\40\x46\157\162\143\145\x41\165\x74\x68\x6e\x3d\42\164\162\x75\145\x22";
        hO:
        $Zu .= "\x20\x50\x72\157\x74\x6f\x63\157\x6c\102\151\156\x64\x69\x6e\x67\x3d\x22\165\x72\156\72\x6f\141\163\151\163\72\156\141\x6d\x65\163\x3a\164\143\72\x53\101\115\x4c\72\x32\56\x30\x3a\142\151\x6e\144\151\156\x67\163\x3a\110\x54\x54\x50\55\x50\x4f\x53\124\42\x20\101\163\x73\x65\162\164\x69\157\156\103\157\x6e\163\x75\155\x65\x72\123\145\162\166\x69\143\x65\x55\122\114\x3d\42" . $ZJ . "\x22\x20\x44\145\163\164\151\x6e\141\x74\x69\157\156\x3d\x22" . $ax . "\x22\76\x3c\x73\141\155\x6c\x3a\111\x73\x73\x75\145\162\40\170\155\x6c\156\163\x3a\163\141\155\x6c\75\42\165\x72\x6e\x3a\x6f\x61\x73\x69\163\x3a\156\x61\x6d\x65\163\72\164\143\72\x53\101\115\x4c\x3a\62\56\x30\x3a\x61\x73\x73\x65\x72\164\151\157\156\42\x3e" . $Pz . "\x3c\57\x73\x61\x6d\x6c\72\x49\x73\163\x75\x65\162\x3e\x3c\x73\141\x6d\154\160\x3a\x4e\x61\x6d\x65\x49\104\120\157\x6c\x69\143\x79\x20\101\154\154\157\x77\103\x72\145\141\164\145\x3d\x22\x74\162\165\145\x22\x20\x46\157\x72\155\x61\164\75\42" . $xB . "\x22\12\40\x20\40\40\40\x20\40\40\40\40\40\40\x20\x20\x20\x20\x20\x20\x20\40\40\x20\40\x20\57\x3e\x3c\x2f\x73\x61\155\x6c\160\72\x41\x75\x74\x68\x6e\122\x65\x71\x75\145\x73\x74\x3e";
        return $Zu;
    }
    public static function mo_saml_logout()
    {
        $I2 = variable_get("\x6d\151\156\x69\157\x72\x61\x6e\147\145\x5f\163\141\155\154\137\x69\144\x70\x5f\154\157\x67\x6f\165\164\x5f\165\162\154", '');
        $f0 = variable_get("\155\151\156\x69\x6f\162\x61\156\x67\145\137\163\x61\155\154\x5f\150\x74\164\160\x5f\142\x69\x6e\x64\151\x6e\147\x5f\x73\x6c\x6f", '');
        $MR = variable_get("\x73\x65\143\x75\162\x69\x74\x79\x5f\163\x69\147\x6e\141\164\x75\162\145\x5f\x61\154\147\157\162\x69\164\x68\155");
        if (empty($I2)) {
            goto J7;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto y_;
        }
        session_start();
        y_:
        if (isset($_SESSION["\x6d\x6f\137\163\x61\155\154\x5f\x6c\x6f\x67\157\x75\x74\x5f\x72\145\161\165\145\163\164"])) {
            goto mj;
        }
        if (isset($_SESSION["\x6d\x6f\137\x73\141\155\x6c"]["\x6c\x6f\x67\x67\145\144\x5f\x69\156\137\x77\x69\164\x68\x5f\151\144\160"])) {
            goto Ek;
        }
        session_destroy();
        if (!(isset($_REQUEST["\x52\x65\154\141\171\x53\164\141\x74\x65"]) && !empty($_REQUEST["\x52\x65\154\141\171\x53\x74\141\164\x65"]))) {
            goto DC;
        }
        drupal_goto($_REQUEST["\x52\145\x6c\141\171\x53\164\x61\x74\x65"]);
        die;
        DC:
        goto X9;
        mj:
        goto X9;
        Ek:
        global $base_url;
        unset($_SESSION["\155\x6f\137\163\x61\x6d\x6c"]);
        $Cn = $_SESSION["\x73\145\x73\163\151\x6f\156\x49\156\144\x65\x78"];
        $PV = $_SESSION["\x4e\141\155\145\x49\104"];
        $BL = variable_get("\x6d\x69\156\x69\x6f\162\x61\x6e\147\x65\x5f\x73\x61\155\154\137\x65\156\141\x62\x6c\x65\137\x6c\157\x67\x6f\165\x74");
        if (!($BL == 1 || $BL == true)) {
            goto fF;
        }
        session_destroy();
        fF:
        if (isset($_SESSION["\154\x6f\x67\x6f\x75\164"]) && !empty($_SESSION["\x6c\157\147\157\165\164"])) {
            goto Km;
        }
        $pO = Utilities::miniorange_get_baseURL();
        goto aH;
        Km:
        $pO = $_SESSION["\x6c\157\147\157\165\x74"];
        aH:
        $L2 = Utilities::getIssuer();
        $hH = variable_get("\155\151\x6e\151\157\x72\x61\156\x67\145\137\x73\141\155\154\137\x72\145\x71\165\145\x73\164\137\163\x69\x67\x6e\x65\x64");
        $ax = $I2;
        $iZ = $pO;
        $yk = Utilities::createLogoutRequest($PV, $Cn, $L2, $ax, $f0);
        $Oi = drupal_get_path("\155\x6f\x64\x75\x6c\145", "\155\151\x6e\151\157\x72\x61\156\x67\x65\x5f\x73\141\x6d\154");
        if (empty($f0) || $f0 == "\x48\x74\x74\160\122\145\144\x69\162\x65\x63\164") {
            goto uM;
        }
        if ($hH) {
            goto AW;
        }
        $x4 = base64_encode($yk);
        Utilities::postSAMLRequest($I2, $x4, $iZ);
        die;
        AW:
        $aq = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $Oi . DIRECTORY_SEPARATOR . "\162\x65\163\157\x75\162\x63\145\x73" . DIRECTORY_SEPARATOR . Utilities::getKeyName();
        $YD = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $Oi . DIRECTORY_SEPARATOR . "\162\x65\163\157\x75\162\143\145\x73" . DIRECTORY_SEPARATOR . self::getCertficateName();
        $x4 = Utilities::signXML($yk, $YD, $aq, "\x4e\141\155\145\111\104", $MR);
        Utilities::postSAMLRequest($I2, $x4, $iZ);
        goto mw;
        uM:
        $KI = $I2;
        if (strpos($I2, "\77") !== false) {
            goto pv;
        }
        $KI .= "\77";
        goto YE;
        pv:
        $KI .= "\46";
        YE:
        if ($hH) {
            goto MJ;
        }
        $KI .= "\x53\101\x4d\x4c\122\x65\x71\165\x65\163\x74\75" . $yk . "\x26\x52\145\x6c\x61\171\x53\x74\x61\164\145\75" . urlencode($iZ);
        header("\x4c\x6f\x63\x61\x74\x69\157\156\72\x20" . $KI);
        die;
        MJ:
        if ($MR == "\x52\x53\101\x5f\123\110\101\62\x35\66") {
            goto fZ;
        }
        if ($MR == "\x52\x53\x41\x5f\x53\110\x41\x33\70\x34") {
            goto qG;
        }
        if ($MR == "\122\123\101\x5f\x53\x48\101\x35\x31\62") {
            goto fa;
        }
        if ($MR == "\122\123\x41\137\123\110\101\61") {
            goto Jg;
        }
        goto mJ;
        fZ:
        $yk = "\x53\101\115\114\122\x65\161\x75\x65\163\x74\x3d" . $yk . "\x26\122\145\x6c\x61\171\x53\164\x61\x74\145\x3d" . urlencode($iZ) . "\46\x53\151\x67\101\154\147\75" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto mJ;
        qG:
        $yk = "\123\101\x4d\114\122\x65\x71\x75\x65\x73\x74\75" . $yk . "\46\122\145\154\141\x79\x53\x74\141\164\x65\75" . urlencode($iZ) . "\x26\x53\x69\x67\x41\x6c\x67\75" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto mJ;
        fa:
        $yk = "\123\x41\115\114\122\x65\161\x75\145\x73\x74\75" . $yk . "\x26\x52\145\x6c\x61\x79\x53\x74\x61\x74\x65\x3d" . urlencode($iZ) . "\x26\x53\x69\147\x41\x6c\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto mJ;
        Jg:
        $yk = "\x53\x41\115\114\122\145\161\165\145\x73\164\75" . $yk . "\x26\122\x65\154\x61\171\x53\164\141\164\145\75" . urlencode($iZ) . "\46\123\151\147\101\154\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA1);
        mJ:
        $OT = array("\164\x79\160\145" => "\x70\x72\x69\166\x61\164\145");
        if ($MR == "\x52\x53\101\x5f\x53\x48\x41\x32\x35\66") {
            goto Px;
        }
        if ($MR == "\122\x53\x41\x5f\123\110\x41\63\x38\64") {
            goto jb;
        }
        if ($MR == "\122\123\101\x5f\x53\x48\101\x35\x31\62") {
            goto W5;
        }
        if ($MR == "\122\x53\101\x5f\123\x48\101\x31") {
            goto lZ;
        }
        goto Cu;
        Px:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $OT);
        goto Cu;
        jb:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $OT);
        goto Cu;
        W5:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $OT);
        goto Cu;
        lZ:
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $OT);
        Cu:
        $OK = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $Oi . DIRECTORY_SEPARATOR . "\162\145\163\x6f\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . self::getKeyName();
        $l9->loadKey($OK, FALSE);
        $ZF = new XMLSecurityDSig();
        $J8 = $l9->signData($yk);
        $J8 = base64_encode($J8);
        $KI .= $yk . "\46\x53\151\x67\156\141\x74\165\162\x65\75" . urlencode($J8);
        header("\x4c\x6f\143\141\x74\151\157\156\72\40" . $KI);
        die;
        mw:
        X9:
        J7:
    }
    public static function createLogoutRequest($PV, $Cn = '', $Pz, $ax, $cy = "\x48\x74\164\x70\122\145\144\x69\x72\x65\x63\x74")
    {
        $Zu = "\74\77\170\155\x6c\40\x76\145\162\163\x69\157\x6e\x3d\x22\x31\x2e\60\x22\40\145\156\x63\157\144\x69\156\x67\x3d\x22\125\x54\x46\x2d\x38\42\x3f\x3e" . "\74\163\141\155\154\x70\72\x4c\x6f\x67\x6f\x75\x74\122\x65\161\165\x65\163\164\40\170\155\x6c\x6e\x73\72\x73\x61\155\x6c\x70\x3d\x22\165\x72\156\x3a\x6f\x61\163\x69\163\x3a\156\141\x6d\145\x73\x3a\x74\x63\x3a\x53\101\115\114\x3a\x32\x2e\x30\x3a\160\162\157\164\x6f\x63\157\154\42\40\170\x6d\x6c\x6e\163\x3a\163\x61\x6d\154\x3d\x22\x75\x72\156\x3a\157\141\163\x69\163\72\156\141\x6d\145\x73\72\x74\143\72\123\x41\x4d\x4c\x3a\x32\56\60\72\x61\x73\x73\145\x72\164\x69\x6f\156\x22\x20\106\x6f\x72\x63\x65\101\x75\x74\150\156\75\42\164\162\165\145\x22\40\111\x44\x3d\x22" . self::generateID() . "\42\x20\111\x73\163\x75\145\111\x6e\163\164\x61\x6e\x74\x3d\x22" . self::generateTimestamp() . "\x22\40\x56\x65\x72\x73\x69\x6f\x6e\75\x22\62\56\60\x22\x20\x44\x65\x73\x74\151\x6e\x61\x74\151\x6f\156\x3d\x22" . $ax . "\x22\x3e\12\x9\11\x9\11\x9\x9\x3c\x73\x61\x6d\x6c\x3a\111\163\163\x75\x65\x72\x20\x78\155\154\x6e\x73\72\163\141\x6d\154\x3d\x22\x75\x72\156\x3a\157\x61\163\151\x73\x3a\156\141\x6d\x65\x73\x3a\x74\143\x3a\123\101\115\114\72\62\56\x30\x3a\x61\x73\x73\x65\162\164\151\157\x6e\x22\x3e" . $Pz . "\74\57\163\141\155\x6c\72\111\x73\163\x75\145\x72\76\12\x9\x9\x9\x9\11\x9\74\163\141\x6d\x6c\72\116\141\x6d\145\111\104\40\170\155\x6c\x6e\163\x3a\163\141\x6d\x6c\75\42\165\x72\x6e\x3a\157\x61\x73\151\x73\72\x6e\x61\155\145\163\x3a\x74\x63\72\123\101\x4d\x4c\72\62\x2e\60\x3a\141\x73\163\145\x72\x74\x69\157\x6e\42\76" . $PV . "\74\x2f\163\141\x6d\154\72\116\141\155\145\111\x44\x3e";
        if (empty($Cn)) {
            goto X3;
        }
        $Zu .= "\x3c\x73\141\155\x6c\x70\x3a\x53\x65\x73\163\151\157\156\x49\156\x64\x65\170\76" . $Cn . "\x3c\x2f\x73\141\x6d\154\x70\x3a\x53\145\163\x73\x69\157\x6e\111\x6e\x64\145\x78\x3e";
        X3:
        $Zu .= "\74\57\163\x61\x6d\154\x70\x3a\x4c\x6f\x67\x6f\165\x74\x52\145\161\x75\x65\x73\x74\76";
        if (!(empty($cy) || $cy == "\110\x74\x74\x70\122\x65\144\151\x72\x65\143\x74")) {
            goto PN;
        }
        $CB = gzdeflate($Zu);
        $Ur = base64_encode($CB);
        $sz = urlencode($Ur);
        $Zu = $sz;
        PN:
        return $Zu;
    }
    public static function upload_metadata($Ba, $B_ = false)
    {
        if (empty(variable_get("\x6d\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\x5f\x73\141\155\x6c\x5f\x69\x64\160\x5f\x6e\141\155\x65"))) {
            goto C_;
        }
        variable_set("\155\151\x6e\x69\157\162\141\x6e\147\x65\137\x73\141\155\x6c\137\151\x64\x70\x5f\x6e\x61\x6d\x65", "\x49\144\145\156\164\151\x74\x79\x20\x50\x72\x6f\x76\151\x64\145\162");
        C_:
        global $base_url;
        require_once drupal_get_path("\155\157\x64\x75\x6c\145", "\x6d\151\x6e\151\157\162\141\x6e\x67\145\137\163\x61\155\154") . DIRECTORY_SEPARATOR . "\151\156\143\154\165\x64\x65\x73" . DIRECTORY_SEPARATOR . "\115\x65\x74\x61\x64\x61\164\141\122\x65\x61\x64\145\x72\x2e\160\x68\160";
        $XU = new DOMDocument();
        $XU->loadXML($Ba);
        restore_error_handler();
        $gz = $XU->firstChild;
        if (!empty($gz)) {
            goto YS;
        }
        drupal_set_message(t("\x50\x6c\x65\141\x73\x65\x20\x70\162\x6f\166\151\x64\x65\40\141\x20\x76\x61\x6c\151\x64\x20\155\x65\x74\x61\144\141\x74\x61\40\146\151\154\145\x2e"), "\145\x72\x72\x6f\162");
        return;
        goto Kl;
        YS:
        $iL = new IDPMetadataReader($XU);
        $x6 = $iL->getIdentityProviders();
        if (!empty($x6)) {
            goto EE;
        }
        drupal_set_message(t("\x50\154\x65\141\x73\x65\x20\160\162\x6f\166\151\x64\145\40\141\40\x76\x61\x6c\151\x64\40\155\145\x74\x61\144\x61\164\x61\40\146\151\154\x65\x2e"), "\145\x72\x72\157\162");
        return;
        EE:
        foreach ($x6 as $l9 => $kl) {
            $Ed = $kl->getLoginURL("\110\x54\x54\x50\x2d\122\145\x64\x69\x72\145\x63\x74");
            $I2 = $kl->getLogoutURL("\x48\124\x54\x50\x2d\x52\x65\x64\x69\x72\x65\x63\164");
            if (!empty($Ed)) {
                goto sH;
            }
            $Ed = $kl->getLoginURL("\x48\124\124\120\55\120\117\123\x54");
            sH:
            if (!empty($I2)) {
                goto qo;
            }
            $I2 = $kl->getLogoutURL("\110\x54\124\x50\55\x50\x4f\123\124");
            qo:
            $al = $kl->getEntityID();
            $B1 = $kl->getSigningCertificate();
            $ux = $base_url;
            if (!($B_ == true)) {
                goto vf;
            }
            variable_set("\x6d\x69\156\151\x6f\162\141\156\147\145\x5f\x73\141\155\x6c\137\151\144\160\137\x6c\x6f\x67\151\156\137\x75\162\154", $Ed);
            variable_set("\155\151\156\151\x6f\162\141\156\x67\x65\x5f\x73\141\x6d\x6c\137\151\x64\x70\x5f\x6c\x6f\x67\157\x75\164\137\x75\162\x6c", $I2);
            vf:
            variable_set("\x6d\x69\x6e\x69\x6f\162\x61\156\147\x65\x5f\x73\141\155\154\x5f\151\x64\160\137\x69\x73\x73\x75\145\x72", $al);
            variable_set("\155\x69\156\151\x6f\162\x61\x6e\147\145\137\163\141\x6d\x6c\137\151\x64\160\x5f\x78\x35\x30\x39\137\143\x65\162\x74\151\146\151\x63\x61\x74\145", $B1);
            b5:
        }
        ZE:
        if (!($B_ == true)) {
            goto S5;
        }
        drupal_set_message(t("\x49\144\x65\156\164\151\164\x79\40\x50\x72\157\166\151\144\x65\x72\40\x43\157\x6e\x66\151\x67\165\x72\x61\164\x69\157\x6e\x20\163\x75\x63\143\x65\x73\x73\x66\x75\154\x6c\x79\x20\x73\x61\166\145\x64\56"));
        return;
        S5:
        Kl:
    }
    public static function generateTimestamp($Kz = NULL)
    {
        if (!($Kz === NULL)) {
            goto de;
        }
        $Kz = time();
        de:
        return gmdate("\131\x2d\x6d\55\144\x5c\124\x48\72\151\72\x73\x5c\x5a", $Kz);
    }
    public static function xpQuery(DOMNode $SP, $hO)
    {
        watchdog("\155\151\156\151\157\x72\141\156\147\x65\137\x73\x61\155\154", "\x55\x74\x69\x6c\x69\x74\151\x65\163\40\170\x70\121\165\145\162\x79", array());
        static $g5 = NULL;
        if ($SP instanceof DOMDocument) {
            goto jg;
        }
        $t0 = $SP->ownerDocument;
        goto Z9;
        jg:
        $t0 = $SP;
        Z9:
        if (!($g5 === NULL || !$g5->document->isSameNode($t0))) {
            goto cJ;
        }
        $g5 = new DOMXPath($t0);
        $g5->registerNamespace("\x73\x6f\141\x70\x2d\145\156\166", "\150\164\x74\x70\x3a\57\57\x73\x63\150\145\155\x61\163\56\170\x6d\x6c\163\157\141\160\56\x6f\162\147\57\x73\x6f\x61\x70\x2f\x65\x6e\x76\145\154\x6f\160\x65\57");
        $g5->registerNamespace("\x73\141\x6d\x6c\x5f\160\x72\157\164\157\x63\x6f\154", "\x75\162\156\x3a\157\x61\163\x69\x73\72\156\141\155\x65\163\72\164\143\72\123\101\115\114\72\62\x2e\x30\72\160\162\x6f\164\x6f\143\x6f\x6c");
        $g5->registerNamespace("\x73\x61\x6d\154\137\x61\163\163\x65\162\164\x69\x6f\x6e", "\165\162\x6e\72\x6f\x61\x73\x69\x73\x3a\156\x61\155\145\x73\72\164\143\72\x53\x41\115\114\x3a\62\56\x30\72\x61\x73\163\x65\162\164\x69\157\x6e");
        $g5->registerNamespace("\163\x61\x6d\154\137\x6d\145\164\x61\x64\141\164\141", "\x75\162\x6e\x3a\x6f\x61\x73\x69\x73\x3a\156\x61\155\145\x73\72\x74\x63\72\123\101\x4d\114\x3a\x32\x2e\x30\x3a\155\145\164\141\144\141\164\x61");
        $g5->registerNamespace("\x64\x73", "\150\x74\164\160\72\x2f\x2f\x77\167\x77\x2e\167\63\56\x6f\x72\147\x2f\x32\60\60\x30\57\60\71\x2f\170\x6d\x6c\x64\x73\x69\x67\x23");
        $g5->registerNamespace("\x78\x65\156\143", "\x68\164\164\x70\72\57\57\167\x77\x77\x2e\167\x33\56\157\x72\147\57\62\60\60\x31\x2f\x30\64\x2f\170\155\154\145\x6e\x63\43");
        cJ:
        $ht = $g5->query($hO, $SP);
        $vX = array();
        $n5 = 0;
        Iz:
        if (!($n5 < $ht->length)) {
            goto kX;
        }
        $vX[$n5] = $ht->item($n5);
        pk:
        $n5++;
        goto Iz;
        kX:
        return $vX;
    }
    public static function parseNameId(DOMElement $L_)
    {
        $vX = array("\126\x61\154\165\x65" => trim($L_->textContent));
        foreach (array("\116\x61\155\145\121\x75\141\154\x69\146\x69\145\162", "\x53\120\116\141\155\145\121\165\x61\x6c\151\146\x69\x65\x72", "\x46\157\162\155\x61\x74") as $h9) {
            if (!$L_->hasAttribute($h9)) {
                goto x2;
            }
            $vX[$h9] = $L_->getAttribute($h9);
            x2:
            Ph:
        }
        ty:
        return $vX;
    }
    public static function xsDateTimeToTimestamp($vh)
    {
        $s0 = array();
        $mf = "\x2f\x5e\x28\x5c\x64\134\144\x5c\x64\x5c\144\51\55\50\134\144\x5c\144\51\x2d\50\134\144\134\x64\x29\124\50\134\144\134\144\51\x3a\x28\134\x64\x5c\x64\51\x3a\50\x5c\x64\x5c\144\x29\x28\77\72\134\x2e\134\x64\x2b\x29\77\x5a\44\x2f\x44";
        if (!(preg_match($mf, $vh, $s0) == 0)) {
            goto xh;
        }
        echo sprintf("\156\166\141\154\151\x64\40\123\101\115\x4c\62\x20\x74\151\x6d\x65\163\x74\x61\x6d\160\x20\x70\x61\163\163\x65\x64\x20\x74\x6f\40\x78\x73\104\141\x74\145\124\151\x6d\145\x54\157\124\151\x6d\145\x73\x74\x61\x6d\x70\72\40" . $vh);
        die;
        xh:
        $xk = intval($s0[1]);
        $C6 = intval($s0[2]);
        $Cf = intval($s0[3]);
        $xT = intval($s0[4]);
        $Mu = intval($s0[5]);
        $Ib = intval($s0[6]);
        $Tu = gmmktime($xT, $Mu, $Ib, $C6, $Cf, $xk);
        return $Tu;
    }
    public static function extractStrings(DOMElement $Qq, $BH, $tm)
    {
        $vX = array();
        $SP = $Qq->firstChild;
        FQ:
        if (!($SP !== NULL)) {
            goto SE;
        }
        if (!($SP->namespaceURI !== $BH || $SP->localName !== $tm)) {
            goto lU;
        }
        goto hU;
        lU:
        $vX[] = trim($SP->textContent);
        hU:
        $SP = $SP->nextSibling;
        goto FQ;
        SE:
        return $vX;
    }
    public static function validateElement(DOMElement $V1)
    {
        $ZG = new XMLSecurityDSig();
        $ZG->idKeys[] = "\x49\x44";
        $Q0 = self::xpQuery($V1, "\56\57\144\x73\x3a\x53\151\x67\156\x61\x74\x75\x72\x65");
        if (count($Q0) === 0) {
            goto eI;
        }
        if (count($Q0) > 1) {
            goto BU;
        }
        goto ap;
        eI:
        return FALSE;
        goto ap;
        BU:
        echo sprintf("\130\x4d\114\x53\145\x63\72\x20\155\157\x72\145\40\164\x68\141\x6e\40\x6f\156\x65\x20\163\151\147\156\141\x74\165\162\x65\x20\x65\x6c\x65\155\x65\x6e\164\x20\x69\156\40\162\157\x6f\164\56");
        die;
        ap:
        $Q0 = $Q0[0];
        $ZG->sigNode = $Q0;
        $ZG->canonicalizeSignedInfo();
        if ($ZG->validateReference()) {
            goto SW;
        }
        echo sprintf("\130\115\114\x73\145\143\72\x20\x64\151\x67\x65\163\164\40\x76\141\154\x69\x64\141\x74\x69\157\x6e\40\146\141\x69\x6c\x65\144");
        die;
        SW:
        $H8 = FALSE;
        foreach ($ZG->getValidatedNodes() as $GK) {
            if ($GK->isSameNode($V1)) {
                goto t4;
            }
            if ($V1->parentNode instanceof DOMDocument && $GK->isSameNode($V1->ownerDocument)) {
                goto ff;
            }
            goto DI;
            t4:
            $H8 = TRUE;
            goto Ve;
            goto DI;
            ff:
            $H8 = TRUE;
            goto Ve;
            DI:
            WE:
        }
        Ve:
        if ($H8) {
            goto KJ;
        }
        echo sprintf("\130\x4d\114\x53\x65\143\x3a\x20\x54\x68\145\x20\162\157\157\x74\x20\x65\154\x65\x6d\x65\x6e\164\x20\151\163\40\x6e\x6f\164\x20\x73\x69\x67\156\145\x64\56");
        die;
        KJ:
        $Un = array();
        foreach (self::xpQuery($Q0, "\x2e\x2f\x64\x73\x3a\113\145\171\x49\156\x66\157\x2f\144\x73\x3a\130\65\x30\71\104\x61\164\x61\x2f\x64\163\72\x58\x35\x30\x39\103\x65\x72\164\x69\x66\x69\x63\x61\x74\145") as $Ot) {
            $hl = trim($Ot->textContent);
            $hl = str_replace(array("\15", "\xa", "\11", "\x20"), '', $hl);
            $Un[] = $hl;
            iz:
        }
        Pq:
        $vX = array("\123\151\147\156\141\x74\165\x72\x65" => $ZG, "\103\145\x72\164\151\x66\151\x63\x61\164\x65\x73" => $Un);
        return $vX;
    }
    public static function validateSignature(array $hn, XMLSecurityKey $l9)
    {
        watchdog("\155\x69\x6e\x69\x6f\162\x61\x6e\x67\145\137\x73\x61\x6d\154", "\x55\164\151\154\x69\164\x69\x65\163\40\166\x61\x6c\x69\x64\141\164\145\x53\151\147\x6e\x61\x74\165\162\x65", array());
        $ZG = $hn["\x53\151\147\x6e\141\x74\x75\x72\x65"];
        $Iy = self::xpQuery($ZG->sigNode, "\x2e\x2f\x64\x73\72\x53\x69\147\x6e\145\x64\111\156\146\x6f\x2f\144\163\72\123\x69\147\156\141\164\165\162\145\x4d\x65\164\x68\x6f\x64");
        if (!empty($Iy)) {
            goto Al;
        }
        watchdog("\155\x69\x6e\151\157\x72\x61\x6e\x67\x65\x5f\x73\x61\x6d\x6c", "\125\x74\151\154\x69\164\x69\x65\163\40\166\x61\x6c\151\144\141\164\145\123\x69\x67\156\141\x74\x75\162\x65\x20\151\146\x20\145\155\160\x74\x79\50\44\163\151\x67\x4d\x65\x74\x68\157\144\x29", array());
        echo sprintf("\x4d\151\x73\163\x69\x6e\147\x20\123\x69\x67\156\x61\164\165\x72\145\x4d\145\164\150\x6f\144\x20\x65\x6c\x65\155\x65\x6e\164");
        die;
        Al:
        $Iy = $Iy[0];
        if ($Iy->hasAttribute("\101\154\x67\157\x72\151\164\x68\x6d")) {
            goto fc;
        }
        watchdog("\155\x69\156\151\x6f\162\x61\156\147\145\x5f\x73\x61\x6d\154", "\125\164\151\x6c\151\x74\151\145\x73\40\166\x61\x6c\151\x64\141\x74\145\x53\151\147\156\141\164\x75\x72\145\x20\x69\146\x20\41\x24\x73\x69\x67\x4d\x65\164\x68\x6f\x64\55\76\150\141\163\x41\x74\x74\162\x69\x62\165\164\x65\50\42\x41\154\x67\157\162\x69\164\x68\x6d\42\51", array());
        echo sprintf("\x4d\151\x73\163\x69\x6e\147\x20\x41\x6c\147\x6f\x72\x69\x74\150\155\x2d\141\x74\x74\x72\151\142\x75\164\145\40\x6f\x6e\40\x53\x69\x67\156\x61\x74\165\x72\145\115\145\x74\x68\x6f\x64\40\x65\154\145\x6d\x65\x6e\164\56");
        die;
        fc:
        $vy = $Iy->getAttribute("\101\x6c\147\157\162\x69\164\x68\x6d");
        if (!($l9->type === XMLSecurityKey::RSA_SHA1 && $vy !== $l9->type)) {
            goto kq;
        }
        watchdog("\x6d\x69\x6e\151\x6f\162\141\156\x67\x65\x5f\x73\141\155\154", "\x55\x74\151\154\x69\164\x69\145\x73\40\166\141\x6c\151\144\x61\164\145\x53\x69\x67\156\141\x74\165\x72\x65\40\x69\146\x20\44\x6b\145\x79\55\x3e\x74\171\160\145\x20\x3d\75\x3d\x20\130\x4d\114\x53\x65\143\165\162\151\164\171\113\x65\171\72\x3a\x52\x53\101\x5f\123\x48\x41\61\x20\x26\x26\x20\x24\141\x6c\147\157\40\41\x3d\75\40\x24\153\x65\171\x2d\x3e\x74\171\x70\x65", array());
        $l9 = self::castKey($l9, $vy);
        kq:
        if ($ZG->verify($l9)) {
            goto BE;
        }
        watchdog("\x6d\151\156\151\157\x72\x61\156\x67\x65\137\163\x61\155\154", "\125\164\151\x6c\x69\164\151\x65\163\x20\x76\141\x6c\151\x64\x61\164\x65\x53\x69\147\x6e\x61\164\x75\x72\145\40\x69\x66\40\x21\44\157\x62\x6a\x58\115\114\x53\x65\143\104\x53\x69\x67\x2d\76\x76\x65\x72\x69\146\171\x28\44\x6b\145\171\x29", array());
        echo sprintf("\125\156\x61\x62\154\145\40\x74\x6f\x20\166\141\154\151\x64\141\x74\145\x20\x53\147\x6e\x61\x74\165\x72\x65");
        die;
        BE:
    }
    public static function castKey(XMLSecurityKey $l9, $TT, $dE = "\160\x75\x62\154\x69\143")
    {
        if (!($l9->type === $TT)) {
            goto Cq;
        }
        return $l9;
        Cq:
        $J3 = openssl_pkey_get_details($l9->key);
        if (!($J3 === FALSE)) {
            goto vG;
        }
        echo sprintf("\x55\x6e\x61\142\154\145\40\x74\157\40\x67\x65\164\40\x6b\x65\x79\40\x64\145\x74\x61\151\154\163\x20\x66\x72\x6f\155\40\x58\x4d\x4c\x53\x65\143\x75\x72\x69\x74\x79\x4b\145\x79\x2e");
        die;
        vG:
        if (isset($J3["\x6b\145\x79"])) {
            goto Gm;
        }
        echo sprintf("\115\151\163\x73\151\156\147\x20\x6b\145\x79\40\x69\x6e\40\160\x75\142\154\x69\143\40\x6b\x65\171\x20\x64\x65\x74\x61\151\x6c\x73\56");
        die;
        Gm:
        $Qp = new XMLSecurityKey($TT, array("\x74\171\160\145" => $dE));
        $Qp->loadKey($J3["\x6b\x65\x79"]);
        return $Qp;
    }
    public static function processResponse($MF, $kJ, $Er, SAML2_Response $sE, $ZB)
    {
        watchdog("\155\151\156\x69\x6f\x72\141\156\x67\145\137\x73\141\x6d\x6c", "\x55\164\x69\154\x69\x74\151\145\163\x20\160\162\157\x63\x65\163\163\x52\145\163\x70\x6f\x6e\163\x65", array());
        $i7 = $sE->getDestination();
        if (!($i7 !== NULL && $i7 !== $MF)) {
            goto Qj;
        }
        watchdog("\155\x69\156\151\x6f\x72\141\x6e\147\145\137\x73\x61\x6d\154", "\125\164\x69\x6c\x69\x74\x69\x65\163\x20\160\x72\157\x63\x65\x73\163\x52\145\163\160\x6f\x6e\163\145\40\151\x66\40\x24\155\x73\147\104\145\x73\x74\151\x6e\141\164\151\157\156\x20\41\75\x3d\40\x4e\125\x4c\114\40\46\x26\40\x24\x6d\x73\x67\104\145\x73\164\x69\156\141\x74\151\157\x6e\40\x21\75\75\40\x24\143\x75\x72\x72\x65\156\x74\125\x52\x4c", array());
        echo sprintf("\x44\145\163\164\151\x6e\141\x74\151\157\156\40\151\x6e\x20\x72\145\163\x70\x6f\x6e\x73\145\40\144\x6f\x65\x73\156\x27\164\40\155\141\x74\143\150\40\x74\x68\145\x20\143\165\x72\162\145\156\164\40\x55\x52\114\x2e\x20\104\x65\x73\x74\x69\156\141\x74\151\x6f\156\40\151\x73\x20\x22" . $i7 . "\x22\54\40\x63\165\x72\x72\145\156\x74\x20\125\122\114\40\151\x73\40\x22" . $MF . "\x22\56");
        die;
        Qj:
        $oN = self::checkSign($kJ, $Er, $ZB);
        return $oN;
    }
    public static function checkSign($kJ, $Er, $ZB)
    {
        watchdog("\155\151\x6e\151\x6f\162\141\x6e\x67\145\x5f\163\141\x6d\x6c", "\x55\x74\151\x6c\x69\164\x69\x65\163\x20\143\x68\x65\x63\153\123\151\x67\x6e", array());
        $Un = $Er["\103\x65\x72\164\x69\x66\x69\x63\x61\x74\145\x73"];
        watchdog("\155\x69\156\151\x6f\x72\x61\x6e\x67\x65\137\163\141\155\154", "\x55\164\151\x6c\x69\x74\x69\145\x73\40\143\x68\x65\143\153\x53\151\147\156\x20\143\x65\x72\x74\151\146\151\x63\141\164\145\163\x28\x24\x73\151\x67\x6e\x61\164\165\x72\145\104\x61\x74\141\133\42\x43\x65\162\164\x69\x66\151\143\141\164\x65\163\42\135\x29\72\x20\74\x70\162\145\76\x40\x63\145\162\164\x69\146\x69\143\141\x74\145\163\74\57\x70\x72\x65\76", array("\x40\143\x65\162\x74\x69\x66\151\x63\141\164\x65\x73" => print_r($Un, TRUE)), WATCHDOG_INFO);
        if (!(count($Un) === 0)) {
            goto Tu;
        }
        watchdog("\x6d\x69\x6e\151\157\162\141\x6e\x67\145\137\x73\x61\155\154", "\x55\164\x69\154\x69\164\151\145\x73\x20\x63\150\145\143\153\x53\x69\x67\x6e\x20\151\x66\40\143\157\x75\156\x74\50\x24\143\x65\162\x74\151\x66\151\x63\x61\x74\145\x73\x29\40\75\75\75\x20\x30", array());
        return FALSE;
        Tu:
        $k5 = self::findCertificate($kJ, $Un, $ZB);
        $Q9 = NULL;
        $l9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\x74\x79\160\x65" => "\x70\x75\142\154\151\x63"));
        $l9->loadKey($k5);
        try {
            self::validateSignature($Er, $l9);
            return TRUE;
        } catch (Exception $pE) {
            $Q9 = $pE;
        }
        if ($Q9 !== NULL) {
            goto oQ;
        }
        watchdog("\155\x69\156\x69\x6f\x72\141\156\x67\145\137\x73\141\155\x6c", "\x55\164\151\x6c\151\164\151\x65\x73\x20\x63\150\145\143\x6b\123\x69\147\x6e\x20\x65\x6c\163\x65\x20\157\x66\40\x69\x66\40\x24\154\x61\x73\164\105\x78\x63\x65\160\164\x69\157\x6e\40\x21\75\x3d\40\116\125\114\114", array());
        return FALSE;
        goto Gg;
        oQ:
        watchdog("\155\x69\156\151\x6f\162\141\156\x67\145\137\163\x61\155\x6c", "\125\x74\151\154\x69\x74\x69\x65\x73\40\143\150\x65\143\x6b\123\151\147\x6e\40\x69\146\40\x24\154\141\163\x74\x45\170\143\145\160\x74\151\x6f\156\40\41\x3d\x3d\x20\116\x55\114\114", array());
        throw $Q9;
        Gg:
    }
    private static function findCertificate(array $Wv, array $Un, $ZB)
    {
        watchdog("\x6d\x69\x6e\x69\157\x72\141\156\x67\x65\x5f\x73\x61\155\x6c", "\125\164\x69\154\151\164\151\145\x73\40\146\x69\156\x64\103\145\162\x74\151\146\151\x63\141\x74\145", array());
        $Zs = $Un[0];
        $Zs = chunk_split($Zs, 80);
        foreach ($Un as $XE) {
            $FY = strtolower(sha1(base64_decode($XE)));
            if (!in_array($FY, $Wv, TRUE)) {
                goto oY;
            }
            $JM = "\55\55\x2d\x2d\55\x42\105\x47\x49\x4e\x20\x43\x45\x52\124\x49\106\111\103\101\124\x45\55\55\55\x2d\x2d\12" . chunk_split($XE, 64) . "\55\55\x2d\55\x2d\105\116\x44\40\103\x45\122\124\111\106\x49\x43\x41\x54\x45\55\55\x2d\55\55\xa";
            return $JM;
            oY:
            PV:
        }
        Yw:
        if ($ZB == "\164\x65\x73\x74\x56\141\154\x69\x64\x61\x74\x65") {
            goto rW;
        }
        watchdog("\x6d\151\x6e\151\157\162\x61\156\147\145\137\x73\141\155\x6c", "\125\x74\151\x6c\151\x74\151\145\x73\40\146\151\156\x64\x43\x65\162\x74\151\146\x69\143\x61\x74\145\40\145\154\163\x65\40\x6f\146\x20\x69\x66\40\44\162\x65\154\141\171\x53\x74\141\164\145\x20\x3d\x3d\40\x22\x74\x65\163\164\x56\141\x6c\x69\144\141\164\145\x22", array());
        echo "\x20\74\144\151\166\40\x73\x74\x79\x6c\x65\x3d\42\143\157\x6c\157\162\72\x20\x23\x61\71\64\64\x34\62\73\146\157\x6e\164\x2d\163\151\172\x65\x3a\61\x34\160\164\73\x20\x6d\141\x72\147\x69\156\x2d\x62\x6f\x74\x74\x6f\155\72\x32\60\x70\170\73\42\x3e\x3c\x70\x3e\x3c\x73\164\x72\157\156\x67\x3e\105\162\x72\157\x72\72\x20\x3c\57\x73\x74\x72\x6f\156\x67\76\x57\x65\40\x63\157\x75\154\x64\40\x6e\157\164\40\x73\x69\147\156\x20\171\157\x75\x20\x69\x6e\x2e\x20\120\x6c\x65\141\163\x65\x20\143\x6f\x6e\164\141\143\x74\x20\171\157\x75\162\x20\x41\x64\155\x69\156\x69\163\x74\x72\141\164\157\162\56\x3c\57\x70\76\x3c\57\x64\x69\166\x3e";
        die;
        goto Oy;
        rW:
        watchdog("\x6d\x69\x6e\x69\x6f\x72\x61\x6e\x67\x65\137\x73\x61\155\x6c", "\x55\x74\151\x6c\151\x74\151\145\x73\x20\x66\x69\156\144\x43\145\162\x74\x69\146\151\x63\x61\x74\x65\x20\x69\146\40\x24\x72\x65\154\x61\171\123\x74\141\x74\x65\x20\x3d\75\40\42\x74\145\x73\x74\x56\141\x6c\151\x64\141\164\x65\x22", array());
        echo "\74\144\151\x76\40\163\164\x79\x6c\x65\x3d\x22\x66\157\156\164\55\x66\141\155\x69\x6c\x79\72\103\x61\154\x69\142\162\x69\73\160\x61\144\x64\x69\156\147\72\60\40\63\45\73\x22\76";
        echo "\74\144\151\166\x20\x73\164\171\x6c\x65\75\x22\x63\157\x6c\157\162\x3a\40\x23\141\x39\x34\x34\x34\x32\73\x62\x61\143\x6b\147\162\157\x75\x6e\x64\x2d\143\x6f\154\157\162\72\40\43\146\x32\x64\145\x64\x65\73\x70\x61\144\144\151\156\x67\72\x20\61\x35\x70\x78\73\x6d\x61\x72\147\151\x6e\55\142\157\164\x74\157\155\x3a\x20\x32\x30\160\x78\x3b\164\145\170\x74\55\141\x6c\x69\147\156\72\x63\x65\156\x74\x65\162\73\142\x6f\162\144\145\x72\x3a\61\160\170\x20\163\157\154\151\x64\x20\x23\x45\66\102\63\x42\x32\73\146\157\x6e\x74\x2d\163\x69\x7a\145\72\x31\x38\160\x74\73\x22\x3e\40\x45\122\122\117\x52\x3c\x2f\x64\x69\x76\x3e\12\x20\x20\x20\x20\40\x20\40\x20\40\x20\x20\40\x3c\144\x69\x76\40\163\164\x79\154\x65\75\x22\143\x6f\154\x6f\162\x3a\40\43\x61\x39\x34\x34\x34\62\73\x66\157\156\164\55\163\x69\x7a\145\x3a\x31\64\160\x74\73\x20\x6d\141\x72\147\151\x6e\x2d\142\157\164\164\x6f\155\x3a\62\x30\160\170\x3b\42\76\74\160\x3e\x3c\x73\164\x72\x6f\156\147\x3e\x45\162\x72\157\x72\72\x20\74\57\163\164\162\157\156\147\x3e\x55\x6e\x61\142\154\145\40\164\x6f\40\x66\151\x6e\x64\x20\x61\x20\143\x65\162\164\151\146\x69\x63\x61\x74\145\40\155\x61\x74\x63\150\151\156\147\40\x74\x68\145\x20\143\157\156\x66\151\147\165\162\145\144\x20\x66\151\156\147\x65\x72\x70\162\x69\x6e\164\x2e\x3c\57\x70\76\12\40\40\x20\x20\40\40\40\x20\40\x20\x20\40\x3c\x70\x3e\x3c\x73\164\x72\157\156\147\x3e\x50\157\163\x73\x69\142\x6c\x65\x20\x43\141\x75\163\145\x3a\40\74\x2f\x73\164\x72\x6f\156\147\76\103\x6f\156\x74\x65\156\x74\40\x6f\x66\40\x27\130\x2e\x35\x30\71\x20\103\145\162\x74\x69\146\151\x63\x61\164\x65\47\x20\146\151\x65\154\144\40\x69\x6e\40\x53\x65\162\166\x69\x63\x65\x20\x50\x72\157\166\x69\x64\145\x72\40\123\145\164\164\151\x6e\147\163\40\151\x73\x20\151\x6e\x63\157\162\162\x65\x63\164\x3c\x2f\x70\x3e\12\x9\x9\x9\x3c\x70\76\x3c\142\76\x45\170\x70\145\x63\164\x65\x64\40\x76\x61\154\165\145\x3a\x20\x3c\57\x62\x3e" . $Zs . "\74\x2f\x70\76";
        echo str_repeat("\46\156\142\x73\x70\73", 15);
        echo "\74\57\x64\151\x76\x3e\12\x20\x20\40\x20\40\40\x20\x20\x20\x20\x20\40\40\x20\40\40\74\x64\151\166\40\x73\x74\x79\x6c\x65\x3d\42\x6d\x61\162\147\x69\x6e\x3a\x33\x25\73\144\x69\x73\160\154\x61\x79\72\142\154\157\143\153\73\x74\x65\x78\x74\55\141\x6c\x69\x67\x6e\72\x63\x65\x6e\x74\x65\162\73\x22\76\12\x20\x20\40\x20\40\x20\x20\40\x20\40\40\x20\40\x20\x20\x20\74\x66\x6f\162\155\x20\141\143\x74\x69\157\156\x3d\42\151\156\x64\x65\x78\56\x70\x68\160\42\76\xa\x20\x20\40\x20\40\x20\40\40\40\40\40\x20\40\x20\x20\x20\x3c\144\x69\166\x20\x73\164\171\154\145\75\x22\155\x61\162\147\151\156\x3a\63\x25\x3b\144\151\x73\x70\x6c\141\x79\x3a\142\x6c\x6f\143\x6b\x3b\x74\x65\170\x74\x2d\141\x6c\151\147\156\72\x63\x65\x6e\164\x65\x72\73\x22\x3e\74\151\x6e\160\x75\164\40\163\164\171\154\x65\75\42\x70\141\144\x64\151\x6e\147\72\x31\45\73\167\151\144\164\x68\72\61\60\x30\160\x78\x3b\x62\x61\x63\153\147\162\157\x75\x6e\x64\72\40\x23\60\x30\71\61\103\x44\x20\156\157\156\145\40\x72\x65\160\x65\141\x74\x20\x73\x63\162\157\x6c\154\40\60\45\40\x30\x25\x3b\143\x75\x72\163\x6f\162\72\x20\x70\x6f\151\x6e\164\x65\x72\73\x66\157\x6e\164\55\x73\151\x7a\x65\72\61\65\x70\x78\x3b\x62\157\162\144\145\x72\55\167\x69\x64\164\x68\x3a\x20\61\160\170\73\x62\157\x72\144\x65\162\x2d\163\164\x79\154\145\72\x20\163\x6f\x6c\x69\x64\x3b\x62\157\162\144\145\162\55\162\141\x64\x69\165\x73\x3a\40\63\x70\170\73\167\150\151\x74\x65\55\163\x70\x61\x63\x65\x3a\x20\156\157\x77\x72\141\x70\73\142\157\x78\55\163\151\x7a\x69\156\x67\x3a\40\x62\x6f\162\x64\x65\x72\x2d\x62\x6f\x78\x3b\142\x6f\162\144\x65\x72\x2d\x63\157\154\157\x72\x3a\x20\43\60\x30\x37\63\x41\101\73\142\x6f\170\x2d\x73\x68\141\144\157\x77\x3a\x20\60\x70\x78\40\x31\x70\170\x20\60\160\x78\x20\162\147\142\x61\50\61\x32\x30\x2c\x20\x32\60\60\54\40\62\63\x30\x2c\x20\60\x2e\x36\x29\x20\x69\156\x73\145\164\x3b\143\x6f\x6c\157\162\72\40\43\x46\x46\x46\x3b\x22\x74\171\x70\x65\x3d\x22\x62\165\164\164\x6f\x6e\x22\40\x76\x61\x6c\x75\145\x3d\42\104\157\x6e\x65\x22\x20\157\x6e\x43\154\x69\143\x6b\75\x22\x73\145\x6c\x66\56\x63\x6c\x6f\163\145\x28\51\x3b\x22\76\74\x2f\144\x69\166\76";
        die;
        Oy:
    }
    public static function validateIssuerAndAudience($nm, $Wq, $G6, $base_url, $ZB)
    {
        watchdog("\155\x69\x6e\x69\157\x72\141\x6e\147\145\137\163\141\155\154", "\x55\x74\151\x6c\x69\x74\x69\145\x73\x20\x76\x61\154\x69\144\x61\164\145\x49\x73\x73\x75\145\x72\x41\x6e\x64\101\165\x64\151\145\156\x63\x65", array());
        $Pz = current($nm->getAssertions())->getIssuer();
        $aY = current(current($nm->getAssertions())->getValidAudiences());
        if (strcmp($G6, $Pz) === 0) {
            goto FW;
        }
        watchdog("\x6d\x69\156\151\157\162\x61\x6e\x67\x65\137\x73\x61\x6d\154", "\125\x74\151\154\x69\164\151\x65\x73\40\x76\x61\154\151\144\141\164\145\111\x73\163\165\x65\x72\x41\156\x64\101\165\144\151\x65\x6e\x63\x65\x20\145\x6c\x73\x65\x20\x6f\x66\x20\x69\146\x20\163\x74\162\143\155\x70\50\44\151\163\163\x75\145\x72\x54\x6f\x56\x61\x6c\151\x64\141\164\145\101\147\x61\x69\x6e\163\x74\54\40\x24\x69\x73\163\165\x65\x72\x29\75\x3d\75\x30", array());
        if ($ZB == "\164\x65\163\164\x56\141\x6c\x69\x64\141\x74\x65") {
            goto s5;
        }
        watchdog("\x6d\151\x6e\x69\x6f\162\x61\156\x67\x65\x5f\x73\141\155\x6c", "\125\x74\151\x6c\151\x74\x69\x65\163\x20\166\x61\154\151\144\141\x74\x65\111\163\163\x75\x65\x72\101\x6e\x64\101\x75\144\x69\x65\x6e\x63\145\x20\145\154\x73\145\40\x6f\146\x20\x69\x66\x20\162\x65\x6c\141\171\123\x74\x61\164\x65\x20\x3d\x3d\40\42\x74\145\163\164\126\141\x6c\151\x64\141\164\x65\42", array());
        echo "\40\74\x64\151\166\40\x73\x74\x79\x6c\x65\x3d\42\143\x6f\x6c\x6f\x72\72\40\43\141\x39\64\x34\64\62\x3b\x66\x6f\156\x74\x2d\163\x69\x7a\x65\72\x31\x34\160\x74\x3b\x20\x6d\141\162\x67\x69\x6e\x2d\x62\157\164\164\157\x6d\72\62\x30\x70\170\x3b\42\76\x3c\160\76\x3c\x73\x74\x72\157\x6e\x67\x3e\x45\x72\162\x6f\162\72\x20\x3c\x2f\163\164\162\157\156\147\76\127\145\x20\143\157\x75\x6c\144\40\156\157\x74\40\163\151\x67\x6e\x20\171\x6f\x75\x20\151\x6e\x2e\x20\x50\x6c\x65\141\163\145\40\x63\157\x6e\x74\x61\143\x74\x20\x79\x6f\165\x72\x20\101\144\155\151\156\x69\163\164\162\x61\164\x6f\x72\x2e\74\57\160\x3e\74\x2f\144\151\166\x3e\xa\x20\x20\40\x20\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\40\40\40\74\x64\x69\166\40\163\164\171\154\145\x3d\42\155\141\x72\147\x69\x6e\x3a\x33\45\x3b\144\151\x73\160\x6c\141\x79\72\142\x6c\x6f\143\153\x3b\164\x65\170\x74\x2d\x61\154\151\147\156\72\x63\x65\x6e\x74\145\162\73\x22\x3e";
        die;
        goto qk;
        s5:
        watchdog("\155\x69\156\x69\157\x72\141\x6e\147\145\x5f\163\141\x6d\154", "\x55\x74\151\154\x69\x74\x69\x65\163\x20\x76\x61\x6c\x69\144\x61\x74\x65\111\163\163\x75\x65\162\101\x6e\144\x41\x75\x64\x69\145\156\143\x65\40\162\x65\154\141\x79\123\x74\141\164\145\x20\x3d\x3d\40\x22\x74\x65\x73\x74\126\x61\154\x69\144\x61\x74\x65\42", array());
        ob_end_clean();
        echo "\74\144\x69\x76\x20\x73\x74\x79\154\x65\75\x22\x66\157\156\164\x2d\146\141\155\151\x6c\171\x3a\103\141\x6c\151\x62\x72\x69\73\x70\141\x64\x64\151\156\147\72\x30\40\x33\x25\x3b\x22\x3e";
        echo "\x3c\x64\x69\x76\x20\x73\164\x79\x6c\x65\x3d\42\x63\x6f\154\157\x72\x3a\40\x23\141\x39\64\64\64\62\73\x62\x61\x63\153\x67\x72\157\x75\156\x64\x2d\x63\x6f\x6c\x6f\162\x3a\x20\x23\146\62\x64\145\x64\145\73\160\x61\144\144\151\x6e\147\x3a\40\61\x35\x70\170\x3b\x6d\x61\162\147\x69\156\x2d\x62\x6f\164\x74\x6f\155\x3a\40\x32\x30\x70\170\73\164\x65\x78\164\55\x61\x6c\151\147\156\x3a\x63\145\x6e\164\x65\x72\x3b\142\x6f\x72\x64\145\x72\x3a\61\x70\x78\40\x73\x6f\x6c\151\x64\40\x23\105\x36\x42\63\102\62\x3b\x66\x6f\156\164\x2d\163\151\172\145\72\x31\x38\160\164\73\42\x3e\x20\x45\x52\122\117\122\74\x2f\144\x69\166\76\12\40\x20\x20\x20\x20\40\x20\40\x20\x20\x20\40\x20\40\40\x20\74\x64\151\166\40\x73\164\x79\154\145\x3d\42\143\x6f\x6c\157\x72\x3a\x20\43\141\x39\x34\64\64\62\x3b\x66\x6f\x6e\164\55\163\x69\x7a\145\x3a\x31\x34\x70\x74\x3b\40\155\x61\x72\147\151\156\55\142\157\164\x74\x6f\x6d\x3a\x32\x30\160\170\73\42\76\74\160\x3e\x3c\x73\164\162\157\x6e\x67\x3e\105\162\x72\x6f\x72\72\x20\x3c\x2f\x73\164\162\x6f\x6e\x67\x3e\x49\x73\163\x75\x65\x72\40\143\x61\156\x6e\x6f\164\x20\142\x65\x20\166\x65\x72\151\x66\151\145\144\x2e\74\57\x70\x3e\12\x20\x20\40\x20\40\x20\x20\40\x20\x20\x20\40\40\40\x20\x20\74\160\76\120\154\145\x61\163\145\40\143\157\x6e\x74\141\x63\164\x20\x79\157\165\x72\40\x61\x64\155\151\156\151\163\164\162\x61\164\157\162\40\141\x6e\144\40\x72\x65\160\157\162\x74\x20\x74\150\145\40\x66\157\154\154\157\167\x69\156\147\40\145\162\162\157\x72\72\74\x2f\x70\x3e\12\x20\x20\x20\40\40\x20\40\40\x20\40\x20\40\x20\40\40\40\74\160\x3e\74\163\164\162\x6f\156\x67\x3e\120\x6f\163\x73\x69\142\x6c\x65\x20\103\x61\x75\163\145\72\40\74\x2f\163\x74\162\x6f\x6e\147\x3e\124\x68\x65\40\x76\x61\154\165\145\x20\151\156\x20\x27\111\144\x50\40\x45\156\164\x69\164\x79\40\x49\104\40\157\x72\40\x49\x73\x73\x75\x65\162\x27\x20\x66\151\145\x6c\144\x20\x69\156\40\123\x65\162\x76\x69\x63\145\x20\120\x72\x6f\x76\x69\144\x65\x72\40\123\145\164\164\151\156\147\163\x20\151\x73\x20\x69\x6e\143\157\x72\162\x65\143\164\x3c\x2f\160\76\12\40\40\x20\x20\x20\40\40\40\40\40\40\40\x20\x20\40\40\x3c\160\76\x3c\163\164\162\157\x6e\147\x3e\x45\x78\160\145\143\164\145\x64\x20\x45\x6e\164\x69\164\171\40\111\104\72\40\x3c\x2f\163\164\162\x6f\156\x67\76" . $Pz . "\x3c\160\x3e\xa\x20\40\x20\40\40\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\74\x70\x3e\74\163\x74\x72\157\x6e\x67\x3e\105\156\x74\x69\164\x79\x20\111\104\40\106\x6f\x75\x6e\x64\72\40\x3c\x2f\x73\x74\162\x6f\156\x67\76" . $G6 . "\74\57\160\x3e\xa\40\x20\40\x20\x20\40\x20\x20\x20\x20\x20\x20\40\40\x20\x20\74\x2f\144\151\x76\76\12\x20\40\x20\x20\40\x20\x20\40\40\x20\40\40\x20\x20\x20\40\74\x64\151\x76\x20\x73\x74\171\x6c\x65\75\42\155\x61\x72\147\x69\156\72\63\x25\x3b\144\151\x73\160\x6c\141\171\x3a\142\x6c\x6f\143\153\x3b\x74\145\x78\x74\x2d\x61\x6c\x69\147\156\x3a\143\x65\156\x74\x65\x72\73\42\76\xa\x20\40\x20\40\40\x20\40\x20\40\x20\40\x20\40\x20\x20\40\74\144\151\x76\40\163\164\x79\154\x65\x3d\x22\155\141\162\x67\151\x6e\72\63\x25\73\x64\151\x73\160\154\141\171\x3a\x62\x6c\157\143\153\x3b\x74\x65\170\164\x2d\141\154\x69\x67\x6e\x3a\143\145\x6e\x74\x65\x72\x3b\x22\76\74\151\x6e\160\165\x74\40\x73\164\x79\x6c\x65\75\42\160\x61\x64\x64\151\156\x67\x3a\61\45\x3b\167\151\144\x74\x68\72\x31\x30\60\160\x78\x3b\142\x61\143\153\147\x72\157\165\x6e\144\72\x20\x23\x30\x30\71\61\x43\104\x20\156\x6f\156\x65\40\x72\x65\160\145\x61\164\x20\163\x63\x72\157\x6c\154\40\60\x25\x20\60\x25\73\143\x75\162\163\157\x72\x3a\x20\160\x6f\151\x6e\x74\145\162\73\146\x6f\x6e\x74\x2d\x73\151\x7a\x65\72\x31\x35\x70\x78\x3b\x62\157\162\x64\145\162\x2d\167\x69\x64\164\150\72\x20\x31\160\170\73\142\x6f\x72\144\145\x72\55\163\164\x79\x6c\145\72\40\x73\x6f\x6c\151\144\73\x62\x6f\162\x64\x65\162\55\x72\x61\144\x69\x75\163\x3a\x20\63\x70\170\73\x77\x68\x69\x74\145\x2d\163\x70\141\x63\x65\72\x20\156\157\167\x72\x61\x70\x3b\142\157\x78\x2d\163\x69\x7a\x69\x6e\x67\72\40\142\157\162\x64\x65\x72\55\x62\157\x78\73\142\157\x72\144\x65\162\55\x63\157\x6c\157\162\72\x20\x23\x30\60\67\x33\x41\101\x3b\142\157\170\x2d\163\x68\141\144\157\x77\72\x20\x30\160\170\x20\x31\x70\x78\40\x30\160\x78\40\x72\147\x62\141\x28\61\62\x30\x2c\40\62\60\x30\54\40\x32\x33\60\54\40\60\x2e\x36\51\40\151\156\x73\x65\x74\73\143\157\154\157\x72\72\40\x23\x46\106\106\73\42\x74\171\160\145\x3d\x22\142\165\x74\x74\157\x6e\x22\x20\166\x61\154\165\145\75\42\104\157\156\145\42\40\x6f\x6e\x43\x6c\x69\x63\153\x3d\42\x73\145\x6c\146\x2e\x63\x6c\x6f\163\145\x28\x29\73\42\76\74\x2f\x64\151\166\76";
        die;
        qk:
        goto lv;
        FW:
        watchdog("\155\151\x6e\151\157\162\x61\156\147\145\x5f\163\141\x6d\154", "\x55\164\x69\x6c\x69\164\151\145\x73\40\x76\x61\x6c\x69\144\141\164\x65\x49\163\x73\x75\x65\162\101\156\144\x41\165\144\x69\x65\x6e\143\x65\x20\x69\x66\40\x73\164\x72\x63\x6d\x70\x28\x24\151\163\163\x75\x65\x72\124\157\126\x61\154\x69\144\141\x74\x65\101\147\141\x69\x6e\163\x74\54\x20\x24\x69\163\x73\165\145\x72\x29\x3d\x3d\75\60", array());
        if (strcmp($aY, $Wq) === 0) {
            goto PE;
        }
        watchdog("\x6d\x69\156\x69\x6f\162\x61\156\x67\145\137\x73\141\x6d\x6c", "\x55\x74\x69\154\x69\x74\x69\x65\163\40\166\x61\154\151\144\141\164\x65\x49\x73\x73\x75\145\x72\x41\156\144\101\x75\x64\x69\145\156\x63\145\40\x65\x6c\x73\x65\x20\x6f\146\40\x69\x66\x20\163\164\x72\x63\155\160\x28\44\x61\165\144\151\x65\156\143\145\x2c\40\44\163\x70\105\x6e\x74\x69\x74\x79\111\x64\51\40\75\x3d\x3d\x20\x30", array());
        watchdog("\155\x69\x6e\151\x6f\162\141\x6e\147\145\x5f\x73\141\x6d\x6c", "\125\164\x69\x6c\x69\x74\x69\145\163\x20\x76\141\x6c\151\144\x61\164\x65\111\x73\163\x75\145\162\x41\x6e\144\101\x75\x64\x69\145\156\143\x65\x20\x61\165\x64\151\x65\x6e\x63\145\x3a\x20\74\160\x72\145\76\100\x61\165\x64\x69\145\156\x63\x65\74\x2f\x70\162\145\76", array("\100\141\x75\144\151\145\x6e\143\x65" => print_r($aY, TRUE)), WATCHDOG_INFO);
        watchdog("\155\151\156\x69\157\162\141\156\x67\x65\137\163\x61\x6d\154", "\x55\x74\151\154\x69\164\151\145\x73\40\166\141\x6c\151\x64\x61\x74\x65\111\163\163\x75\x65\x72\101\156\144\101\165\x64\x69\145\156\x63\x65\40\163\160\105\156\164\x69\x74\x79\x49\x64\x3a\x20\x3c\160\162\x65\x3e\x40\163\x70\x45\156\164\x69\x74\x79\111\144\x3c\57\160\x72\x65\x3e", array("\100\163\160\x45\156\164\x69\164\171\x49\x64" => print_r($Wq, TRUE)), WATCHDOG_INFO);
        echo sprintf("\111\x6e\x76\x61\x6c\x69\144\40\x61\x75\x64\x69\145\x6e\143\x65");
        die;
        goto Sx;
        PE:
        watchdog("\x6d\151\x6e\151\157\162\x61\156\x67\145\x5f\x73\x61\x6d\x6c", "\x55\164\x69\x6c\x69\164\x69\145\163\40\x76\x61\154\151\144\x61\x74\x65\111\x73\x73\165\145\162\x41\156\x64\101\x75\x64\x69\x65\156\x63\x65\40\151\x66\40\x73\x74\x72\143\155\x70\x28\44\x61\x75\x64\151\145\x6e\x63\x65\x2c\40\44\163\160\x45\x6e\164\151\164\x79\x49\x64\x29\40\75\x3d\75\40\x30", array());
        return TRUE;
        Sx:
        lv:
    }
    private static function doDecryptElement(DOMElement $pw, XMLSecurityKey $iB, array &$S1)
    {
        $pe = new XMLSecEnc();
        $pe->setNode($pw);
        $pe->type = $pw->getAttribute("\x54\x79\x70\x65");
        $mI = $pe->locateKey($pw);
        if ($mI) {
            goto QN;
        }
        echo sprintf("\x43\157\x75\x6c\x64\40\156\x6f\x74\x20\154\x6f\x63\141\164\145\40\x6b\145\x79\x20\141\154\x67\x6f\162\151\164\x68\155\x20\x69\156\40\145\156\x63\x72\171\x70\164\x65\x64\40\144\x61\164\x61\56");
        die;
        QN:
        $kL = $pe->locateKeyInfo($mI);
        if ($kL) {
            goto Ds;
        }
        echo sprintf("\103\157\165\x6c\x64\x20\x6e\157\164\40\x6c\x6f\143\141\164\145\40\x3c\x64\x73\151\147\x3a\113\145\171\x49\x6e\146\157\x3e\40\146\x6f\162\x20\164\150\x65\x20\145\x6e\x63\x72\x79\x70\x74\x65\144\40\x6b\145\x79\x2e");
        die;
        Ds:
        $kK = $iB->getAlgorithm();
        if ($kL->isEncrypted) {
            goto ge;
        }
        $QO = $mI->getAlgorithm();
        if (!($kK !== $QO)) {
            goto ay;
        }
        echo sprintf("\101\x6c\x67\157\x72\x69\164\150\x6d\x20\x6d\151\x73\155\141\164\x63\150\x20\x62\x65\164\167\x65\x65\156\x20\x69\x6e\x70\x75\x74\x20\x6b\145\x79\40\x61\x6e\144\x20\x6b\x65\171\40\151\x6e\40\155\145\163\163\x61\147\x65\56\40" . "\113\145\x79\40\x77\141\x73\x3a\40" . var_export($kK, TRUE) . "\73\40\x6d\x65\x73\x73\x61\147\x65\40\x77\x61\x73\x3a\40" . var_export($QO, TRUE));
        die;
        ay:
        $mI = $iB;
        goto ZP;
        ge:
        $gW = $kL->getAlgorithm();
        if (!in_array($gW, $S1, TRUE)) {
            goto e5;
        }
        echo sprintf("\101\x6c\x67\157\162\151\x74\150\x6d\x20\x64\151\163\x61\x62\154\x65\x64\72\40" . var_export($gW, TRUE));
        die;
        e5:
        if (!($gW === XMLSecurityKey::RSA_OAEP_MGF1P && $kK === XMLSecurityKey::RSA_1_5)) {
            goto lJ;
        }
        $kK = XMLSecurityKey::RSA_OAEP_MGF1P;
        lJ:
        if (!($kK !== $gW)) {
            goto CG;
        }
        echo sprintf("\101\154\x67\x6f\x72\151\164\150\155\40\x6d\151\163\155\x61\164\143\x68\x20\142\145\x74\x77\145\145\x6e\40\x69\156\x70\165\164\40\x6b\x65\171\40\x61\x6e\144\40\x6b\x65\x79\40\165\x73\145\x64\40\x74\x6f\40\x65\156\143\162\171\160\x74\x20" . "\40\164\x68\145\x20\x73\171\155\155\x65\164\162\151\143\40\x6b\x65\171\40\146\x6f\x72\x20\x74\150\145\40\x6d\145\x73\163\141\147\145\x2e\x20\x4b\x65\x79\40\x77\141\x73\x3a\40" . var_export($kK, TRUE) . "\x3b\x20\x6d\145\163\163\x61\x67\145\x20\167\x61\x73\x3a\x20" . var_export($gW, TRUE));
        die;
        CG:
        $ri = $kL->encryptedCtx;
        $kL->key = $iB->key;
        $WP = $mI->getSymmetricKeySize();
        if (!($WP === NULL)) {
            goto N8;
        }
        echo sprintf("\x55\156\153\156\157\167\x6e\40\x6b\145\x79\40\163\151\x7a\145\40\x66\157\162\40\145\156\x63\x72\x79\x70\164\x69\157\x6e\40\141\x6c\x67\x6f\x72\x69\x74\x68\x6d\x3a\x20" . var_export($mI->type, TRUE));
        die;
        N8:
        try {
            $l9 = $ri->decryptKey($kL);
            if (!(strlen($l9) != $WP)) {
                goto sB;
            }
            echo sprintf("\x55\156\x65\170\160\145\143\x74\145\x64\x20\153\145\x79\x20\163\151\x7a\x65\x20\50" . strlen($l9) * 8 . "\142\x69\x74\163\x29\x20\x66\157\162\40\145\x6e\143\x72\x79\x70\164\x69\x6f\x6e\40\141\x6c\x67\x6f\x72\151\x74\x68\x6d\72\40" . var_export($mI->type, TRUE));
            die;
            sB:
        } catch (Exception $pE) {
            $hp = $ri->getCipherValue();
            $xP = openssl_pkey_get_details($kL->key);
            $xP = sha1(serialize($xP), TRUE);
            $l9 = sha1($hp . $xP, TRUE);
            if (strlen($l9) > $WP) {
                goto zd;
            }
            if (strlen($l9) < $WP) {
                goto PU;
            }
            goto LC;
            zd:
            $l9 = substr($l9, 0, $WP);
            goto LC;
            PU:
            $l9 = str_pad($l9, $WP);
            LC:
        }
        $mI->loadkey($l9);
        ZP:
        $TT = $mI->getAlgorithm();
        if (!in_array($TT, $S1, TRUE)) {
            goto i4;
        }
        echo sprintf("\x41\154\147\157\162\151\x74\150\155\40\144\x69\x73\x61\142\x6c\x65\144\x3a\40" . var_export($TT, TRUE));
        die;
        i4:
        $hN = $pe->decryptNode($mI, FALSE);
        $L_ = "\x3c\162\x6f\x6f\x74\x20\170\x6d\x6c\x6e\163\72\163\141\x6d\x6c\x3d\x22\x75\x72\x6e\72\157\x61\x73\x69\163\x3a\156\141\155\145\x73\x3a\164\143\x3a\x53\x41\115\114\72\x32\56\x30\x3a\141\x73\163\x65\x72\164\151\157\x6e\x22\x20" . "\x78\155\x6c\x6e\163\72\170\163\x69\75\42\150\x74\x74\x70\x3a\x2f\x2f\167\167\167\x2e\167\x33\x2e\157\162\147\57\62\x30\x30\61\57\x58\115\x4c\x53\x63\150\x65\155\141\x2d\x69\x6e\x73\x74\x61\x6e\143\x65\x22\76" . $hN . "\x3c\x2f\x72\157\157\164\76";
        $t8 = new DOMDocument();
        if (@$t8->loadXML($L_)) {
            goto li;
        }
        throw new Exception("\x46\x61\151\154\x65\144\40\x74\x6f\x20\160\x61\x72\163\x65\40\144\145\x63\x72\171\160\x74\x65\144\40\x58\x4d\x4c\x2e\40\x4d\141\171\x62\145\40\x74\150\x65\40\x77\x72\157\156\x67\40\163\x68\x61\x72\145\x64\x6b\145\x79\40\167\141\163\40\165\163\145\x64\77");
        li:
        $vm = $t8->firstChild->firstChild;
        if (!($vm === NULL)) {
            goto B0;
        }
        echo sprintf("\115\151\163\163\x69\156\147\x20\x65\x6e\x63\x72\171\x70\x74\145\144\40\145\x6c\x65\155\145\x6e\164\56");
        throw new Exception("\115\151\x73\163\151\156\x67\40\x65\x6e\x63\x72\x79\160\164\145\144\40\145\154\145\155\145\156\164\56");
        B0:
        if ($vm instanceof DOMElement) {
            goto xU;
        }
        echo sprintf("\104\x65\x63\x72\x79\x70\164\145\144\40\145\x6c\x65\155\x65\156\164\x20\x77\141\163\40\x6e\x6f\x74\x20\x61\x63\164\x75\x61\x6c\154\171\x20\x61\x20\x44\117\115\105\x6c\x65\155\145\156\164\x2e");
        xU:
        return $vm;
    }
    public static function decryptElement(DOMElement $pw, XMLSecurityKey $iB, array $S1 = array(), XMLSecurityKey $jS = NULL)
    {
        try {
            return self::doDecryptElement($pw, $iB, $S1);
        } catch (Exception $pE) {
            try {
                return self::doDecryptElement($pw, $jS, $S1);
            } catch (Exception $Dc) {
            }
            die;
        }
    }
    public static function metadata_builder($aG)
    {
        $L_ = new DOMDocument();
        $Rq = plugins_url() . "\x2f\155\x69\156\x69\x6f\x72\141\x6e\147\x65\55\x73\x61\155\154\x2d\62\x30\x2d\163\x69\156\x67\154\x65\55\163\x69\147\156\55\x6f\x6e\57\x73\160\55\x6d\x65\x74\141\144\141\164\x61\x2e\x78\155\154";
        $L_->load($Rq);
        $H1 = new DOMXPath($L_);
        $C2 = $H1->query("\57\57\x6d\x64\x3a\105\x6e\164\151\164\x79\x44\x65\163\143\x72\151\x70\x74\157\162\x5b\100\x65\156\164\x69\x74\x79\x49\x44\75\42\150\x74\164\160\x3a\x2f\57\x7b\160\141\164\150\55\164\157\x2d\x79\x6f\165\162\55\x73\x69\164\x65\175\x2f\x77\160\55\x63\157\x6e\164\145\x6e\x74\x2f\x70\x6c\x75\x67\x69\x6e\163\57\x6d\151\x6e\x69\x6f\162\x61\x6e\147\145\55\x73\141\x6d\154\x2d\x32\60\55\x73\x69\156\x67\154\145\55\x73\x69\x67\156\55\157\x6e\57\42\135");
        if (!($C2->length >= 1)) {
            goto hQ;
        }
        $xK = $C2->item(0);
        $xK->setAttribute("\145\x6e\164\x69\164\171\111\104", $aG . "\x2f\x77\x70\x2d\x63\157\156\x74\x65\x6e\164\57\x70\x6c\165\x67\x69\156\163\x2f\155\151\x6e\x69\157\x72\x61\x6e\147\145\x2d\x73\x61\x6d\x6c\55\x32\x30\55\x73\x69\x6e\x67\x6c\145\55\x73\x69\x67\156\55\x6f\156\x2f");
        hQ:
        $C2 = $H1->query("\57\57\x6d\144\x3a\101\163\163\145\x72\x74\151\157\x6e\x43\x6f\156\163\x75\155\145\x72\x53\145\x72\166\151\x63\x65\133\100\x4c\157\143\x61\x74\x69\x6f\156\x3d\42\x68\164\164\x70\x3a\x2f\57\x7b\x70\x61\x74\150\x2d\x74\x6f\x2d\171\157\x75\x72\55\163\x69\x74\145\x7d\x22\x5d");
        if (!($C2->length >= 1)) {
            goto W8;
        }
        $xK = $C2->item(0);
        $xK->setAttribute("\114\x6f\143\141\164\x69\157\156", $aG . "\57");
        W8:
        $L_->save(plugins_url() . "\57\155\151\x6e\x69\x6f\x72\141\x6e\x67\145\55\x73\x61\x6d\154\55\62\x30\x2d\x73\x69\156\x67\154\145\55\163\x69\x67\x6e\55\x6f\156\57\x73\160\55\x6d\x65\x74\141\144\x61\x74\141\x2e\170\155\x6c");
    }
    public static function get_mapped_groups($O4, $SS)
    {
        $HP = array();
        if (empty($SS)) {
            goto cy;
        }
        $ca = array();
        $n5 = 1;
        lr:
        if (!($n5 < 10)) {
            goto UX;
        }
        $uP = $O4->get("\x67\162\157\165\x70" . $n5 . "\x5f\155\141\160");
        $ca[$n5] = explode("\x3b", $uP);
        $n5++;
        goto lr;
        UX:
        cy:
        foreach ($SS as $El) {
            if (empty($El)) {
                goto ND;
            }
            $n5 = 0;
            $jt = false;
            no:
            if (!($n5 < 9 && !$jt)) {
                goto er;
            }
            if (!(!empty($ca[$n5]) && in_array($El, $ca[$n5]))) {
                goto Jv;
            }
            $HP[] = $O4->get("\147\x72\x6f\x75\x70" . $n5);
            $jt = true;
            Jv:
            $n5++;
            goto no;
            er:
            ND:
            Yb:
        }
        Dw:
        return array_unique($HP);
    }
    public static function getEncryptionAlgorithm($TI)
    {
        switch ($TI) {
            case "\x68\x74\164\x70\72\x2f\57\167\x77\x77\56\x77\63\56\x6f\x72\147\x2f\x32\60\x30\61\x2f\60\x34\57\x78\155\154\x65\156\x63\43\x74\162\151\x70\154\145\144\x65\163\x2d\x63\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto y7;
            case "\150\164\164\x70\72\57\x2f\167\167\x77\x2e\167\x33\x2e\157\x72\x67\x2f\62\60\x30\x31\x2f\x30\64\57\170\155\154\x65\x6e\x63\x23\x61\145\x73\x31\x32\x38\x2d\x63\x62\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\150\x74\x74\160\72\57\57\167\x77\167\x2e\167\x33\56\x6f\162\147\x2f\x32\60\60\61\57\60\x34\x2f\x78\155\154\145\156\x63\43\141\145\163\x31\x39\62\x2d\x63\142\x63":
                return XMLSecurityKey::AES192_CBC;
                goto y7;
            case "\x68\x74\x74\160\72\x2f\x2f\167\x77\167\x2e\167\x33\56\157\x72\147\57\62\60\x30\61\x2f\60\x34\x2f\x78\155\154\145\x6e\143\43\x61\145\x73\62\65\66\55\x63\x62\x63":
                return XMLSecurityKey::AES256_CBC;
                goto y7;
            case "\x68\x74\x74\160\72\57\x2f\167\167\167\56\x77\x33\56\x6f\162\147\x2f\62\x30\x30\61\57\60\64\x2f\170\x6d\154\x65\x6e\x63\43\162\x73\141\55\61\137\65":
                return XMLSecurityKey::RSA_1_5;
                goto y7;
            case "\x68\x74\x74\x70\72\57\57\x77\167\x77\x2e\x77\x33\x2e\x6f\x72\x67\57\62\x30\x30\x31\57\60\64\57\x78\x6d\154\145\156\143\43\162\163\141\x2d\157\141\x65\160\x2d\155\147\x66\61\x70":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto y7;
            case "\x68\164\164\160\72\x2f\57\167\167\167\x2e\x77\63\x2e\157\162\147\57\x32\60\60\x30\x2f\x30\x39\x2f\x78\155\154\144\163\x69\x67\43\144\163\141\x2d\163\x68\x61\x31":
                return XMLSecurityKey::DSA_SHA1;
                goto y7;
            case "\x68\164\164\x70\72\57\x2f\167\167\x77\56\167\x33\x2e\x6f\162\147\57\x32\60\60\x30\x2f\60\71\57\x78\x6d\x6c\144\163\151\x67\43\162\x73\141\x2d\163\150\x61\61":
                return XMLSecurityKey::RSA_SHA1;
                goto y7;
            case "\x68\x74\x74\160\x3a\57\x2f\167\167\x77\x2e\167\x33\56\x6f\162\x67\x2f\62\x30\x30\x31\x2f\60\x34\x2f\x78\x6d\x6c\x64\163\x69\147\55\x6d\x6f\162\145\43\162\163\x61\55\163\150\x61\62\65\66":
                return XMLSecurityKey::RSA_SHA256;
                goto y7;
            case "\150\x74\164\160\x3a\57\57\x77\167\x77\56\167\63\56\157\162\x67\57\62\x30\x30\x31\57\60\x34\57\x78\155\x6c\x64\163\x69\147\x2d\x6d\157\x72\145\43\162\x73\141\x2d\x73\150\141\63\70\x34":
                return XMLSecurityKey::RSA_SHA384;
                goto y7;
            case "\x68\x74\164\160\x3a\x2f\57\167\x77\x77\x2e\167\x33\56\157\x72\x67\x2f\62\60\60\x31\57\60\64\x2f\170\155\154\x64\163\x69\x67\x2d\x6d\x6f\x72\x65\x23\162\163\141\55\163\x68\x61\65\x31\x32":
                return XMLSecurityKey::RSA_SHA512;
                goto y7;
            default:
                echo sprintf("\x49\156\166\x61\154\x69\x64\40\105\x6e\143\x72\x79\160\x74\x69\x6f\156\40\x4d\x65\164\150\157\x64\x3a\40" . $TI);
                die;
                goto y7;
        }
        CU:
        y7:
    }
    public static function sanitize_certificate($La)
    {
        $La = preg_replace("\57\x5b\15\xa\x5d\x2b\x2f", '', $La);
        $La = str_replace("\x2d", '', $La);
        $La = str_replace("\x42\x45\107\x49\116\x20\x43\x45\x52\x54\111\x46\x49\x43\x41\x54\x45", '', $La);
        $La = str_replace("\105\116\104\x20\x43\105\122\x54\111\106\x49\103\x41\x54\x45", '', $La);
        $La = str_replace("\40", '', $La);
        $La = chunk_split($La, 64, "\xd\12");
        $La = "\x2d\x2d\55\x2d\55\102\x45\107\x49\116\40\x43\105\122\124\111\106\111\x43\101\124\105\x2d\55\55\x2d\55\15\xa" . $La . "\55\55\x2d\x2d\x2d\105\116\x44\x20\x43\x45\x52\124\x49\x46\x49\103\101\124\x45\55\x2d\x2d\x2d\x2d";
        return $La;
    }
    public static function sanitize_private_key($mc)
    {
        $mc = preg_replace("\57\133\xd\12\x5d\x2b\57", '', $mc);
        $mc = str_replace("\x2d", '', $mc);
        $mc = str_replace("\102\105\x47\111\116\40\120\x52\111\x56\101\124\105\x20\113\x45\131", '', $mc);
        $mc = str_replace("\105\x4e\104\40\x50\x52\x49\126\101\124\x45\x20\x4b\105\x59", '', $mc);
        $mc = str_replace("\40", '', $mc);
        $mc = chunk_split($mc, 64, "\15\xa");
        $mc = "\55\55\55\x2d\x2d\x42\105\x47\x49\x4e\x20\120\122\x49\x56\x41\x54\x45\x20\x4b\105\x59\55\x2d\x2d\x2d\55\xd\12" . $mc . "\55\55\x2d\55\x2d\x45\x4e\104\x20\x50\x52\111\x56\101\124\x45\x20\x4b\105\x59\x2d\x2d\55\55\55";
        return $mc;
    }
    public static function desanitize_certificate($La)
    {
        $La = preg_replace("\x2f\x5b\15\12\135\53\57", '', $La);
        $La = str_replace("\55\x2d\55\x2d\x2d\x42\x45\x47\x49\116\x20\103\x45\122\124\111\106\111\x43\x41\x54\105\x2d\x2d\x2d\55\x2d", '', $La);
        $La = str_replace("\55\x2d\55\55\x2d\105\x4e\104\40\x43\105\x52\x54\111\106\x49\x43\x41\x54\105\55\55\55\x2d\55", '', $La);
        $La = str_replace("\x20", '', $La);
        return $La;
    }
    public static function Print_SAML_Request($y5, $dE)
    {
        header("\x43\x6f\156\x74\145\x6e\164\x2d\x54\171\x70\145\72\x20\164\x65\170\x74\57\150\164\x6d\154");
        $t0 = new DOMDocument();
        $t0->preserveWhiteSpace = false;
        $t0->formatOutput = true;
        $t0->loadXML($y5);
        if ($dE == "\144\151\163\160\154\141\x79\x53\x41\115\114\122\x65\161\x75\145\163\164") {
            goto F0;
        }
        $L3 = "\123\x41\115\114\40\122\145\x73\x70\157\x6e\163\145";
        goto PL;
        F0:
        $L3 = "\x53\101\115\114\40\122\x65\x71\165\145\163\164";
        PL:
        $pq = $t0->saveXML();
        $hr = htmlentities($pq);
        $hr = rtrim($hr);
        $L_ = simplexml_load_string($pq);
        $Rq = drupal_get_path("\x6d\x6f\144\165\x6c\x65", "\x6d\151\x6e\x69\157\x72\141\x6e\147\145\x5f\x73\x61\x6d\x6c") . "\x2f\x63\163\x73\57\x73\x74\171\154\x65\137\x73\145\x74\x74\x69\156\x67\163\56\143\163\163";
        echo "\74\154\151\156\x6b\x20\162\x65\154\75\x27\x73\x74\x79\x6c\145\163\150\x65\x65\x74\47\x20\x69\x64\x3d\47\x6d\x6f\137\163\141\x6d\154\137\141\x64\155\151\x6e\137\x73\x65\x74\x74\151\156\x67\163\x5f\163\x74\x79\x6c\145\x2d\x63\x73\x73\x27\x20\x20\x68\162\145\146\75\x27" . $Rq . "\47\40\x74\171\x70\145\x3d\47\164\x65\170\164\57\x63\163\163\47\x20\x6d\x65\x64\x69\x61\x3d\x27\x61\x6c\x6c\47\40\x2f\76\xa\40\x20\40\x20\x20\40\x20\40\40\40\40\40\12\x9\x9\x9\x3c\144\151\x76\40\x63\154\141\163\163\x3d\x22\x6d\157\55\144\151\163\160\x6c\x61\x79\x2d\x6c\x6f\x67\x73\42\x20\x3e\74\x70\x20\x74\171\x70\145\x3d\42\164\x65\170\164\42\x20\40\40\x69\144\75\x22\x53\x41\x4d\x4c\x5f\164\x79\160\145\x22\x3e" . $L3 . "\x3c\57\160\x3e\74\57\144\x69\166\76\12\x9\11\11\xa\x9\11\x9\x3c\x64\x69\x76\40\x74\x79\x70\145\75\x22\x74\x65\x78\x74\x22\x20\x69\x64\75\42\123\101\115\114\137\x64\x69\x73\x70\x6c\x61\x79\42\x20\143\x6c\x61\x73\x73\x3d\x22\x6d\157\55\x64\x69\x73\160\x6c\141\171\55\142\154\157\x63\x6b\x22\76\74\160\x72\145\x20\x63\x6c\141\163\x73\x3d\x27\142\162\x75\163\x68\x3a\x20\x78\x6d\x6c\73\x27\x3e" . $hr . "\74\x2f\160\162\145\76\x3c\x2f\x64\151\x76\x3e\xa\x9\x9\x9\74\142\162\x3e\12\x9\x9\11\74\x64\151\166\x20\x73\x74\171\x6c\145\75\x22\155\x61\x72\147\151\156\72\63\x25\x3b\144\151\163\160\154\141\x79\x3a\x62\x6c\x6f\143\153\73\164\x65\170\x74\55\141\x6c\151\x67\156\72\143\145\156\x74\145\x72\73\x22\x3e\xa\40\40\40\40\x20\40\40\x20\40\x20\x20\40\xa\11\x9\11\x3c\144\151\x76\x20\163\164\171\154\x65\75\42\x6d\x61\x72\x67\151\x6e\x3a\63\45\x3b\144\x69\x73\160\154\141\x79\x3a\x62\154\x6f\x63\x6b\73\x74\145\170\164\55\141\x6c\x69\x67\156\x3a\143\145\x6e\164\145\162\x3b\x22\x20\x3e\xa\x9\12\x20\40\40\40\40\x20\40\x20\x20\x20\x20\x20\74\x2f\144\x69\x76\x3e\12\11\x9\x9\74\x62\x75\x74\x74\x6f\156\40\x69\x64\x3d\42\143\157\x70\171\42\x20\157\x6e\x63\x6c\x69\143\x6b\x3d\42\143\x6f\160\171\x44\x69\166\124\157\103\154\x69\x70\x62\157\x61\162\x64\x28\x29\42\x20\40\163\x74\171\154\145\x3d\x22\x70\x61\x64\x64\x69\156\147\x3a\61\45\x3b\167\x69\144\x74\x68\x3a\61\x30\60\x70\170\73\142\x61\143\153\x67\x72\157\x75\x6e\x64\72\x20\x23\60\60\71\61\x43\x44\40\x6e\x6f\156\145\40\162\x65\160\145\141\x74\40\x73\143\x72\x6f\x6c\x6c\40\60\x25\40\x30\x25\73\143\165\162\163\x6f\162\x3a\40\160\x6f\151\x6e\x74\145\x72\73\146\x6f\156\164\x2d\163\x69\x7a\145\x3a\61\x35\160\x78\73\x62\x6f\x72\144\x65\162\55\167\x69\144\x74\x68\72\40\x31\160\170\x3b\142\157\x72\144\x65\x72\x2d\x73\164\x79\154\145\72\x20\163\x6f\x6c\x69\x64\73\142\157\x72\x64\145\162\55\162\x61\x64\151\165\x73\x3a\40\63\160\170\x3b\167\x68\151\x74\x65\55\163\x70\141\x63\145\x3a\x20\156\157\x77\162\141\x70\73\x62\157\170\55\x73\151\172\x69\x6e\x67\72\40\142\x6f\162\x64\145\162\x2d\x62\x6f\170\73\x62\157\162\x64\145\x72\x2d\143\157\154\x6f\162\x3a\40\43\x30\x30\67\63\101\101\x3b\142\157\x78\55\x73\x68\141\x64\157\x77\x3a\x20\x30\160\x78\40\x31\x70\x78\x20\60\x70\170\40\x72\147\x62\x61\x28\x31\x32\60\x2c\40\62\60\60\54\40\62\x33\x30\x2c\x20\x30\56\x36\51\x20\x69\x6e\x73\145\164\x3b\x63\157\154\x6f\x72\x3a\x20\43\x46\106\106\73\42\40\x3e\103\x6f\x70\171\74\57\142\x75\164\x74\x6f\x6e\x3e\xa\x9\x9\11\x26\156\x62\x73\160\x3b\12\x20\x20\x20\40\x20\x20\x20\40\40\x20\40\x20\40\x20\40\74\x69\x6e\x70\165\164\40\151\x64\75\x22\144\x77\156\55\142\164\156\42\40\163\164\171\154\x65\x3d\x22\160\141\x64\144\x69\x6e\147\72\x31\45\x3b\x77\151\144\164\x68\72\61\x30\60\160\x78\73\x62\x61\143\x6b\x67\x72\x6f\165\156\144\72\40\43\60\60\x39\61\103\x44\x20\156\x6f\156\145\40\x72\145\x70\x65\141\164\40\163\143\162\x6f\x6c\154\40\60\45\x20\x30\45\x3b\x63\x75\162\x73\157\x72\72\x20\x70\x6f\151\156\164\145\x72\73\146\157\156\164\x2d\163\x69\172\x65\72\61\x35\160\170\73\142\157\x72\x64\145\x72\x2d\x77\x69\x64\x74\150\x3a\x20\61\160\x78\73\x62\x6f\x72\x64\x65\162\55\x73\164\x79\x6c\145\72\40\x73\x6f\x6c\151\144\73\142\157\x72\x64\x65\x72\x2d\x72\141\144\151\x75\163\x3a\40\x33\160\x78\73\x77\150\151\164\x65\x2d\163\160\141\143\145\x3a\40\x6e\x6f\167\162\x61\x70\73\142\x6f\x78\55\163\151\x7a\151\156\x67\72\40\142\157\162\144\145\162\x2d\142\157\170\73\142\157\x72\x64\x65\162\55\143\x6f\154\157\162\x3a\x20\43\x30\x30\67\x33\x41\101\73\142\157\170\55\163\x68\x61\144\157\167\72\x20\x30\160\170\40\x31\160\170\40\x30\x70\x78\x20\162\x67\142\141\x28\61\62\x30\x2c\x20\x32\x30\60\x2c\40\x32\63\60\54\40\60\x2e\x36\51\x20\x69\x6e\163\x65\164\x3b\x63\x6f\x6c\157\x72\x3a\x20\x23\x46\x46\106\x3b\x22\x74\x79\x70\145\x3d\42\142\165\164\x74\x6f\156\x22\40\x76\141\154\165\x65\75\42\x44\x6f\167\x6e\154\x6f\x61\144\x22\40\xa\40\x20\40\40\40\40\40\40\x20\x20\x20\40\40\x20\x20\x22\x3e\xa\x9\11\x9\x3c\57\144\151\166\76\12\11\x9\11\x3c\x2f\144\151\x76\x3e\12\x9\11\11\xa\11\x9";
        ob_end_flush();
        ?>

        <script>

            function copyDivToClipboard() {
                var aux = document.createElement("input");
                aux.setAttribute("value", document.getElementById("SAML_display").textContent);
                document.body.appendChild(aux);
                aux.select();
                document.execCommand("copy");
                document.body.removeChild(aux);
                document.getElementById('copy').textContent = "Copied";
                document.getElementById('copy').style.background = "grey";
                window.getSelection().selectAllChildren(document.getElementById("SAML_display"));
            }

            function download(filename, text) {
                var element = document.createElement('a');
                element.setAttribute('href', 'data:Application/octet-stream;charset=utf-8,' + encodeURIComponent(text));
                element.setAttribute('download', filename);

                element.style.display = 'none';
                document.body.appendChild(element);

                element.click();

                document.body.removeChild(element);
            }

            document.getElementById("dwn-btn").addEventListener("click", function () {

                var filename = document.getElementById("SAML_type").textContent + ".xml";
                var node = document.getElementById("SAML_display");
                htmlContent = node.innerHTML;
                text = node.textContent;
                console.log(text);
                download(filename, text);
            }, false);

        </script>
        <?php 
        die;
    }
}
?>
