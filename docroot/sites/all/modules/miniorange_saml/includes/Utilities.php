<?php


class Utilities
{
    public static function generateCertificate($H5, $J2, $Mk, $wQ)
    {
        $O3 = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\162\145\x73\157\165\x72\143\145\x73" . DIRECTORY_SEPARATOR . "\x6f\x70\145\x6e\163\x73\154\56\143\x6e\146";
        $cE = array("\143\157\x6e\x66\151\x67" => $O3, "\x64\151\x67\x65\163\x74\137\141\154\147" => "{$J2}", "\160\162\151\166\x61\x74\145\x5f\153\145\x79\137\142\x69\164\x73" => $Mk, "\160\x72\x69\166\x61\164\x65\x5f\x6b\x65\171\x5f\164\171\x70\145" => OPENSSL_KEYTYPE_RSA);
        $gy = openssl_pkey_new($cE);
        $fh = openssl_csr_new($H5, $gy, $cE);
        if (!($fh === FALSE)) {
            goto Q3;
        }
        drupal_set_message(t("\x46\x61\x63\151\156\147\40\151\163\163\165\x65\163\40\x77\x68\x69\x6c\x65\x20\147\145\x6e\145\162\x61\x74\x69\156\x67\x20\x63\165\163\x74\x6f\155\x20\143\145\162\164\151\x66\151\143\x61\164\x65\x2e\40\120\x6c\145\x61\163\x65\40\x63\x68\145\x63\153\40\151\x66\40\x63\x6f\165\x6e\164\162\x79\40\143\157\x64\x65\x20\x69\163\x20\143\157\x72\x72\145\x63\x74\56"), "\x65\x72\x72\x6f\x72");
        return FALSE;
        Q3:
        $k8 = openssl_csr_sign($fh, null, $gy, $wQ, $cE, time());
        openssl_x509_export($k8, $Zj);
        openssl_pkey_export($gy, $AQ, null, $cE);
        openssl_csr_export($fh, $Ex);
        MA:
        if (!(($R8 = openssl_error_string()) !== false)) {
            goto C9;
        }
        error_log($R8);
        goto MA;
        C9:
        $q3 = array("\x70\x75\142\154\151\143\x5f\153\145\x79" => $Zj, "\x70\162\151\x76\x61\x74\145\137\x6b\x65\171" => $AQ);
        variable_set("\x6d\x69\x6e\151\x6f\162\141\156\x67\x65\137\x73\x61\x6d\154\x5f\160\x75\x62\x6c\137\143\145\162\164\x69\x66\x69\x63\x61\164\x65", $q3["\160\x75\142\154\151\x63\137\x6b\145\x79"]);
        variable_set("\155\x69\156\151\x6f\162\x61\156\147\145\137\163\141\x6d\x6c\137\160\162\151\x76\x61\164\145\137\143\x65\162\x74\151\x66\151\x63\x61\164\145", $q3["\x70\162\x69\x76\141\x74\145\137\153\145\x79"]);
        file_put_contents(self::getCertificatePath(), $q3["\x70\x75\x62\x6c\x69\x63\x5f\153\145\171"]);
        file_put_contents(self::getKeyPath(), $q3["\x70\x72\x69\x76\141\x74\145\137\x6b\145\171"]);
        return TRUE;
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $iv = $base_url . "\x2f\141\x64\x6d\x69\x6e\57\x63\x6f\x6e\x66\x69\x67\57\x70\145\x6f\x70\154\x65\57\x6d\151\x6e\x69\157\162\x61\x6e\147\x65\137\163\x61\x6d\x6c\x2f\143\x75\163\x74\x6f\155\x65\x72\137\163\145\164\165\x70\57";
        if (variable_get("\155\x69\x6e\x69\x6f\x72\x61\x6e\147\x65\137\x73\x61\155\154\x5f\143\165\163\164\157\155\145\162\x5f\x61\x64\155\x69\x6e\x5f\145\155\141\151\x6c", NULL) == NULL || variable_get("\155\151\x6e\151\157\x72\x61\x6e\x67\x65\x5f\163\x61\x6d\154\137\143\x75\x73\164\x6f\x6d\145\162\137\151\144", NULL) == NULL || variable_get("\155\151\156\151\x6f\162\141\156\147\x65\x5f\x73\x61\155\x6c\137\143\x75\163\x74\x6f\155\x65\162\137\141\144\x6d\151\156\x5f\164\157\153\x65\156", NULL) == NULL || variable_get("\155\151\156\x69\157\162\141\x6e\x67\145\137\x73\141\x6d\154\x5f\143\165\163\164\157\155\x65\x72\x5f\141\160\x69\137\x6b\x65\171", NULL) == NULL) {
            goto Ze;
        }
        if (!(variable_get("\155\x69\156\151\157\162\x61\x6e\x67\x65\137\163\x61\x6d\154\x5f\154\151\143\x65\156\x73\145\x5f\x6b\145\x79") == NULL && variable_get("\x6d\151\156\151\157\162\x61\156\147\x65\137\163\x61\155\x6c\137\x63\165\x73\x74\157\x6d\x65\x72\x5f\x61\x64\x6d\x69\x6e\x5f\145\155\141\151\x6c") != NULL)) {
            goto o6;
        }
        $form["\x6d\x61\162\x6b\165\x70\x5f\x6d\163\x67"] = array("\43\x6d\x61\162\x6b\x75\160" => "\74\x64\x69\166\x20\143\154\141\163\x73\x3d\x22\155\157\137\163\141\155\x6c\x5f\x72\x65\147\x69\163\164\145\x72\137\155\x65\x73\x73\141\x67\x65\x22\x3e\74\x70\x3e\131\157\165\40\156\x65\145\x64\40\x74\x6f\x20\74\x61\40\150\x72\145\146\x3d\x22" . $iv . "\42\x20\40\76\x76\145\x72\x69\x66\x79\40\x3c\57\x61\76\40\171\157\165\162\x20\154\x69\143\145\x6e\163\145\x20\x6b\x65\171\x20\142\x65\146\x6f\x72\145\40\x75\x73\151\156\x67\x20\164\150\x69\x73\40\155\157\x64\x75\154\x65\56\74\x2f\x61\76\x3c\x2f\160\x3e\74\57\x64\x69\x76\76");
        return TRUE;
        o6:
        goto G2;
        Ze:
        $form["\155\x61\162\x6b\x75\x70\137\162\145\147\x5f\155\x73\x67"] = array("\43\x6d\141\162\x6b\x75\160" => "\x3c\x64\151\x76\40\x63\x6c\141\x73\163\75\x22\x6d\x6f\x5f\163\x61\x6d\x6c\137\162\145\147\x69\x73\x74\145\162\x5f\x6d\145\163\x73\x61\x67\145\x22\76\x59\157\165\40\156\145\x65\x64\x20\x74\x6f\40\x3c\141\x20\150\x72\x65\146\75\x22" . $iv . "\42\x20\76\x4c\x6f\147\x69\x6e\x3c\57\141\x3e\x20\167\151\164\150\x20\x6d\x69\x6e\x69\117\x72\141\x6e\147\145\40\141\x63\143\x6f\165\156\164\x20\142\x65\146\157\162\145\x20\x75\x73\151\156\147\x20\164\x68\x69\x73\x20\155\x6f\x64\165\154\145\56\74\x2f\x63\145\x6e\164\x65\162\x3e\74\x2f\x64\151\166\76");
        return TRUE;
        G2:
        if (!(variable_get("\155\151\156\x69\x6f\162\141\156\147\x65\137\x73\141\155\154\x5f\154\x69\143\145\156\163\x65\137\153\x65\x79") != NULL && variable_get("\155\151\156\151\157\x72\x61\x6e\147\x65\137\163\141\155\x6c\x5f\143\165\x73\164\x6f\155\x65\162\x5f\x61\x64\x6d\151\x6e\137\145\x6d\x61\x69\154") != NULL)) {
            goto tf;
        }
        return FALSE;
        tf:
    }
    public static function createUpdateUrl($Pb, $MQ, $SQ, $i3, $mM, $Mx)
    {
        $rj = "\x31\x31\61\61\x31\61\61\61\61\x31\x31\x31\x31\x31\x31\x31" . $Pb;
        $lY = $Mx . "\57\155\x6f\141\163\x2f\141\x70\x69\57\x70\x6c\165\147\x69\x6e\x2f\144\x72\165\160\141\x6c\x4a\x6f\157\155\x6c\x61\125\x70\144\141\x74\145\57" . $mM . "\57" . $MQ . "\57" . $SQ . "\x2f";
        $Xi = openssl_cipher_iv_length($sG = "\101\x45\x53\x2d\x31\x32\70\55\x43\102\x43");
        $sN = openssl_random_pseudo_bytes($Xi);
        $e4 = openssl_encrypt($rj, $sG, $i3, $VT = OPENSSL_RAW_DATA, $sN);
        return $lY . str_replace(array("\53", "\57", "\75"), array("\55", "\137", ''), base64_encode($e4));
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $form["\155\x61\x72\x6b\165\160\137\x69\x64\x70\137\141\x74\x74\162\x5f\150\145\x61\x64\145\x72\137\164\157\x70\137\x73\x75\160\x70\157\162\164"] = array("\43\155\x61\x72\153\x75\160" => "\x3c\x64\x69\166\40\143\x6c\141\x73\x73\75\x22\155\157\x5f\163\141\155\x6c\137\164\x61\142\154\x65\137\154\141\x79\157\x75\164\x5f\x73\x75\160\160\157\x72\164\x5f\x31\42\x3e");
        $form["\x6d\141\162\153\165\160\x5f\x73\165\x70\160\157\162\164\137\x31"] = array("\x23\155\x61\x72\153\x75\x70" => "\74\x68\x33\x3e\106\145\141\164\165\x72\x65\x20\122\x65\x71\x75\x65\163\164\57\103\157\156\164\x61\x63\x74\40\x55\163\72\x3c\57\150\x33\76\x3c\144\x69\166\76\x4e\x65\x65\144\40\x61\156\x79\x20\150\145\154\x70\x3f\40\127\145\x20\x63\x61\x6e\x20\150\x65\x6c\x70\x20\171\157\x75\40\x77\x69\164\x68\x20\143\x6f\x6e\x66\151\147\165\x72\x69\x6e\x67\40\x79\157\x75\x72\40\123\145\x72\x76\x69\143\x65\x20\120\162\x6f\166\x69\x64\145\162\56\x20\x4a\x75\x73\x74\x20\x73\145\x6e\144\x20\165\x73\x20\x61\x20\161\x75\x65\x72\171\x20\141\156\144\40\167\145\40\167\x69\x6c\154\x20\x67\x65\164\40\x62\141\143\x6b\40\164\157\x20\171\157\165\40\x73\157\157\x6e\x2e\74\x62\162\40\x2f\x3e\x3c\x2f\144\151\x76\x3e\74\x62\x72\x3e");
        $form["\x6d\x69\x6e\x69\157\x72\141\156\147\145\x5f\163\x61\x6d\154\x5f\145\155\x61\151\x6c\x5f\x61\x64\144\162\145\x73\163"] = array("\43\164\x79\x70\x65" => "\x74\145\x78\164\146\151\x65\154\x64", "\43\141\x74\x74\x72\x69\x62\x75\x74\x65\x73" => array("\163\164\171\x6c\x65" => "\x77\151\144\x74\150\x3a\61\x30\x30\45", "\160\154\x61\143\145\150\x6f\154\x64\145\162" => "\105\x6e\x74\145\162\x20\x79\x6f\x75\162\40\105\155\x61\x69\154"), "\43\x64\145\x66\x61\x75\x6c\164\x5f\x76\x61\154\x75\145" => variable_get("\155\151\x6e\x69\157\162\x61\156\x67\x65\137\x73\141\x6d\154\137\143\x75\163\x74\157\x6d\x65\x72\x5f\x61\x64\155\x69\x6e\x5f\145\x6d\x61\x69\x6c", ''));
        $form["\x6d\151\x6e\x69\x6f\162\141\x6e\x67\145\x5f\x73\141\155\154\x5f\x70\150\157\156\145\x5f\x6e\x75\x6d\x62\145\x72"] = array("\x23\164\x79\x70\x65" => "\164\x65\170\164\x66\x69\x65\x6c\x64", "\43\141\x74\x74\162\151\142\165\x74\145\163" => array("\x73\164\171\154\x65" => "\167\151\144\x74\150\x3a\61\60\60\45", "\x70\x6c\141\x63\x65\x68\x6f\x6c\x64\x65\162" => "\105\156\x74\x65\x72\40\171\x6f\x75\162\40\x70\150\157\156\x65\x20\156\165\x6d\142\x65\x72\x20\x77\x69\x74\150\x20\x63\x6f\x75\x6e\164\162\171\x20\x63\157\144\x65\x20\145\147\56\x28\53\61\51"), "\x23\144\x65\x66\141\x75\x6c\x74\137\x76\x61\154\x75\x65" => variable_get("\x6d\x69\156\x69\157\162\x61\156\147\x65\x5f\163\x61\155\154\x5f\x63\x75\163\x74\157\155\x65\162\x5f\x61\x64\155\x69\x6e\x5f\160\x68\157\156\145", ''));
        $form["\x6d\151\x6e\x69\x6f\162\x61\x6e\147\x65\x5f\x73\141\x6d\x6c\x5f\x73\x75\x70\160\157\162\164\x5f\x71\165\x65\162\x79"] = array("\x23\164\171\x70\x65" => "\164\x65\x78\x74\x61\x72\x65\141", "\43\143\x6f\x6c\x73" => "\x31\60", "\x23\162\x6f\x77\163" => "\x35", "\43\141\x74\164\x72\151\x62\x75\164\145\x73" => array("\163\x74\171\x6c\x65" => "\x77\x69\144\x74\x68\72\61\60\60\45\73\x62\157\x72\x64\x65\x72\55\x72\141\144\x69\165\x73\x3a\x32\x70\x78\x3b\142\x61\143\x6b\x67\162\x6f\165\156\x64\72\x23\146\x63\146\143\x66\141\x3b\x62\x6f\x78\x2d\x73\x68\x61\x64\x6f\167\72\40\x69\x6e\x73\145\x74\x20\x30\40\x31\160\170\40\x32\x70\170\x20\x72\x67\142\141\50\x30\54\40\x30\x2c\x20\x30\54\x20\60\56\x31\x32\x35\51\x3b\146\157\x6e\x74\55\x66\x61\x6d\151\154\x79\x3a\x20\x48\145\154\166\x65\x74\151\x63\x61\40\x4e\145\x75\145\x2c\40\110\145\x6c\x76\145\164\151\x63\x61\54\x20\x41\x72\151\141\x6c\x2c\40\x73\x61\156\163\x2d\163\x65\162\x69\146\73", "\x70\x6c\141\143\x65\150\157\x6c\144\145\x72" => "\x57\162\x69\164\x65\x20\171\157\x75\x72\x20\x71\x75\145\x72\x79\x20\150\x65\x72\x65\56"), "\43\162\145\163\151\172\141\x62\154\x65" => False);
        $form["\x6d\151\156\151\157\162\141\x6e\147\145\x5f\163\x61\155\154\x5f\163\x75\160\160\x6f\162\x74\x5f\163\165\142\x6d\151\164\137\143\x6c\x69\x63\x6b"] = array("\43\164\171\160\x65" => "\163\x75\x62\155\x69\x74", "\x23\166\141\154\x75\145" => t("\x53\x75\142\155\x69\x74\40\x51\165\145\162\171"), "\43\x73\x75\142\x6d\x69\x74" => array("\125\164\x69\154\x69\x74\151\x65\163\72\72\x73\x65\156\144\137\163\x75\x70\x70\157\x72\164\x5f\161\x75\145\x72\x79"), "\43\141\x74\x74\x72\151\142\165\164\x65\x73" => array("\x73\164\x79\154\145" => "\142\x61\x63\153\147\162\157\x75\x6e\x64\x3a\x20\43\63\x33\x37\141\142\x37\x3b\143\x6f\x6c\157\x72\x3a\x20\43\x66\146\146\146\x66\x66\x3b\x74\145\170\164\x2d\x73\x68\141\x64\x6f\167\x3a\40\60\40\55\x31\x70\x78\x20\61\x70\x78\x20\x23\x33\x33\x37\x61\142\x37\x2c\40\61\160\170\x20\60\40\x31\x70\x78\40\43\x33\x33\x37\141\142\x37\54\40\60\x20\x31\x70\170\x20\x31\x70\170\x20\x23\x33\x33\67\141\x62\x37\54\40\55\x31\x70\170\x20\x30\x20\x31\x70\x78\40\x23\63\63\x37\141\142\67\73\142\157\170\x2d\163\x68\141\144\157\167\72\40\60\x20\x31\160\x78\40\x30\x20\x23\63\63\x37\x61\142\x37\73\x62\157\x72\x64\x65\x72\x2d\143\x6f\x6c\157\162\72\x20\43\x33\x33\x37\x61\142\x37\x20\x23\63\63\x37\141\142\67\x20\x23\63\x33\x37\x61\x62\x37\73\x64\x69\163\x70\154\x61\x79\x3a\x62\154\x6f\x63\x6b\73\155\x61\162\x67\151\156\x2d\154\x65\x66\x74\x3a\141\165\164\x6f\x3b\x6d\141\162\x67\x69\x6e\x2d\x72\x69\x67\150\x74\72\141\x75\x74\157\x3b"));
        $form["\155\x69\156\151\x6f\162\141\156\x67\x65\137\163\141\x6d\x6c\x5f\x73\x75\x70\x70\x6f\x72\164\137\x6e\157\164\145"] = array("\43\x6d\x61\x72\x6b\x75\x70" => "\74\x64\151\166\x3e\x49\146\x20\x79\x6f\165\40\x77\x61\x6e\x74\40\x63\165\x73\164\x6f\x6d\x20\x66\x65\x61\x74\165\x72\x65\x73\x20\151\156\40\x74\x68\x65\40\x70\x6c\x75\x67\151\156\x2c\x20\152\x75\163\x74\40\x64\x72\157\160\x20\141\156\40\145\155\x61\x69\154\x20\164\x6f\x20\x3c\141\x20\x68\162\145\x66\75\42\x6d\x61\x69\x6c\164\157\x3a\144\162\x75\x70\x61\x6c\x73\x75\160\160\157\162\x74\x40\x78\145\x63\165\x72\x69\146\171\x2e\x63\x6f\x6d\42\x3e\x64\162\165\x70\x61\x6c\163\165\x70\160\x6f\x72\x74\x40\170\x65\143\x75\162\x69\146\171\x2e\143\x6f\x6d\x3c\x2f\x61\x3e\74\x2f\x64\151\x76\76");
        $form["\x6d\151\x6e\x69\157\x72\x61\x6e\x67\145\137\x66\x61\x71"] = array("\43\155\141\162\x6b\165\x70" => "\74\142\x72\x3e\74\x64\x69\x76\40\163\x74\171\154\x65\x3d\x22\x74\x65\x78\164\x2d\141\x6c\151\147\156\x3a\x20\x63\145\156\164\145\x72\73\x22\x3e\74\141\40\x63\x6c\141\163\163\75\x22\155\x6f\x5f\163\141\155\x6c\x5f\142\164\156\40\155\x6f\137\163\x61\x6d\x6c\137\142\164\x6e\x2d\x70\x72\x69\x6d\141\162\171\x2d\146\x61\x71\x20\x6d\157\x5f\163\141\155\154\x5f\142\164\156\55\154\x61\162\147\x65\x20\155\157\137\x73\x61\x6d\154\137\x62\x74\x6e\x5f\x66\x61\161\x5f\x62\x75\x74\x74\x6f\156\x73\42\x20\x73\164\x79\154\145\x3d\x22\x66\x6c\157\x61\164\x3a\40\151\156\x68\145\162\151\164\x3b\160\141\x64\x64\151\x6e\147\72\40\63\160\170\40\x36\160\x78\x20\41\151\155\160\x6f\x72\x74\141\x6e\164\73\143\157\x6c\x6f\162\x3a\40\x23\64\x38\141\60\144\143\73\142\157\162\x64\145\x72\x3a\40\62\x70\170\40\163\x6f\154\x69\144\40\43\x34\x38\x61\x30\x64\143\x3b\42\40\150\162\145\146\75\x22\x68\x74\x74\x70\x73\72\x2f\57\146\x61\161\56\155\151\156\x69\x6f\162\x61\156\147\145\x2e\143\157\155\x2f\153\142\57\144\x72\165\160\141\154\x2f\x73\x61\x6d\x6c\55\x64\x72\x75\160\141\x6c\x2f\x22\x20\x74\141\x72\147\145\x74\x3d\x22\137\142\x6c\141\x6e\x6b\x22\76" . "\x46\101\x51\163\74\57\x61\76");
        $form["\x6d\x69\156\151\x6f\x72\x61\156\x67\x65\137\147\165\x69\144\145"] = array("\43\x6d\141\x72\153\165\160" => "\x3c\141\x20\x63\154\x61\163\x73\75\42\155\x6f\x5f\x73\141\x6d\x6c\137\142\x74\x6e\40\155\x6f\x5f\x73\141\x6d\154\137\x62\164\156\x2d\x70\162\151\155\141\x72\171\x2d\146\141\x71\40\x6d\x6f\137\163\x61\x6d\154\137\x62\164\156\55\x6c\x61\162\x67\x65\40\x6d\157\137\x73\141\155\154\137\142\164\x6e\x5f\146\x61\161\137\142\x75\x74\x74\x6f\x6e\x73\x22\40\x73\164\171\x6c\145\x3d\42\146\154\157\x61\164\x3a\x20\x69\156\x68\x65\x72\151\164\73\160\x61\x64\144\x69\x6e\x67\72\x20\x33\x70\x78\40\x36\160\x78\40\41\151\155\x70\157\162\164\x61\x6e\x74\x3b\143\x6f\154\x6f\162\72\x20\x23\x34\70\x61\60\x64\143\x3b\x62\x6f\162\x64\x65\x72\x3a\40\x32\x70\170\40\x73\157\154\151\144\x20\43\x34\x38\141\x30\144\143\x3b\x22\40\x68\162\145\x66\75\x22\150\x74\x74\x70\x73\72\57\57\x70\154\165\x67\151\x6e\x73\56\x6d\151\156\x69\157\162\141\x6e\147\x65\56\143\x6f\x6d\x2f\x63\x6f\156\146\151\x67\165\x72\x65\x2d\144\x72\x75\160\x61\x6c\55\x73\141\155\x6c\55\x73\151\x6e\147\154\x65\55\163\x69\x67\156\x2d\157\156\42\x20\164\141\162\147\145\x74\x3d\x22\137\x62\154\x61\156\153\x22\x3e" . "\x53\x65\164\165\x70\x20\107\165\151\x64\145\163\74\57\141\x3e");
        $form["\x6d\x69\156\151\x6f\x72\x61\156\147\145\x5f\146\x6f\x72\x75\x6d"] = array("\43\x6d\141\162\x6b\165\x70" => "\x3c\x62\76\x3c\x2f\142\x3e\74\141\40\143\154\x61\x73\163\x3d\42\155\x6f\137\x73\x61\x6d\x6c\137\142\x74\156\x20\155\x6f\137\163\141\x6d\154\x5f\142\x74\156\x2d\160\x72\x69\x6d\x61\162\x79\x2d\x66\x61\161\x20\155\157\137\163\141\155\154\x5f\142\164\x6e\x2d\154\141\162\147\x65\x20\x6d\x6f\137\x73\x61\x6d\154\x5f\142\x74\156\x5f\x66\141\161\x5f\142\x75\x74\164\x6f\156\163\x22\x20\163\x74\171\x6c\x65\75\x22\155\x61\x72\x67\151\x6e\x2d\154\145\x66\x74\72\x20\x31\x30\160\x78\73\40\146\154\157\141\164\72\40\x69\x6e\x68\x65\162\151\x74\x3b\x70\141\144\144\151\156\147\x3a\x20\63\x70\x78\40\x36\160\170\40\x21\151\x6d\160\157\162\164\141\x6e\164\73\x63\157\x6c\157\x72\x3a\x20\x23\x34\x38\141\60\144\143\x3b\x62\x6f\x72\144\145\162\72\x20\x32\x70\170\40\163\x6f\x6c\x69\x64\x20\x23\64\x38\141\x30\x64\x63\x3b\x22\40\x68\162\x65\x66\x3d\42\x68\164\164\160\163\x3a\57\x2f\x66\x6f\162\165\155\x2e\x6d\x69\156\151\157\x72\x61\156\x67\145\x2e\x63\x6f\155\57\42\40\164\x61\162\x67\x65\164\75\42\137\x62\x6c\x61\x6e\153\x22\76" . "\101\x73\x6b\x20\161\165\x65\163\164\151\x6f\x6e\x73\40\157\156\x20\146\x6f\x72\165\155\74\x2f\141\76\74\57\144\151\166\76\x3c\57\x64\x69\x76\76");
    }
    public static function Is_Restricted_Domain($k7)
    {
        $cX = variable_get("\155\151\x6e\151\157\162\x61\156\x67\145\x5f\163\141\x6d\154\x5f\145\156\141\x62\154\145\x5f\x64\x6f\x6d\x61\x69\156\x5f\x72\145\x73\164\x72\151\x63\164\x69\157\x6e");
        if (!($cX === FALSE)) {
            goto y_;
        }
        return FALSE;
        y_:
        $y6 = explode("\100", $k7)[1];
        if (!(is_null($y6) || empty($y6))) {
            goto dZ;
        }
        return FALSE;
        dZ:
        $os = variable_get("\x6d\151\156\x69\157\x72\141\x6e\147\x65\137\x73\141\155\x6c\x5f\144\157\155\x61\151\x6e\x73");
        $rX = variable_get("\155\151\156\151\x6f\x72\x61\x6e\x67\x65\137\x73\141\x6d\x6c\137\x64\x6f\155\x61\x69\x6e\x73\x5f\141\162\145\137\167\150\x69\x74\145\137\157\162\137\x62\154\141\x63\x6b");
        $os = explode("\73", $os);
        if ($rX === "\167\150\151\x74\x65") {
            goto yU;
        }
        if ($rX == "\142\154\141\x63\x6b") {
            goto AR;
        }
        goto pw;
        yU:
        if (array_search($y6, $os) === FALSE) {
            goto Sb;
        }
        return FALSE;
        goto Sq;
        Sb:
        return TRUE;
        Sq:
        goto pw;
        AR:
        if (array_search($y6, $os) === FALSE) {
            goto Sj;
        }
        return TRUE;
        goto dD;
        Sj:
        return FALSE;
        dD:
        pw:
    }
    public static function send_support_query(&$form, $form_state)
    {
        $NQ = trim($form["\155\x69\x6e\151\157\162\141\156\x67\145\137\x73\141\155\154\x5f\x65\x6d\141\x69\154\137\x61\x64\144\x72\x65\x73\163"]["\x23\166\x61\x6c\165\x65"]);
        $DC = trim($form["\155\151\156\151\157\162\x61\156\147\x65\x5f\163\x61\155\154\137\x70\150\157\x6e\145\x5f\x6e\x75\155\x62\x65\162"]["\x23\166\x61\154\165\x65"]);
        $U3 = trim($form["\x6d\151\156\151\157\162\x61\x6e\147\145\137\163\141\155\x6c\137\x73\165\x70\x70\x6f\162\164\137\161\165\145\x72\x79"]["\43\x76\x61\154\165\145"]);
        Utilities::send_query($NQ, $DC, $U3);
    }
    public static function send_query($NQ, $DC, $U3)
    {
        if (empty($NQ) || empty($U3)) {
            goto IZ;
        }
        if (!valid_email_address($NQ)) {
            goto UT;
        }
        goto w_;
        IZ:
        drupal_set_message(t("\x54\150\145\40\x3c\x62\x3e\74\165\x3e\x45\x6d\x61\x69\154\74\x2f\165\x3e\x3c\57\142\76\40\141\156\x64\40\74\142\x3e\x3c\x75\76\x51\x75\x65\162\x79\x3c\57\165\x3e\74\x2f\142\x3e\40\x66\151\x65\154\x64\163\40\141\162\x65\x20\x72\x65\161\165\x69\x72\x65\x64\x2e"), "\x65\162\162\157\162");
        return;
        goto w_;
        UT:
        drupal_set_message(t("\x54\150\145\x20\x65\155\141\151\154\x20\x61\144\x64\162\145\x73\x73\40\74\x62\76\x3c\151\76" . $NQ . "\x3c\x2f\151\x3e\74\57\142\x3e\40\x69\163\40\x6e\x6f\x74\x20\166\141\x6c\151\144\56"), "\x65\x72\x72\x6f\x72");
        return;
        w_:
        $oG = new MiniOrangeSamlSupport($NQ, $DC, $U3);
        $ut = $oG->sendSupportQuery();
        if ($ut) {
            goto i2;
        }
        drupal_set_message(t("\x45\162\162\x6f\162\40\x73\145\156\x64\x69\x6e\x67\x20\x73\165\x70\x70\x6f\162\x74\40\x71\x75\145\x72\x79"), "\145\162\162\x6f\x72");
        goto el;
        i2:
        drupal_set_message(t("\x53\165\x70\160\157\162\164\x20\x71\x75\145\x72\x79\40\163\x75\143\x63\145\x73\163\146\165\154\x6c\x79\40\163\x65\x6e\164"));
        el:
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $lY = variable_get("\x6d\151\x6e\151\157\162\141\x6e\x67\x65\137\163\141\155\x6c\x5f\x62\141\163\145\137\165\x72\x6c", '');
        $sO = isset($lY) && !empty($lY) ? $lY : $base_url;
        return $sO;
    }
    public static function getIssuer()
    {
        $u1 = variable_get("\155\151\156\151\x6f\162\141\156\147\145\137\x73\141\x6d\x6c\x5f\x65\x6e\164\151\164\x79\137\x69\x64", '');
        $sO = Utilities::miniorange_get_baseURL();
        $Yy = isset($u1) && !empty($u1) ? $u1 : $sO;
        return $Yy;
    }
    public static function getCertificatePath($RT = false)
    {
        $sO = '';
        if (!$RT) {
            goto Mr;
        }
        $sO = self::miniorange_get_baseURL() . "\x2f";
        Mr:
        $t6 = drupal_get_path("\x6d\x6f\144\165\154\x65", "\155\x69\x6e\x69\157\x72\141\x6e\x67\145\x5f\x73\141\155\154");
        return $sO . $t6 . "\x2f\x72\x65\163\x6f\165\x72\143\145\x73\57" . self::getCertficateName();
    }
    public static function getCertficateName()
    {
        $rQ = variable_get("\155\151\156\151\157\x72\x61\x6e\x67\x65\137\x73\x61\x6d\154\137\160\165\x62\x6c\137\143\x65\162\164\x69\146\151\143\141\x74\145", '');
        if (empty($rQ)) {
            goto Uj;
        }
        return MiniorangeSAMLConstants::CUSTOM_PUBLIC_CERT_NAME;
        goto xS;
        Uj:
        return MiniorangeSAMLConstants::DEFAULT_PUBLIC_CERT_NAME;
        xS:
    }
    public static function getKeyPath()
    {
        $t6 = drupal_get_path("\x6d\157\144\165\154\x65", "\155\151\156\x69\x6f\162\x61\156\147\145\137\x73\x61\x6d\x6c");
        return $t6 . "\57\x72\x65\x73\x6f\165\162\143\145\163\x2f" . self::getKeyName();
    }
    public static function getKeyName()
    {
        $v0 = variable_get("\155\151\156\x69\157\162\141\156\x67\x65\137\x73\141\155\154\137\x70\x72\x69\x76\141\x74\145\x5f\143\x65\162\x74\x69\x66\x69\x63\x61\x74\x65", '');
        if (empty($v0)) {
            goto po;
        }
        return MiniorangeSAMLConstants::CUSTOM_PRIVATE_KEY_NAME;
        goto HU;
        po:
        return MiniorangeSAMLConstants::DEFAULT_PRIVATE_KEY_NAME;
        HU:
    }
    public static function getTabNames()
    {
        $XT = array("\x49\144\145\156\164\151\164\x79\x5f\x50\162\x6f\x76\151\x64\x65\162" => "\155\x6f\x5f\157\160\x74\151\157\156\x73\137\x65\156\165\x6d\137\x69\x64\145\156\x74\151\x74\x79\x5f\160\162\x6f\x76\x69\x64\x65\162", "\x53\145\162\x76\x69\143\x65\137\x50\162\x6f\x76\151\144\145\x72" => "\x6d\x6f\137\x6f\160\164\x69\157\156\163\137\145\156\165\x6d\x5f\x73\x65\x72\166\151\143\x65\x5f\x70\x72\157\166\151\x64\145\162", "\115\141\x70\x70\151\x6e\147" => "\x6d\157\x5f\157\x70\164\151\x6f\156\163\137\x65\x6e\165\155\x5f\155\141\160\160\151\x6e\x67", "\123\x69\x67\x6e\137\111\156\137\123\145\164\x74\151\x6e\x67\163" => "\x6d\157\x5f\157\x70\164\x69\x6f\x6e\163\x5f\145\x6e\165\155\x5f\x73\151\147\156\x5f\151\x6e\x5f\163\x65\x74\x74\x69\156\147\163", "\103\x75\x73\x74\157\155\x5f\x43\x65\162\x74\x69\x66\151\143\x61\164\145" => "\155\x6f\137\157\x70\164\x69\x6f\156\163\137\x65\156\165\155\x5f\x63\x75\x73\164\157\x6d\137\143\145\x72\164\x69\146\151\143\x61\x74\x65");
        return $XT;
    }
    public static function getVariableNames($Rd)
    {
        if ($Rd == "\155\157\137\x6f\160\x74\x69\157\x6e\x73\137\145\156\x75\155\x5f\151\144\145\x6e\164\151\164\x79\x5f\x70\162\x6f\166\151\x64\145\162") {
            goto FY;
        }
        if ($Rd == "\155\x6f\137\x6f\160\x74\x69\157\156\x73\x5f\x65\156\x75\155\137\x73\145\162\166\x69\143\145\x5f\160\162\x6f\x76\151\x64\145\162") {
            goto yC;
        }
        if ($Rd == "\x6d\x6f\x5f\157\160\164\x69\157\156\x73\x5f\x65\x6e\165\x6d\137\x6d\141\x70\x70\x69\x6e\147") {
            goto U2;
        }
        if ($Rd == "\x6d\157\x5f\x6f\160\164\x69\157\156\x73\137\145\x6e\x75\155\137\163\151\x67\x6e\x5f\151\156\137\163\x65\164\x74\151\x6e\147\163") {
            goto Dp;
        }
        if (!($Rd == "\x6d\157\137\x6f\x70\x74\151\157\156\x73\137\x65\x6e\165\155\x5f\143\x75\163\x74\x6f\155\137\143\145\162\164\x69\x66\x69\x63\x61\164\x65")) {
            goto P1;
        }
        $n9 = array("\x43\x75\163\164\157\x6d\137\x70\x72\x69\x76\x61\164\145\x5f\143\145\x72\x74" => "\x6d\x69\x6e\x69\x6f\162\x61\156\147\x65\x5f\163\141\x6d\x6c\137\x70\x72\x69\166\x61\x74\145\x5f\x63\145\162\x74\x69\146\x69\143\141\x74\x65", "\103\165\163\x74\x6f\155\x5f\160\x75\142\x6c\151\x63\x5f\143\145\162\x74" => "\155\151\156\x69\x6f\x72\141\x6e\x67\145\137\163\141\155\x6c\137\160\x75\x62\x6c\x5f\x63\145\x72\x74\x69\x66\x69\143\x61\x74\145");
        P1:
        goto mu;
        Dp:
        $n9 = array("\x50\x72\x6f\x74\x65\x63\164\137\167\150\157\154\145\x5f\x73\x69\164\x65" => "\x6d\x69\156\x69\157\x72\x61\x6e\147\145\x5f\x73\141\155\x6c\137\146\157\x72\x63\145\x5f\x61\x75\x74\150", "\x41\165\164\157\137\162\x65\144\x69\x72\145\143\x74" => "\155\x69\156\151\157\162\x61\156\x67\145\137\163\x61\155\154\x5f\x61\165\x74\x6f\x5f\x72\145\144\x69\x72\x65\143\x74\137\164\157\137\151\x64\x70", "\x42\x61\143\153\144\x6f\157\x72\x5f\x4c\157\x67\x69\x6e" => "\155\151\156\151\157\x72\x61\156\x67\x65\x5f\x73\x61\x6d\x6c\137\145\156\x61\x62\x6c\x65\x5f\x62\141\x63\x6b\144\x6f\157\x72", "\104\145\146\x61\165\x6c\x74\137\162\x65\x64\x69\162\145\143\x74\137\165\162\154" => "\155\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\137\x73\x61\x6d\154\137\x64\x65\x66\141\165\x6c\x74\x5f\x72\145\x6c\141\x79\x73\x74\141\164\145", "\142\x61\x63\x6b\144\157\x6f\162\121\165\x65\x72\171" => "\155\x69\x6e\x69\157\162\x61\x6e\147\145\137\x62\141\143\x6b\x64\157\x6f\162\x5f\161\165\x65\x72\171", "\145\x6e\141\x62\154\145\137\x64\157\155\x61\151\x6e\137\x72\145\163\164\x72\151\x63\x74\x69\x6f\156" => "\155\151\x6e\x69\x6f\x72\x61\156\x67\145\137\163\141\155\x6c\x5f\x65\x6e\141\142\154\145\x5f\144\x6f\155\141\151\x6e\137\162\145\x73\x74\162\x69\143\x74\x69\x6f\156", "\155\x69\x6e\151\x6f\162\141\x6e\147\145\x5f\163\141\155\x6c\x5f\x64\157\155\141\x69\156\x73\137\x61\x72\145\137\167\x68\151\x74\x65\137\157\162\x5f\x62\154\141\x63\153" => "\x6d\151\156\x69\157\162\x61\x6e\147\x65\x5f\x73\x61\x6d\x6c\137\144\157\155\x61\151\x6e\163\137\x61\162\145\x5f\167\150\151\x74\x65\137\x6f\162\137\x62\x6c\x61\x63\153", "\155\151\156\x69\x6f\x72\x61\156\147\x65\137\x73\141\155\x6c\137\144\157\155\x61\151\156\x73" => "\155\151\x6e\x69\157\x72\141\x6e\x67\145\137\x73\141\155\154\137\x64\157\x6d\141\x69\156\x73");
        mu:
        goto c9;
        U2:
        $n9 = array("\x55\163\x65\162\156\x61\x6d\145\x5f\x61\164\164\162" => "\155\151\x6e\x69\157\162\141\x6e\x67\145\137\163\x61\155\x6c\x5f\x75\x73\145\162\x6e\141\x6d\145\137\141\x74\164\162\x69\142\x75\x74\145", "\105\155\141\151\x6c\137\141\x74\x74\162" => "\155\x69\x6e\151\157\162\141\156\147\x65\137\163\x61\x6d\x6c\137\x65\x6d\141\151\x6c\137\x61\x74\164\x72\x69\142\165\164\x65", "\x52\157\154\x65" => "\x6d\151\156\151\157\162\x61\156\x67\145\x5f\x73\141\155\154\x5f\x69\x64\x70\x5f\x61\164\164\x72\x31\137\x6e\x61\155\145", "\122\157\154\145\137\x6d\x61\x70\160\151\x6e\x67" => "\x6d\x69\156\151\157\162\x61\156\x67\x65\137\x73\x61\155\x6c\137\x65\x6e\141\x62\x6c\145\x5f\x72\157\154\x65\x6d\141\x70\160\151\156\147", "\x44\151\x73\x61\x62\x6c\145\x5f\x61\165\164\x6f\x5f\143\x72\145\x61\164\x65\x5f\x75\163\145\x72" => "\x6d\151\156\x69\x6f\162\x61\x6e\147\x65\137\x73\141\x6d\x6c\137\x64\151\163\141\142\x6c\145\137\141\165\x74\157\x63\x72\145\141\164\145\x5f\x75\x73\145\162\x73", "\104\x65\146\x61\x75\x6c\x74\x5f\x72\x6f\x6c\x65" => "\155\x69\156\151\157\x72\x61\156\147\x65\137\163\x61\x6d\x6c\137\144\x65\x66\141\165\x6c\x74\137\162\x6f\154\145", "\104\157\x5f\156\157\x74\x5f\x75\160\144\141\164\145\x5f\165\x73\x65\x72\x5f\x72\x6f\x6c\145\163" => "\x6d\151\156\151\x6f\x72\141\156\147\x65\x5f\163\x61\x6d\x6c\x5f\144\x69\x73\141\x62\x6c\x65\137\162\157\x6c\x65\x5f\165\160\144\x61\164\145");
        c9:
        goto V_;
        yC:
        $n9 = array("\x49\144\145\156\x74\151\x74\x79\137\156\141\x6d\145" => "\155\x69\156\x69\x6f\162\141\156\x67\x65\137\x73\x61\x6d\x6c\137\x69\144\160\x5f\156\141\x6d\145", "\x49\163\163\165\x65\x72" => "\155\x69\x6e\x69\x6f\162\141\x6e\147\x65\137\163\141\x6d\154\x5f\151\144\160\137\151\x73\x73\165\145\162", "\105\x6e\141\142\154\x65\x5f\123\151\x67\156\145\144\x5f\x53\x53\117\137\141\x6e\x64\x5f\123\x4c\117" => "\155\151\156\151\157\162\141\156\x67\x65\137\163\141\155\154\137\x72\x65\161\165\145\x73\x74\137\x73\151\x67\x6e\x65\144", "\x4e\x61\x6d\145\x5f\111\104\x5f\146\157\162\x6d\x61\164" => "\x6d\x69\156\x69\157\x72\141\x6e\147\x65\x5f\x6e\141\155\x65\x69\x64\137\146\157\162\155\x61\x74", "\x42\x69\156\144\151\156\147\x5f\x53\x53\x4f" => "\155\151\156\x69\157\162\x61\x6e\147\145\137\x73\141\155\154\x5f\x68\164\x74\160\x5f\142\151\x6e\x64\x69\156\147", "\x42\151\156\x64\x69\x6e\x67\x5f\123\114\117" => "\155\x69\x6e\x69\x6f\x72\141\156\147\145\137\x73\x61\x6d\154\x5f\x68\164\164\x70\137\142\x69\x6e\x64\151\156\147\137\x73\154\x6f", "\x4c\x6f\147\x69\156\137\x55\122\114" => "\155\151\156\151\157\162\141\156\147\x65\x5f\x73\x61\155\154\137\151\x64\160\137\154\x6f\147\x69\x6e\137\x75\162\154", "\x45\x6e\141\x62\154\x65\137\x6c\157\147\157\x75\x74\x5f\167\151\x74\x68\x6f\x75\164\x5f\x72\x65\163\160\x6f\156\163\145" => "\x6d\x69\156\151\157\162\141\x6e\147\x65\137\x73\141\x6d\x6c\x5f\x65\156\141\x62\154\x65\137\154\157\x67\157\165\164", "\x4c\157\147\x6f\x75\x74\137\125\x52\114" => "\155\x69\156\x69\157\x72\x61\x6e\147\x65\137\x73\141\x6d\x6c\x5f\x69\144\160\137\154\x6f\147\157\165\164\137\165\x72\154", "\130\65\60\x39\x5f\143\x65\162\x74\151\146\x69\143\x61\x74\x65" => "\x6d\x69\x6e\x69\x6f\x72\141\x6e\x67\145\x5f\x73\x61\155\x6c\137\x69\144\160\137\170\65\60\x39\137\x63\145\x72\x74\151\146\151\143\141\164\145", "\x45\156\x61\142\154\145\x5f\x6c\157\147\151\x6e\137\x77\151\164\x68\x5f\123\101\x4d\114" => "\155\x69\156\x69\x6f\x72\x61\156\x67\x65\x5f\x73\141\x6d\154\x5f\x65\x6e\141\142\154\145\x5f\154\157\x67\x69\x6e", "\x53\151\x67\x6e\141\x74\x75\x72\x65\x5f\x41\x6c\147\x6f" => "\163\x65\143\165\x72\151\164\x79\x5f\163\x69\x67\x6e\141\164\165\162\145\137\x61\x6c\x67\157\162\x69\164\150\155");
        V_:
        goto Ng;
        FY:
        $n9 = array("\x42\x72\157\x6b\x65\162\x5f\x73\145\162\x76\x69\x63\145" => "\155\x6f\137\x73\141\155\x6c\x5f\x65\156\141\142\x6c\145\x5f\143\x6c\157\165\x64\x5f\142\162\x6f\x6b\x65\162", "\123\120\x5f\102\x61\x73\145\137\125\162\154" => "\155\151\156\x69\x6f\x72\x61\156\147\145\x5f\x73\x61\x6d\x6c\x5f\x62\141\163\x65\137\165\162\154", "\123\120\x5f\x45\x6e\164\151\x74\171\137\x49\104" => "\155\x69\x6e\151\157\x72\141\x6e\147\145\x5f\x73\141\x6d\154\137\145\x6e\x74\x69\x74\171\x5f\x69\144");
        Ng:
        return $n9;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\x63\x75\162\x6c", get_loaded_extensions())) {
            goto nt;
        }
        return 0;
        goto uf;
        nt:
        return 1;
        uf:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($Zb)
    {
        $RK = '';
        $IO = 0;
        dE:
        if (!($IO < strlen($Zb))) {
            goto Ir;
        }
        $RK .= sprintf("\x25\x30\62\170", ord($Zb[$IO]));
        aY:
        $IO++;
        goto dE;
        Ir:
        return $RK;
    }
    public static function generateRandomBytes($cq, $wH = TRUE)
    {
        return openssl_random_pseudo_bytes($cq);
    }
    public static function insertSignature(XMLSecurityKey $Rh, array $q3, DOMElement $P2 = NULL, DOMNode $As = NULL)
    {
        $sd = new XMLSecurityDSig();
        $sd->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($Rh->type) {
            case XMLSecurityKey::RSA_SHA256:
                $n3 = XMLSecurityDSig::SHA256;
                goto Lf;
            case XMLSecurityKey::RSA_SHA384:
                $n3 = XMLSecurityDSig::SHA384;
                goto Lf;
            case XMLSecurityKey::RSA_SHA512:
                $n3 = XMLSecurityDSig::SHA512;
                goto Lf;
            default:
                $n3 = XMLSecurityDSig::SHA1;
        }
        DH:
        Lf:
        $sd->addReferenceList(array($P2), $n3, array("\150\164\164\160\x3a\57\x2f\x77\x77\167\x2e\167\63\x2e\x6f\162\147\x2f\x32\x30\60\60\57\x30\71\x2f\x78\x6d\x6c\x64\x73\151\x67\43\x65\156\x76\x65\x6c\157\x70\x65\144\x2d\163\x69\x67\x6e\x61\x74\165\x72\x65", XMLSecurityDSig::EXC_C14N), array("\x69\x64\x5f\x6e\x61\x6d\145" => "\111\104", "\157\x76\x65\x72\167\x72\x69\x74\x65" => FALSE));
        $sd->sign($Rh);
        foreach ($q3 as $iN) {
            $sd->add509Cert($iN, TRUE);
            up:
        }
        hf:
        $sd->insertSignature($P2, $As);
    }
    public static function signXML($lg, $Es, $xs, $WN = '', $cn)
    {
        $E4 = array("\x74\171\x70\145" => "\x70\162\151\x76\x61\x74\x65");
        if ($cn == "\x52\123\x41\x5f\123\110\101\62\65\x36") {
            goto k5;
        }
        if ($cn == "\x52\123\x41\137\x53\110\101\x33\x38\x34") {
            goto hI;
        }
        if ($cn == "\122\x53\101\x5f\123\110\101\x35\61\62") {
            goto Ks;
        }
        if ($cn == "\122\123\101\137\x53\x48\101\x31") {
            goto jc;
        }
        goto Jh;
        k5:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $E4);
        goto Jh;
        hI:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $E4);
        goto Jh;
        Ks:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $E4);
        goto Jh;
        jc:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $E4);
        Jh:
        $Rh->loadKey($xs, TRUE);
        $KU = file_get_contents($Es);
        $wl = new DOMDocument();
        $wl->loadXML($lg);
        $GH = $wl->firstChild;
        if (!empty($WN)) {
            goto wM;
        }
        self::insertSignature($Rh, array($KU), $GH);
        goto zK;
        wM:
        $VL = $wl->getElementsByTagName($WN)->item(0);
        self::insertSignature($Rh, array($KU), $GH, $VL);
        zK:
        $wR = $GH->ownerDocument->saveXML($GH);
        $Nt = base64_encode($wR);
        return $Nt;
    }
    public static function postSAMLRequest($lY, $mX, $hC)
    {
        echo "\x3c\150\164\x6d\154\76\x3c\150\145\x61\144\76\xd\xa\x20\40\40\x20\x20\40\x20\x20\x20\x20\x20\40\40\40\40\x20\40\40\x3c\x73\x63\x72\151\x70\x74\40\163\x72\x63\75\x27\x68\164\164\x70\x73\72\x2f\57\143\x6f\x64\x65\56\x6a\161\165\145\x72\171\56\143\157\x6d\57\152\161\x75\x65\x72\x79\x2d\x31\56\x31\x31\56\x33\56\155\x69\156\x2e\x6a\x73\47\76\74\x2f\x73\x63\x72\x69\160\x74\76\xd\xa\x20\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\40\x20\x20\40\x20\x20\x3c\163\x63\x72\151\160\164\40\x74\171\160\145\75\x22\164\145\170\164\57\x6a\141\166\141\x73\143\162\151\x70\164\x22\x3e\44\50\146\165\156\143\164\x69\157\x6e\x28\51\x7b\x64\x6f\143\165\x6d\x65\156\164\x2e\146\x6f\162\x6d\163\133\x27\x73\x61\155\154\x2d\x72\x65\x71\165\x65\163\164\55\146\157\x72\x6d\47\135\56\x73\165\x62\x6d\151\x74\x28\x29\x3b\x7d\x29\73\x3c\x2f\163\x63\x72\151\x70\164\76\74\x2f\150\x65\x61\x64\76\15\12\40\40\40\x20\40\40\x20\40\x20\40\40\40\40\x20\40\40\40\40\74\142\157\x64\x79\76\x50\x6c\145\x61\x73\145\x20\167\x61\x69\164\x2e\56\56\74\146\157\162\x6d\40\141\x63\164\151\157\x6e\75\42" . $lY . "\42\x20\x6d\145\x74\x68\157\144\75\x22\160\x6f\163\x74\42\x20\151\144\x3d\42\x73\x61\155\154\x2d\162\x65\161\165\145\x73\x74\x2d\146\157\x72\155\x22\76\15\12\x20\x20\40\40\40\x20\40\x20\40\40\x20\x20\40\x20\x20\x20\x20\x20\x20\x20\x3c\151\x6e\x70\x75\x74\x20\x74\171\x70\145\75\42\x68\151\144\x64\145\x6e\42\x20\156\x61\155\x65\75\x22\123\x41\x4d\114\x52\x65\x71\x75\x65\163\x74\x22\x20\x76\x61\154\x75\145\x3d\x22" . $mX . "\x22\x20\x2f\x3e\15\12\x20\40\x20\40\40\40\x20\x20\x20\x20\x20\x20\40\40\40\40\x20\x20\x20\40\x3c\x69\x6e\160\165\164\x20\164\171\160\145\x3d\42\x68\x69\144\144\x65\156\42\40\x6e\x61\155\145\x3d\x22\122\145\x6c\x61\171\x53\x74\x61\x74\x65\42\x20\166\141\154\x75\x65\x3d\42" . htmlentities($hC) . "\x22\40\x2f\x3e\x3c\57\x66\x6f\x72\155\x3e\15\xa\x20\40\40\x20\x20\40\40\x20\40\x20\x20\x20\40\x20\40\x20\40\40\x20\x20\x3c\x2f\142\157\x64\x79\x3e\15\12\40\x20\40\x20\x20\x20\x20\x20\x20\40\x20\x20\x20\x20\74\x2f\x68\164\155\154\76";
        die;
    }
    public static function createAuthnRequest($L5, $u1, $e0, $vm, $aA = "\146\141\154\x73\145", $MR)
    {
        $gv = "\x3c\77\170\x6d\154\x20\x76\x65\x72\x73\151\x6f\x6e\x3d\42\x31\56\x30\42\x20\x65\156\143\x6f\144\151\156\147\75\42\x55\124\x46\55\70\x22\x3f\x3e" . "\74\163\x61\x6d\154\160\72\101\x75\x74\150\156\122\x65\x71\165\145\163\x74\40\x78\155\x6c\x6e\x73\x3a\x73\141\155\154\x70\75\42\x75\x72\156\72\x6f\x61\163\151\x73\72\156\141\155\145\163\72\x74\143\72\x53\x41\x4d\114\72\62\x2e\60\72\x70\162\x6f\x74\x6f\143\x6f\x6c\42\x20\170\x6d\x6c\x6e\163\75\42\165\162\156\x3a\x6f\x61\163\151\x73\x3a\x6e\x61\x6d\x65\163\72\x74\x63\x3a\x53\101\115\114\72\x32\x2e\60\72\141\163\x73\145\162\164\151\x6f\156\42\40\111\104\75\x22" . self::generateID() . "\42\40\x56\x65\162\163\151\157\x6e\x3d\42\62\56\60\x22\x20\x49\x73\163\x75\145\111\156\x73\x74\141\156\164\75\42" . self::generateTimestamp() . "\x22";
        if (!($aA == "\164\162\165\x65")) {
            goto so;
        }
        $gv .= "\x20\x46\157\x72\143\145\x41\x75\164\150\x6e\x3d\x22\x74\162\165\x65\x22";
        so:
        $gv .= "\40\x50\162\157\164\157\143\x6f\154\102\151\156\x64\151\156\147\75\42\165\x72\156\x3a\x6f\141\163\151\163\72\x6e\141\x6d\145\163\x3a\164\143\72\123\x41\115\114\x3a\62\56\x30\x3a\142\151\156\144\151\156\147\x73\72\x48\x54\124\x50\55\120\117\123\x54\42\40\101\x73\x73\x65\162\164\151\x6f\x6e\x43\x6f\156\x73\x75\x6d\x65\162\123\145\162\x76\151\x63\145\x55\122\114\x3d\42" . $L5 . "\x22\x20\x44\x65\163\164\151\156\x61\164\151\157\156\75\42" . $e0 . "\x22\76\74\163\x61\x6d\x6c\x3a\x49\163\x73\x75\145\162\x20\x78\x6d\154\x6e\x73\72\163\141\x6d\154\x3d\42\165\x72\156\72\157\x61\163\x69\163\x3a\156\141\155\145\x73\x3a\x74\x63\72\123\101\115\114\72\x32\x2e\x30\x3a\x61\x73\163\x65\162\164\x69\157\x6e\x22\76" . $u1 . "\x3c\57\163\x61\x6d\154\72\111\x73\163\165\x65\162\x3e\74\x73\141\x6d\x6c\160\x3a\x4e\x61\x6d\145\x49\104\x50\157\x6c\151\143\x79\x20\x41\154\154\x6f\167\x43\x72\x65\x61\164\x65\75\42\x74\162\165\145\42\x20\106\157\162\155\x61\x74\x3d\x22" . $vm . "\42\15\xa\40\40\x20\40\40\40\x20\40\40\x20\40\x20\x20\x20\40\x20\40\x20\x20\40\x20\x20\40\40\x2f\x3e\74\57\163\x61\155\154\x70\72\x41\165\164\x68\156\122\145\161\165\x65\163\164\x3e";
        if (!(empty($MR) || $MR == "\110\124\124\120\55\x52\x65\x64\151\x72\145\x63\164")) {
            goto NP;
        }
        $hV = gzdeflate($gv);
        $Nv = base64_encode($hV);
        $LR = urlencode($Nv);
        $gv = $LR;
        NP:
        return $gv;
    }
    public static function createSAMLRequest($L5, $u1, $e0, $vm, $aA = "\146\141\x6c\163\x65")
    {
        $gv = "\x3c\x3f\x78\155\x6c\x20\166\145\x72\163\x69\x6f\156\x3d\42\61\x2e\60\42\x20\145\156\143\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\106\55\70\42\77\x3e" . "\74\163\x61\x6d\x6c\x70\x3a\x41\x75\164\150\x6e\x52\145\161\x75\145\x73\x74\40\170\x6d\x6c\x6e\163\72\163\x61\x6d\x6c\x70\x3d\x22\x75\162\x6e\x3a\157\141\163\x69\x73\x3a\x6e\141\x6d\145\x73\x3a\164\143\x3a\123\x41\x4d\x4c\x3a\62\56\x30\x3a\x70\x72\x6f\x74\x6f\143\157\x6c\x22\40\111\104\75\x22" . self::generateID() . "\x22\40\126\145\162\x73\151\x6f\x6e\75\x22\62\56\x30\x22\x20\x49\163\163\165\x65\x49\156\x73\164\x61\x6e\x74\x3d\x22" . self::generateTimestamp() . "\x22";
        if (!($aA == "\x74\162\x75\x65")) {
            goto KC;
        }
        $gv .= "\40\106\x6f\x72\x63\145\101\165\164\150\156\x3d\42\x74\x72\165\145\x22";
        KC:
        $gv .= "\40\x50\162\x6f\164\157\143\x6f\x6c\102\x69\156\x64\151\156\147\75\42\x75\162\156\72\x6f\141\163\151\163\72\156\x61\155\x65\x73\x3a\x74\x63\x3a\x53\x41\115\114\x3a\x32\x2e\60\x3a\142\151\156\144\x69\x6e\x67\163\72\110\x54\x54\120\x2d\120\x4f\x53\124\42\40\x41\163\163\x65\162\164\x69\157\x6e\103\157\x6e\163\165\x6d\x65\x72\x53\x65\x72\x76\151\x63\145\x55\122\x4c\75\42" . $L5 . "\42\x20\x44\x65\163\x74\151\156\141\x74\151\157\156\75\x22" . $e0 . "\42\x3e\x3c\163\141\155\154\72\111\163\163\165\x65\x72\40\x78\x6d\154\156\x73\x3a\x73\141\x6d\x6c\x3d\42\x75\162\156\x3a\157\x61\x73\151\163\x3a\156\x61\155\x65\163\x3a\x74\x63\x3a\123\x41\x4d\114\72\62\x2e\x30\72\x61\x73\x73\x65\x72\x74\x69\x6f\156\x22\x3e" . $u1 . "\74\57\x73\141\155\x6c\72\111\x73\x73\165\x65\x72\x3e\x3c\163\141\x6d\x6c\x70\72\116\x61\155\145\x49\x44\120\157\x6c\x69\143\171\x20\x41\154\x6c\x6f\167\103\x72\x65\x61\164\x65\75\x22\x74\x72\x75\145\42\x20\x46\157\x72\x6d\x61\164\x3d\42" . $vm . "\42\15\xa\x20\x20\40\40\40\x20\x20\40\40\x20\40\40\x20\x20\x20\40\x20\x20\40\x20\x20\40\40\x20\x2f\76\x3c\57\x73\141\155\154\x70\x3a\x41\165\x74\150\x6e\122\x65\x71\x75\145\x73\164\x3e";
        return $gv;
    }
    public static function mo_saml_logout()
    {
        $Mb = variable_get("\x6d\151\x6e\x69\x6f\x72\141\156\147\x65\x5f\163\141\x6d\x6c\x5f\x69\x64\160\137\x6c\157\147\x6f\165\164\x5f\x75\x72\154", '');
        $pg = variable_get("\155\x69\156\151\157\162\141\156\147\x65\137\163\x61\x6d\154\137\150\x74\164\160\x5f\x62\x69\156\144\151\x6e\x67\x5f\163\x6c\x6f", '');
        $cn = variable_get("\x73\145\143\165\162\x69\x74\x79\x5f\x73\x69\147\x6e\141\164\165\162\145\137\141\x6c\147\157\x72\151\x74\150\155");
        if (empty($Mb)) {
            goto eu;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto Rb;
        }
        session_start();
        Rb:
        if (isset($_SESSION["\155\x6f\137\x73\x61\155\154\x5f\154\157\x67\x6f\165\x74\x5f\162\x65\161\x75\145\163\x74"])) {
            goto ZE;
        }
        if (isset($_SESSION["\155\x6f\137\163\141\x6d\x6c"]["\x6c\x6f\147\x67\x65\x64\x5f\x69\156\137\x77\151\x74\x68\137\151\144\160"])) {
            goto At;
        }
        session_destroy();
        if (!(isset($_REQUEST["\x52\x65\154\141\171\x53\164\x61\164\x65"]) && !empty($_REQUEST["\122\x65\x6c\x61\171\x53\164\x61\x74\145"]))) {
            goto ZR;
        }
        drupal_goto($_REQUEST["\122\145\154\x61\171\x53\x74\141\164\145"]);
        die;
        ZR:
        goto Yl;
        ZE:
        goto Yl;
        At:
        global $base_url;
        unset($_SESSION["\155\157\x5f\163\x61\155\154"]);
        $XO = $_SESSION["\x73\145\163\x73\x69\x6f\x6e\x49\156\x64\145\170"];
        $px = $_SESSION["\x4e\x61\155\145\x49\x44"];
        $yz = variable_get("\155\x69\x6e\x69\157\x72\x61\x6e\147\x65\137\163\141\x6d\x6c\x5f\x65\x6e\x61\142\154\145\137\x6c\x6f\x67\157\165\x74");
        if (!($yz == 1 || $yz == true)) {
            goto Nb;
        }
        session_destroy();
        Nb:
        if (isset($_SESSION["\x6c\x6f\x67\x6f\165\164"]) && !empty($_SESSION["\x6c\x6f\147\157\x75\164"])) {
            goto V7;
        }
        $cz = Utilities::miniorange_get_baseURL();
        goto ME;
        V7:
        $cz = $_SESSION["\x6c\157\x67\157\x75\x74"];
        ME:
        $Ba = Utilities::getIssuer();
        $Yi = variable_get("\x6d\x69\156\x69\x6f\162\x61\x6e\147\145\137\163\141\155\x6c\137\x72\145\161\x75\145\163\164\137\x73\151\147\x6e\145\144");
        $e0 = $Mb;
        $ak = $cz;
        $Mq = Utilities::createLogoutRequest($px, $XO, $Ba, $e0, $pg);
        $t6 = drupal_get_path("\155\x6f\144\165\154\145", "\155\151\156\x69\x6f\x72\141\x6e\147\145\x5f\163\x61\155\154");
        if (empty($pg) || $pg == "\110\x74\x74\x70\x52\145\144\151\162\145\x63\164") {
            goto sF;
        }
        if ($Yi) {
            goto DN;
        }
        $Nt = base64_encode($Mq);
        Utilities::postSAMLRequest($Mb, $Nt, $ak);
        die;
        DN:
        $xs = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $t6 . DIRECTORY_SEPARATOR . "\162\x65\x73\157\165\162\x63\145\163" . DIRECTORY_SEPARATOR . Utilities::getKeyName();
        $Es = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $t6 . DIRECTORY_SEPARATOR . "\162\x65\x73\x6f\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . self::getCertficateName();
        $Nt = Utilities::signXML($Mq, $Es, $xs, "\x4e\141\x6d\145\x49\104", $cn);
        Utilities::postSAMLRequest($Mb, $Nt, $ak);
        goto F5;
        sF:
        $T9 = $Mb;
        if (strpos($Mb, "\x3f") !== false) {
            goto s8;
        }
        $T9 .= "\x3f";
        goto cy;
        s8:
        $T9 .= "\x26";
        cy:
        if ($Yi) {
            goto m3;
        }
        $T9 .= "\123\x41\115\114\x52\145\161\165\x65\x73\164\x3d" . $Mq . "\46\x52\x65\154\x61\x79\x53\x74\141\x74\x65\75" . urlencode($ak);
        header("\114\157\143\x61\164\151\157\x6e\x3a\x20" . $T9);
        die;
        m3:
        if ($cn == "\x52\123\101\137\x53\110\101\62\65\66") {
            goto OE;
        }
        if ($cn == "\x52\x53\101\x5f\x53\x48\101\63\70\64") {
            goto rU;
        }
        if ($cn == "\x52\x53\x41\x5f\x53\x48\101\x35\x31\62") {
            goto nX;
        }
        if ($cn == "\x52\123\x41\137\x53\110\101\61") {
            goto A1;
        }
        goto xc;
        OE:
        $Mq = "\x53\x41\x4d\x4c\x52\145\161\165\145\x73\164\x3d" . $Mq . "\46\122\145\154\141\x79\123\164\141\164\145\75" . urlencode($ak) . "\46\x53\x69\147\x41\154\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto xc;
        rU:
        $Mq = "\x53\x41\115\114\x52\145\x71\x75\x65\x73\x74\x3d" . $Mq . "\46\x52\145\154\141\171\123\x74\x61\x74\x65\x3d" . urlencode($ak) . "\46\x53\151\147\101\x6c\x67\75" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto xc;
        nX:
        $Mq = "\123\x41\115\114\122\x65\161\165\145\x73\x74\x3d" . $Mq . "\x26\x52\145\x6c\x61\171\x53\x74\141\x74\145\x3d" . urlencode($ak) . "\x26\x53\x69\147\101\154\x67\75" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto xc;
        A1:
        $Mq = "\x53\101\115\x4c\122\x65\x71\x75\145\163\x74\75" . $Mq . "\x26\x52\145\x6c\x61\171\x53\164\x61\x74\x65\75" . urlencode($ak) . "\x26\123\151\147\101\x6c\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA1);
        xc:
        $E4 = array("\164\171\x70\x65" => "\x70\x72\151\x76\x61\164\145");
        if ($cn == "\122\x53\101\x5f\123\110\101\x32\x35\66") {
            goto EC;
        }
        if ($cn == "\122\x53\x41\x5f\123\110\x41\63\70\64") {
            goto Wg;
        }
        if ($cn == "\122\123\101\137\123\110\x41\x35\61\62") {
            goto lw;
        }
        if ($cn == "\x52\123\x41\137\123\x48\x41\61") {
            goto cP;
        }
        goto Nd;
        EC:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $E4);
        goto Nd;
        Wg:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $E4);
        goto Nd;
        lw:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $E4);
        goto Nd;
        cP:
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $E4);
        Nd:
        $oj = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $t6 . DIRECTORY_SEPARATOR . "\x72\x65\163\157\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . self::getKeyName();
        $Rh->loadKey($oj, FALSE);
        $wG = new XMLSecurityDSig();
        $yN = $Rh->signData($Mq);
        $yN = base64_encode($yN);
        $T9 .= $Mq . "\46\123\x69\x67\x6e\141\x74\x75\x72\145\75" . urlencode($yN);
        header("\114\x6f\x63\141\x74\x69\157\x6e\72\40" . $T9);
        die;
        F5:
        Yl:
        eu:
    }
    public static function createLogoutRequest($px, $XO = '', $u1, $e0, $Cx = "\110\164\x74\160\x52\145\x64\x69\x72\145\143\164")
    {
        $gv = "\74\x3f\x78\x6d\x6c\x20\x76\145\162\x73\x69\x6f\x6e\75\x22\61\x2e\60\x22\40\x65\156\x63\x6f\x64\151\x6e\x67\x3d\x22\125\124\x46\x2d\70\42\77\76" . "\x3c\x73\x61\x6d\x6c\160\72\x4c\157\147\157\165\x74\x52\x65\161\165\145\x73\x74\40\x78\x6d\154\x6e\x73\72\163\x61\x6d\x6c\x70\x3d\42\165\162\x6e\72\x6f\141\163\151\x73\72\156\x61\x6d\x65\163\x3a\x74\143\x3a\x53\101\x4d\x4c\x3a\62\x2e\60\72\x70\162\x6f\164\157\143\157\154\42\40\170\155\x6c\156\x73\72\x73\x61\155\154\x3d\42\165\162\x6e\x3a\157\141\163\x69\x73\72\x6e\141\x6d\145\x73\x3a\164\x63\72\x53\x41\x4d\114\72\62\56\60\72\141\163\x73\145\162\x74\x69\157\x6e\x22\40\x49\x44\x3d\x22" . self::generateID() . "\42\x20\x49\x73\163\165\x65\111\x6e\163\x74\x61\156\x74\75\x22" . self::generateTimestamp() . "\x22\x20\x56\x65\x72\163\x69\157\x6e\x3d\x22\62\56\60\x22\40\x44\x65\163\x74\151\156\141\x74\x69\x6f\x6e\75\x22" . $e0 . "\x22\x3e\xd\12\x9\11\11\11\11\11\x3c\x73\141\x6d\x6c\x3a\x49\163\x73\165\x65\162\x20\170\x6d\154\156\163\72\163\x61\155\154\x3d\x22\165\x72\x6e\x3a\157\141\163\x69\163\72\x6e\x61\155\145\163\x3a\x74\143\x3a\123\101\115\x4c\x3a\x32\56\x30\x3a\141\163\163\145\x72\x74\151\x6f\x6e\42\76" . $u1 . "\x3c\x2f\163\x61\155\x6c\x3a\111\163\x73\x75\145\x72\x3e\xd\12\11\x9\11\11\x9\x9\74\163\141\155\154\x3a\x4e\x61\155\x65\x49\104\40\170\155\154\x6e\x73\72\x73\141\155\154\75\42\165\162\x6e\x3a\157\x61\163\x69\x73\72\156\x61\x6d\x65\163\x3a\x74\143\72\123\x41\x4d\114\72\62\x2e\x30\x3a\141\x73\163\x65\162\x74\x69\157\156\x22\x3e" . $px . "\74\57\163\141\155\154\72\116\x61\x6d\145\111\x44\76";
        if (empty($XO)) {
            goto aA;
        }
        $gv .= "\74\163\x61\x6d\x6c\160\x3a\x53\x65\x73\x73\151\157\x6e\x49\156\x64\x65\x78\x3e" . $XO . "\x3c\x2f\163\x61\x6d\x6c\x70\72\123\x65\163\x73\x69\157\x6e\x49\x6e\144\145\170\76";
        aA:
        $gv .= "\x3c\57\x73\141\x6d\154\x70\72\114\157\147\x6f\x75\x74\x52\145\x71\x75\145\x73\x74\76";
        if (!(empty($Cx) || $Cx == "\x48\164\x74\160\122\145\144\x69\162\145\x63\x74")) {
            goto kY;
        }
        $hV = gzdeflate($gv);
        $Nv = base64_encode($hV);
        $LR = urlencode($Nv);
        $gv = $LR;
        kY:
        return $gv;
    }
    public static function upload_metadata($w5, $TE = false)
    {
        if (empty(variable_get("\155\151\x6e\x69\x6f\x72\141\x6e\x67\145\x5f\x73\141\x6d\154\137\151\x64\x70\137\156\141\155\145"))) {
            goto VK;
        }
        variable_set("\155\151\x6e\x69\x6f\162\141\156\147\x65\x5f\x73\x61\155\x6c\x5f\151\x64\160\x5f\x6e\x61\155\x65", "\111\x64\145\156\164\x69\x74\171\x20\120\162\x6f\166\151\144\145\162");
        VK:
        global $base_url;
        require_once drupal_get_path("\x6d\x6f\x64\x75\x6c\145", "\155\x69\x6e\151\157\162\x61\x6e\147\145\137\x73\x61\x6d\x6c") . DIRECTORY_SEPARATOR . "\151\156\x63\x6c\165\x64\145\x73" . DIRECTORY_SEPARATOR . "\x4d\x65\164\x61\144\x61\164\141\x52\145\x61\x64\145\x72\x2e\160\x68\160";
        $wl = new DOMDocument();
        $wl->loadXML($w5);
        restore_error_handler();
        $dp = $wl->firstChild;
        if (!empty($dp)) {
            goto p0;
        }
        drupal_set_message(t("\120\x6c\145\141\x73\x65\40\160\162\x6f\166\x69\144\x65\40\x61\40\166\141\154\151\144\40\x6d\145\x74\141\144\141\164\141\x20\146\151\x6c\145\x2e"), "\x65\162\162\157\x72");
        return;
        goto u4;
        p0:
        $mU = new IDPMetadataReader($wl);
        $jc = $mU->getIdentityProviders();
        if (!empty($jc)) {
            goto Js;
        }
        drupal_set_message(t("\x50\154\x65\141\163\145\40\x70\162\157\x76\x69\144\x65\x20\x61\x20\166\x61\x6c\151\144\40\155\145\x74\x61\x64\141\x74\x61\40\x66\x69\x6c\x65\x2e"), "\145\162\x72\x6f\162");
        return;
        Js:
        foreach ($jc as $Rh => $Jo) {
            $C3 = $Jo->getLoginURL("\110\124\124\x50\55\122\x65\x64\151\x72\145\143\x74");
            $Mb = $Jo->getLogoutURL("\x48\124\x54\120\x2d\122\x65\x64\151\162\x65\x63\164");
            if (!empty($C3)) {
                goto o2;
            }
            $C3 = $Jo->getLoginURL("\x48\x54\124\x50\55\x50\117\123\x54");
            o2:
            if (!empty($Mb)) {
                goto v8;
            }
            $Mb = $Jo->getLogoutURL("\110\x54\x54\120\x2d\x50\x4f\123\x54");
            v8:
            $ir = $Jo->getEntityID();
            $XV = $Jo->getSigningCertificate();
            $rg = $base_url;
            if (!($TE == true)) {
                goto g1;
            }
            variable_set("\x6d\x69\x6e\151\x6f\x72\x61\156\147\x65\137\163\x61\155\x6c\x5f\151\144\x70\x5f\154\x6f\x67\x69\x6e\137\165\x72\154", $C3);
            variable_set("\x6d\151\x6e\151\157\x72\141\x6e\x67\x65\137\x73\141\155\x6c\x5f\151\144\x70\137\154\x6f\x67\x6f\165\164\137\165\162\154", $Mb);
            g1:
            variable_set("\x6d\151\156\151\157\x72\141\x6e\x67\x65\x5f\x73\141\x6d\154\137\x69\144\x70\x5f\151\163\163\165\x65\x72", $ir);
            variable_set("\155\x69\x6e\x69\157\x72\x61\x6e\147\145\x5f\163\141\155\x6c\137\x69\x64\160\x5f\x78\65\60\x39\x5f\x63\145\x72\164\151\146\151\x63\141\164\145", $XV);
            Vv:
        }
        wk:
        if (!($TE == true)) {
            goto Rl;
        }
        drupal_set_message(t("\x49\x64\x65\x6e\x74\151\164\x79\40\120\x72\x6f\166\151\x64\145\x72\x20\103\157\156\146\x69\147\165\162\x61\x74\x69\157\156\40\x73\x75\143\143\x65\163\163\146\165\x6c\x6c\x79\40\x73\x61\x76\x65\x64\56"));
        return;
        Rl:
        u4:
    }
    public static function generateTimestamp($Fi = NULL)
    {
        if (!($Fi === NULL)) {
            goto pq;
        }
        $Fi = time();
        pq:
        return gmdate("\x59\55\x6d\55\x64\x5c\124\x48\72\151\72\x73\134\132", $Fi);
    }
    public static function xpQuery(DOMNode $fz, $U3)
    {
        static $UL = NULL;
        if ($fz instanceof DOMDocument) {
            goto cS;
        }
        $Ij = $fz->ownerDocument;
        goto LL;
        cS:
        $Ij = $fz;
        LL:
        if (!($UL === NULL || !$UL->document->isSameNode($Ij))) {
            goto jW;
        }
        $UL = new DOMXPath($Ij);
        $UL->registerNamespace("\163\x6f\141\160\55\x65\156\x76", "\150\164\x74\160\72\x2f\x2f\163\143\x68\x65\155\141\x73\x2e\x78\155\154\163\157\141\160\56\x6f\162\147\57\163\x6f\x61\x70\57\145\156\x76\x65\x6c\x6f\160\145\x2f");
        $UL->registerNamespace("\x73\141\x6d\154\137\160\x72\x6f\x74\157\143\157\154", "\165\162\x6e\72\157\141\x73\151\x73\72\156\141\x6d\145\163\x3a\x74\x63\72\x53\x41\x4d\x4c\x3a\x32\56\x30\72\x70\x72\x6f\164\x6f\143\x6f\154");
        $UL->registerNamespace("\x73\x61\155\154\x5f\141\x73\163\x65\x72\164\x69\x6f\156", "\165\x72\x6e\x3a\157\141\163\151\163\x3a\x6e\x61\x6d\145\x73\72\164\143\72\x53\x41\x4d\114\x3a\62\x2e\x30\x3a\141\x73\163\x65\x72\164\x69\157\156");
        $UL->registerNamespace("\x73\x61\155\x6c\137\x6d\x65\164\141\x64\x61\x74\141", "\x75\x72\x6e\x3a\157\141\x73\x69\x73\72\x6e\x61\155\145\163\72\164\x63\72\x53\x41\115\x4c\x3a\62\56\x30\x3a\x6d\145\x74\141\x64\x61\x74\x61");
        $UL->registerNamespace("\x64\x73", "\150\164\x74\x70\x3a\57\57\167\x77\x77\x2e\167\63\56\157\x72\147\x2f\62\60\x30\60\57\60\x39\57\x78\x6d\154\x64\163\151\x67\43");
        $UL->registerNamespace("\x78\145\x6e\x63", "\150\164\164\160\x3a\57\57\x77\167\167\x2e\167\x33\56\157\162\147\x2f\62\x30\60\61\x2f\x30\64\x2f\x78\x6d\x6c\x65\156\143\43");
        jW:
        $p7 = $UL->query($U3, $fz);
        $RK = array();
        $IO = 0;
        CF:
        if (!($IO < $p7->length)) {
            goto v4;
        }
        $RK[$IO] = $p7->item($IO);
        qi:
        $IO++;
        goto CF;
        v4:
        return $RK;
    }
    public static function parseNameId(DOMElement $lg)
    {
        $RK = array("\x56\141\x6c\x75\145" => trim($lg->textContent));
        foreach (array("\116\x61\155\145\121\x75\x61\154\x69\146\151\x65\162", "\x53\120\x4e\x61\155\145\x51\165\x61\x6c\151\146\151\x65\x72", "\x46\157\162\155\141\x74") as $Rx) {
            if (!$lg->hasAttribute($Rx)) {
                goto xn;
            }
            $RK[$Rx] = $lg->getAttribute($Rx);
            xn:
            jr:
        }
        vy:
        return $RK;
    }
    public static function xsDateTimeToTimestamp($jm)
    {
        $fv = array();
        $PE = "\57\x5e\50\134\x64\134\x64\x5c\x64\134\x64\51\55\50\134\144\134\x64\x29\55\x28\x5c\x64\134\144\51\124\x28\134\x64\x5c\144\51\72\x28\x5c\x64\x5c\144\x29\x3a\x28\134\144\134\144\x29\x28\77\x3a\134\x2e\134\144\53\51\x3f\132\44\x2f\104";
        if (!(preg_match($PE, $jm, $fv) == 0)) {
            goto RB;
        }
        echo sprintf("\156\x76\141\x6c\151\144\x20\x53\x41\x4d\114\x32\x20\x74\x69\155\145\163\164\x61\x6d\160\40\x70\141\x73\163\x65\144\x20\x74\157\40\170\x73\x44\141\x74\145\x54\x69\155\x65\124\x6f\x54\151\x6d\x65\163\164\141\155\160\72\40" . $jm);
        die;
        RB:
        $vB = intval($fv[1]);
        $GC = intval($fv[2]);
        $ye = intval($fv[3]);
        $Br = intval($fv[4]);
        $QJ = intval($fv[5]);
        $Gj = intval($fv[6]);
        $e6 = gmmktime($Br, $QJ, $Gj, $GC, $ye, $vB);
        return $e6;
    }
    public static function extractStrings(DOMElement $mP, $Ft, $R7)
    {
        $RK = array();
        $fz = $mP->firstChild;
        SO:
        if (!($fz !== NULL)) {
            goto st;
        }
        if (!($fz->namespaceURI !== $Ft || $fz->localName !== $R7)) {
            goto c7;
        }
        goto hL;
        c7:
        $RK[] = trim($fz->textContent);
        hL:
        $fz = $fz->nextSibling;
        goto SO;
        st:
        return $RK;
    }
    public static function validateElement(DOMElement $P2)
    {
        $sd = new XMLSecurityDSig();
        $sd->idKeys[] = "\111\x44";
        $SN = self::xpQuery($P2, "\x2e\57\x64\x73\72\123\151\x67\156\x61\x74\x75\162\x65");
        if (count($SN) === 0) {
            goto kg;
        }
        if (count($SN) > 1) {
            goto J_;
        }
        goto wS;
        kg:
        return FALSE;
        goto wS;
        J_:
        echo sprintf("\130\115\114\x53\145\x63\72\40\x6d\x6f\x72\x65\x20\164\x68\141\156\40\157\x6e\145\40\x73\x69\147\x6e\x61\x74\x75\162\145\40\x65\x6c\145\x6d\145\x6e\x74\x20\151\156\x20\x72\x6f\x6f\x74\x2e");
        die;
        wS:
        $SN = $SN[0];
        $sd->sigNode = $SN;
        $sd->canonicalizeSignedInfo();
        if ($sd->validateReference()) {
            goto sG;
        }
        echo sprintf("\x58\x4d\114\163\x65\143\x3a\40\144\x69\x67\145\163\x74\x20\x76\x61\x6c\151\144\x61\x74\x69\x6f\156\40\146\141\151\154\x65\144");
        die;
        sG:
        $GX = FALSE;
        foreach ($sd->getValidatedNodes() as $bF) {
            if ($bF->isSameNode($P2)) {
                goto qH;
            }
            if ($P2->parentNode instanceof DOMDocument && $bF->isSameNode($P2->ownerDocument)) {
                goto R6;
            }
            goto XN;
            qH:
            $GX = TRUE;
            goto NQ;
            goto XN;
            R6:
            $GX = TRUE;
            goto NQ;
            XN:
            r6:
        }
        NQ:
        if ($GX) {
            goto lE;
        }
        echo sprintf("\130\115\114\x53\145\143\72\x20\124\150\145\40\162\x6f\157\x74\x20\145\x6c\x65\155\145\156\164\x20\151\163\40\x6e\157\x74\x20\163\151\x67\156\145\x64\x2e");
        die;
        lE:
        $q3 = array();
        foreach (self::xpQuery($SN, "\x2e\57\x64\x73\x3a\113\145\x79\111\156\146\157\57\x64\x73\72\130\x35\x30\71\104\141\164\x61\x2f\x64\x73\x3a\130\x35\60\x39\103\x65\162\x74\x69\146\151\143\141\164\145") as $VI) {
            $I2 = trim($VI->textContent);
            $I2 = str_replace(array("\15", "\xa", "\11", "\x20"), '', $I2);
            $q3[] = $I2;
            FE:
        }
        ib:
        $RK = array("\x53\151\147\x6e\x61\x74\165\x72\x65" => $sd, "\103\145\x72\164\151\146\151\143\x61\x74\x65\x73" => $q3);
        return $RK;
    }
    public static function validateSignature(array $aF, XMLSecurityKey $Rh)
    {
        $sd = $aF["\123\x69\147\156\141\164\165\162\x65"];
        $uo = self::xpQuery($sd->sigNode, "\x2e\x2f\144\163\x3a\123\x69\147\x6e\145\144\111\156\146\157\x2f\x64\x73\x3a\x53\151\x67\x6e\x61\x74\x75\x72\x65\x4d\145\x74\x68\x6f\x64");
        if (!empty($uo)) {
            goto gv;
        }
        echo sprintf("\115\151\x73\x73\151\x6e\x67\x20\123\x69\x67\156\141\x74\x75\162\145\x4d\x65\x74\x68\157\144\x20\145\154\145\x6d\145\156\164");
        die;
        gv:
        $uo = $uo[0];
        if ($uo->hasAttribute("\x41\x6c\x67\157\162\x69\164\x68\x6d")) {
            goto Ip;
        }
        echo sprintf("\x4d\151\163\x73\151\x6e\x67\x20\x41\x6c\147\x6f\x72\x69\x74\150\x6d\55\x61\164\x74\162\151\142\x75\x74\145\x20\157\x6e\x20\123\x69\147\x6e\x61\x74\165\162\x65\115\145\x74\x68\157\x64\x20\145\x6c\x65\155\145\156\x74\56");
        die;
        Ip:
        $F8 = $uo->getAttribute("\x41\154\147\157\x72\x69\x74\150\x6d");
        if (!($Rh->type === XMLSecurityKey::RSA_SHA1 && $F8 !== $Rh->type)) {
            goto qZ;
        }
        $Rh = self::castKey($Rh, $F8);
        qZ:
        if ($sd->verify($Rh)) {
            goto uR;
        }
        echo sprintf("\x55\x6e\x61\x62\154\x65\40\164\x6f\x20\x76\x61\154\x69\144\141\x74\x65\x20\x53\147\x6e\x61\164\165\162\145");
        die;
        uR:
    }
    public static function castKey(XMLSecurityKey $Rh, $PB, $n3 = "\160\165\142\154\151\143")
    {
        if (!($Rh->type === $PB)) {
            goto Qx;
        }
        return $Rh;
        Qx:
        $rc = openssl_pkey_get_details($Rh->key);
        if (!($rc === FALSE)) {
            goto h0;
        }
        echo sprintf("\x55\156\x61\x62\x6c\x65\40\164\x6f\x20\147\145\164\40\153\x65\x79\40\x64\145\164\141\x69\154\x73\x20\146\162\157\x6d\40\130\115\114\x53\145\x63\x75\x72\x69\164\171\x4b\x65\x79\x2e");
        die;
        h0:
        if (isset($rc["\153\x65\171"])) {
            goto Mz;
        }
        echo sprintf("\115\x69\x73\163\151\156\x67\40\153\145\171\40\x69\156\x20\160\x75\142\154\151\x63\x20\153\145\171\40\144\x65\x74\x61\151\154\x73\56");
        die;
        Mz:
        $L_ = new XMLSecurityKey($PB, array("\164\x79\x70\145" => $n3));
        $L_->loadKey($rc["\153\x65\171"]);
        return $L_;
    }
    public static function processResponse($iU, $WU, $Yp, SAML2_Response $MZ, $hC)
    {
        $Ec = $MZ->getDestination();
        if (!($Ec !== NULL && $Ec !== $iU)) {
            goto vr;
        }
        echo sprintf("\x44\x65\163\x74\151\x6e\141\164\x69\x6f\x6e\40\x69\x6e\40\162\x65\163\x70\x6f\x6e\x73\x65\40\144\157\x65\163\x6e\x27\164\40\x6d\x61\x74\x63\150\40\x74\150\x65\40\143\165\x72\162\x65\156\164\40\125\x52\114\56\x20\x44\x65\x73\x74\x69\156\141\x74\x69\x6f\x6e\40\x69\x73\40\x22" . $Ec . "\42\x2c\40\143\165\162\x72\145\156\x74\40\125\122\114\40\x69\x73\x20\x22" . $iU . "\42\56");
        die;
        vr:
        $xz = self::checkSign($WU, $Yp, $hC);
        return $xz;
    }
    public static function checkSign($WU, $Yp, $hC)
    {
        $q3 = $Yp["\x43\145\x72\164\151\x66\151\143\141\164\x65\163"];
        if (!(count($q3) === 0)) {
            goto uF;
        }
        return FALSE;
        uF:
        $KL = self::findCertificate($WU, $q3, $hC);
        $Tl = NULL;
        $Rh = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\x70\x65" => "\x70\165\x62\154\151\x63"));
        $Rh->loadKey($KL);
        try {
            self::validateSignature($Yp, $Rh);
            return TRUE;
        } catch (Exception $R8) {
            $Tl = $R8;
        }
        if ($Tl !== NULL) {
            goto bp;
        }
        return FALSE;
        goto rv;
        bp:
        throw $Tl;
        rv:
    }
    private static function findCertificate(array $WS, array $q3, $hC)
    {
        $Jn = $q3[0];
        $Jn = chunk_split($Jn, 80);
        foreach ($q3 as $OQ) {
            $VV = strtolower(sha1(base64_decode($OQ)));
            if (!in_array($VV, $WS, TRUE)) {
                goto XI;
            }
            $aO = "\55\55\x2d\x2d\55\102\105\x47\x49\116\40\x43\x45\x52\124\x49\106\x49\x43\x41\124\x45\x2d\55\x2d\55\x2d\xa" . chunk_split($OQ, 64) . "\x2d\55\55\x2d\x2d\x45\116\104\x20\103\x45\x52\124\x49\x46\x49\x43\101\124\x45\55\x2d\x2d\x2d\55\12";
            return $aO;
            XI:
            R1:
        }
        w5:
        if ($hC == "\164\145\163\164\x56\141\154\151\x64\141\164\145") {
            goto ZY;
        }
        echo "\x20\74\x64\x69\166\x20\163\164\x79\154\x65\75\42\x63\x6f\154\x6f\162\72\40\x23\x61\71\x34\64\64\62\x3b\x66\157\156\164\55\x73\x69\x7a\145\72\61\x34\160\164\73\x20\x6d\141\x72\x67\151\x6e\x2d\x62\x6f\x74\164\x6f\155\x3a\x32\60\160\x78\73\x22\x3e\74\x70\76\74\x73\164\162\157\156\x67\76\105\x72\x72\x6f\162\72\x20\x3c\x2f\x73\164\162\x6f\156\147\x3e\127\145\40\x63\x6f\165\154\144\40\156\x6f\164\40\x73\x69\147\x6e\40\171\x6f\x75\x20\x69\156\x2e\40\x50\x6c\x65\x61\x73\x65\x20\143\157\x6e\x74\141\x63\x74\x20\x79\x6f\165\162\40\101\x64\155\151\156\151\163\x74\x72\141\x74\157\162\56\74\57\x70\76\74\57\144\151\x76\x3e";
        die;
        goto cl;
        ZY:
        echo "\x3c\x64\x69\166\40\x73\x74\x79\154\145\x3d\x22\x66\x6f\156\164\55\146\x61\155\151\154\x79\x3a\x43\141\x6c\x69\142\162\151\73\x70\x61\144\x64\x69\x6e\147\x3a\60\40\63\x25\73\x22\76";
        echo "\x3c\x64\x69\166\x20\x73\164\x79\154\145\x3d\x22\x63\x6f\x6c\157\x72\72\40\x23\141\71\64\x34\x34\62\x3b\142\141\143\153\147\x72\x6f\165\156\x64\55\x63\x6f\x6c\x6f\162\x3a\x20\43\x66\x32\x64\x65\144\x65\73\160\x61\144\144\151\156\147\72\x20\x31\x35\160\x78\x3b\x6d\x61\162\x67\151\156\x2d\x62\157\164\164\157\155\72\x20\62\60\160\170\73\x74\145\170\x74\55\x61\x6c\x69\x67\x6e\x3a\143\145\156\x74\145\x72\x3b\142\157\162\x64\145\x72\72\61\x70\x78\40\x73\x6f\x6c\151\144\x20\43\x45\x36\x42\x33\102\x32\73\x66\x6f\156\x74\x2d\163\x69\172\x65\72\x31\x38\160\x74\x3b\42\x3e\40\x45\x52\x52\117\x52\74\x2f\144\x69\x76\76\xd\12\40\40\x20\x20\x20\40\40\x20\x20\x20\x20\x20\x3c\144\151\x76\x20\x73\x74\171\x6c\x65\x3d\x22\x63\x6f\x6c\157\x72\x3a\x20\x23\x61\71\64\64\64\x32\x3b\x66\157\x6e\164\x2d\x73\151\x7a\x65\x3a\61\x34\x70\164\x3b\40\155\x61\162\147\x69\156\x2d\142\157\164\164\157\x6d\x3a\x32\x30\x70\170\73\x22\x3e\74\160\x3e\74\163\x74\x72\x6f\156\147\76\105\162\x72\157\x72\x3a\x20\x3c\x2f\163\164\162\x6f\156\x67\76\x55\156\141\142\x6c\145\40\164\x6f\40\x66\151\x6e\x64\x20\x61\x20\143\x65\x72\x74\151\146\x69\143\141\x74\145\40\x6d\141\164\143\150\151\156\x67\x20\x74\150\145\x20\143\x6f\x6e\146\x69\x67\x75\162\x65\144\40\x66\x69\156\147\145\162\x70\162\x69\x6e\x74\56\x3c\57\160\76\15\xa\x20\x20\x20\40\40\x20\x20\40\40\40\x20\x20\x3c\x70\76\74\x73\164\x72\x6f\156\x67\76\120\x6f\163\163\151\x62\154\x65\40\103\x61\165\x73\145\72\x20\x3c\57\163\164\162\157\x6e\147\x3e\x43\157\156\164\145\156\x74\40\x6f\146\40\47\x58\x2e\x35\x30\x39\x20\103\x65\162\x74\x69\146\x69\143\x61\164\x65\47\x20\146\x69\145\154\x64\40\151\156\40\x53\x65\162\166\x69\143\x65\40\120\x72\157\166\x69\x64\145\162\x20\123\x65\164\x74\x69\x6e\147\163\x20\151\163\40\x69\x6e\143\157\162\x72\x65\x63\164\x3c\57\160\x3e\xd\xa\11\x9\x9\x3c\x70\x3e\x3c\x62\x3e\105\170\x70\x65\143\164\x65\x64\40\x76\141\154\165\145\x3a\40\x3c\x2f\x62\76" . $Jn . "\x3c\57\x70\76";
        echo str_repeat("\x26\156\x62\163\x70\x3b", 15);
        echo "\x3c\57\144\151\x76\x3e\xd\12\40\40\40\x20\40\x20\40\x20\x20\40\40\40\40\40\x20\40\x3c\144\x69\x76\40\x73\x74\x79\x6c\x65\75\42\x6d\141\x72\x67\151\x6e\72\x33\x25\x3b\144\x69\x73\x70\154\x61\x79\x3a\142\x6c\157\143\153\x3b\164\x65\170\x74\x2d\x61\154\x69\147\x6e\72\143\x65\x6e\x74\x65\162\73\x22\76\15\12\40\40\40\x20\40\x20\40\x20\40\x20\x20\x20\x20\x20\x20\40\74\146\x6f\x72\x6d\40\141\x63\x74\x69\157\156\75\42\x69\x6e\x64\145\x78\x2e\160\150\x70\42\76\15\xa\x20\x20\x20\x20\x20\40\40\40\x20\x20\40\40\40\40\x20\x20\74\144\151\x76\40\163\164\x79\154\x65\75\x22\155\x61\x72\147\x69\156\x3a\x33\45\x3b\144\151\x73\x70\x6c\x61\x79\x3a\142\x6c\157\x63\153\73\164\145\x78\164\x2d\141\x6c\151\x67\156\72\143\x65\x6e\164\x65\162\73\x22\76\74\x69\x6e\160\x75\164\40\x73\164\x79\x6c\x65\x3d\42\160\141\144\144\151\156\147\x3a\x31\x25\73\167\151\x64\x74\150\72\x31\60\60\160\x78\73\142\141\143\x6b\x67\x72\157\165\156\144\72\40\43\60\x30\x39\61\x43\104\x20\x6e\x6f\x6e\x65\x20\162\145\160\145\141\x74\40\163\143\x72\157\x6c\x6c\x20\60\45\40\60\x25\73\143\x75\162\x73\157\162\72\40\x70\x6f\x69\x6e\164\145\162\x3b\146\157\156\164\x2d\x73\151\x7a\145\72\x31\65\x70\x78\73\x62\157\162\144\x65\x72\55\167\151\144\164\150\72\x20\x31\160\x78\73\142\157\162\x64\x65\x72\x2d\x73\x74\x79\154\x65\72\40\163\157\x6c\x69\x64\73\x62\157\x72\144\x65\162\x2d\162\x61\144\x69\165\x73\x3a\40\63\160\170\x3b\167\150\x69\x74\x65\x2d\x73\x70\141\143\x65\x3a\40\x6e\157\x77\162\x61\x70\73\142\157\170\55\163\151\172\x69\156\x67\x3a\x20\x62\x6f\162\144\x65\162\55\142\157\x78\x3b\x62\157\162\x64\x65\x72\x2d\x63\x6f\154\x6f\162\x3a\x20\43\x30\x30\x37\63\101\101\73\142\157\x78\x2d\163\150\x61\144\x6f\167\x3a\40\60\160\x78\40\61\x70\x78\40\60\160\x78\x20\x72\x67\142\141\x28\61\x32\60\54\x20\62\x30\60\54\x20\x32\x33\60\x2c\40\x30\56\x36\51\40\151\156\x73\145\164\73\143\157\x6c\157\162\x3a\x20\43\x46\106\x46\x3b\42\x74\x79\160\145\x3d\42\142\165\164\x74\157\x6e\42\x20\166\x61\x6c\165\145\75\42\104\x6f\156\x65\42\40\x6f\156\x43\154\151\143\153\x3d\42\x73\x65\x6c\x66\x2e\x63\x6c\157\163\x65\x28\51\x3b\42\76\74\x2f\144\x69\x76\x3e";
        die;
        cl:
    }
    public static function validateIssuerAndAudience($K7, $gW, $Id, $base_url, $hC)
    {
        $u1 = current($K7->getAssertions())->getIssuer();
        $LW = current(current($K7->getAssertions())->getValidAudiences());
        if (strcmp($Id, $u1) === 0) {
            goto MQ;
        }
        if ($hC == "\164\x65\x73\x74\x56\141\x6c\151\x64\141\164\x65") {
            goto U9;
        }
        echo "\40\x3c\144\151\x76\x20\163\x74\171\x6c\x65\75\x22\143\x6f\154\157\162\72\40\43\x61\71\64\64\64\x32\73\x66\157\156\164\55\x73\151\x7a\145\x3a\61\64\x70\164\x3b\40\155\141\162\x67\151\x6e\55\142\x6f\164\x74\x6f\155\72\x32\60\160\170\73\x22\76\x3c\x70\76\x3c\163\x74\162\157\156\147\x3e\x45\162\x72\x6f\162\72\40\74\57\x73\x74\x72\x6f\x6e\147\76\127\x65\40\143\157\x75\x6c\144\x20\156\x6f\164\40\163\x69\147\156\x20\x79\157\x75\x20\x69\x6e\x2e\x20\120\154\x65\141\x73\x65\40\x63\x6f\156\164\141\143\x74\x20\x79\x6f\x75\162\40\101\x64\155\151\x6e\x69\x73\164\x72\x61\164\157\x72\x2e\x3c\57\160\x3e\x3c\x2f\x64\x69\x76\x3e\xd\12\40\40\40\x20\40\x20\40\40\40\x20\x20\40\x20\x20\x20\40\40\40\x3c\x64\x69\x76\x20\x73\164\x79\x6c\x65\x3d\42\155\x61\x72\147\151\156\x3a\x33\45\73\x64\151\x73\x70\154\x61\171\72\x62\154\157\143\x6b\x3b\x74\x65\170\164\55\x61\x6c\x69\147\x6e\72\143\145\x6e\x74\x65\x72\x3b\42\x3e";
        die;
        goto kc;
        U9:
        ob_end_clean();
        echo "\x3c\144\151\166\40\163\164\171\x6c\145\x3d\x22\x66\157\x6e\x74\x2d\146\x61\x6d\x69\154\171\x3a\x43\x61\x6c\151\142\x72\151\x3b\x70\141\144\x64\151\156\x67\x3a\60\40\63\x25\73\x22\76";
        echo "\x3c\x64\x69\166\x20\163\x74\x79\154\145\x3d\x22\143\x6f\x6c\x6f\x72\x3a\x20\43\141\71\x34\x34\64\x32\73\x62\x61\x63\153\147\162\157\x75\156\144\x2d\x63\157\x6c\157\162\x3a\x20\x23\146\62\144\145\144\x65\73\160\x61\144\144\151\156\x67\72\40\61\65\x70\x78\73\x6d\141\x72\147\151\x6e\55\x62\157\x74\164\x6f\155\x3a\40\x32\60\x70\x78\73\x74\145\x78\x74\x2d\141\x6c\151\x67\156\72\x63\145\156\164\145\162\x3b\x62\x6f\162\x64\145\x72\72\x31\x70\x78\x20\163\157\154\x69\144\40\x23\105\x36\102\63\102\x32\x3b\146\157\156\164\55\163\151\x7a\x65\x3a\x31\x38\160\164\x3b\42\x3e\x20\x45\x52\122\x4f\122\74\57\x64\x69\166\x3e\xd\12\40\x20\x20\x20\x20\40\40\40\40\x20\40\x20\x20\x20\x20\x20\74\x64\x69\166\40\x73\x74\171\154\x65\x3d\42\143\157\154\157\x72\x3a\40\x23\x61\71\x34\x34\x34\62\73\x66\157\156\x74\x2d\x73\x69\172\x65\72\x31\x34\160\164\x3b\x20\155\x61\162\x67\x69\x6e\x2d\x62\x6f\164\164\x6f\155\x3a\62\60\x70\170\73\x22\76\74\160\76\x3c\163\x74\x72\x6f\x6e\147\76\x45\162\162\x6f\162\x3a\40\74\x2f\163\164\162\x6f\156\147\76\x49\x73\163\x75\145\x72\40\x63\x61\156\156\x6f\x74\40\x62\145\x20\x76\145\162\x69\x66\x69\x65\144\x2e\74\x2f\x70\76\15\xa\40\40\x20\x20\40\x20\40\x20\x20\40\x20\40\40\40\40\x20\74\x70\76\120\154\145\141\x73\145\40\143\157\156\x74\141\143\x74\x20\x79\x6f\x75\162\x20\x61\144\x6d\x69\156\151\163\164\x72\141\164\x6f\162\40\141\x6e\x64\40\x72\x65\160\x6f\162\164\40\x74\150\x65\40\146\x6f\154\154\157\167\151\x6e\x67\x20\145\x72\x72\157\162\x3a\74\x2f\x70\76\15\xa\40\40\40\40\40\40\x20\x20\40\x20\40\40\x20\x20\40\x20\x3c\x70\76\x3c\x73\164\x72\x6f\x6e\147\x3e\x50\x6f\x73\163\151\142\x6c\x65\40\x43\141\x75\163\x65\x3a\x20\x3c\57\163\x74\162\157\156\147\76\124\150\145\x20\166\x61\x6c\165\145\x20\x69\x6e\x20\47\111\x64\120\x20\105\x6e\x74\x69\x74\171\40\x49\x44\40\x6f\x72\40\111\x73\163\165\x65\162\47\40\x66\x69\x65\x6c\x64\x20\x69\156\x20\123\145\x72\166\151\x63\145\40\120\162\x6f\x76\x69\144\145\x72\x20\x53\x65\164\x74\x69\x6e\x67\x73\x20\x69\x73\x20\x69\x6e\143\x6f\x72\162\x65\143\164\74\x2f\160\76\xd\xa\x20\40\40\40\x20\40\x20\x20\40\40\40\40\x20\x20\x20\x20\74\x70\76\x3c\163\164\162\157\x6e\x67\x3e\105\x78\160\145\x63\164\145\144\40\105\x6e\x74\x69\164\171\x20\111\104\x3a\x20\74\57\163\x74\x72\157\156\147\x3e" . $u1 . "\74\x70\76\xd\12\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\x20\x20\x20\x3c\160\x3e\74\x73\164\162\x6f\x6e\147\x3e\x45\x6e\x74\x69\164\171\40\x49\x44\40\x46\157\x75\x6e\x64\72\40\x3c\57\x73\x74\162\x6f\x6e\x67\76" . $Id . "\x3c\x2f\160\76\15\xa\40\x20\x20\x20\40\40\40\40\40\x20\x20\40\x20\x20\40\x20\74\x2f\x64\x69\166\x3e\xd\12\40\40\40\x20\40\40\40\40\40\x20\40\x20\x20\x20\40\x20\74\x64\151\166\x20\x73\x74\x79\154\x65\x3d\x22\155\x61\x72\147\x69\156\72\63\45\73\144\151\163\x70\x6c\x61\x79\x3a\x62\x6c\157\143\153\73\164\145\170\164\55\141\154\151\x67\x6e\x3a\x63\x65\x6e\164\x65\x72\x3b\42\76\xd\xa\x20\40\40\40\x20\40\40\40\x20\40\40\40\40\x20\40\40\74\x64\x69\x76\x20\163\164\x79\x6c\145\75\x22\155\x61\x72\147\x69\156\x3a\x33\x25\x3b\x64\x69\163\x70\x6c\141\171\x3a\x62\154\x6f\x63\153\73\164\145\x78\164\x2d\141\x6c\151\147\x6e\x3a\143\145\x6e\x74\x65\x72\x3b\x22\x3e\74\151\156\x70\x75\164\40\x73\x74\171\154\145\75\x22\x70\x61\144\144\151\156\x67\x3a\61\45\73\167\151\144\x74\x68\72\x31\x30\60\x70\170\x3b\142\141\x63\153\147\x72\157\165\x6e\x64\72\x20\43\60\60\x39\61\x43\104\x20\156\157\x6e\x65\x20\162\x65\x70\x65\141\x74\40\x73\x63\x72\x6f\154\154\x20\60\45\40\60\x25\73\143\x75\162\163\157\x72\72\x20\160\x6f\x69\156\164\x65\x72\x3b\146\157\156\x74\55\163\151\x7a\145\x3a\x31\x35\x70\x78\73\x62\x6f\x72\144\x65\x72\55\167\x69\144\164\150\x3a\x20\61\160\170\x3b\142\157\x72\144\x65\x72\x2d\163\164\x79\x6c\x65\x3a\40\163\x6f\154\151\144\73\x62\157\x72\x64\145\162\x2d\162\141\144\x69\x75\163\72\40\63\x70\x78\73\167\x68\x69\x74\145\x2d\163\x70\x61\143\145\x3a\40\x6e\x6f\167\162\141\x70\x3b\x62\157\170\x2d\x73\x69\172\x69\x6e\x67\72\x20\142\x6f\x72\x64\x65\x72\55\142\x6f\x78\73\142\157\x72\144\x65\x72\55\x63\x6f\154\x6f\x72\x3a\x20\43\x30\x30\x37\63\101\101\x3b\142\x6f\x78\x2d\x73\x68\141\144\157\x77\x3a\x20\x30\x70\x78\x20\x31\160\x78\x20\60\x70\170\x20\162\147\142\141\x28\61\62\60\x2c\40\62\x30\60\x2c\x20\62\63\x30\54\x20\x30\56\x36\51\x20\151\x6e\x73\145\164\x3b\x63\x6f\x6c\x6f\x72\x3a\40\x23\106\106\x46\73\x22\164\171\x70\x65\x3d\x22\x62\x75\164\x74\157\x6e\x22\x20\x76\141\x6c\x75\145\x3d\42\x44\157\x6e\145\42\40\x6f\156\x43\x6c\151\x63\x6b\75\42\x73\x65\154\146\56\143\x6c\x6f\163\x65\x28\51\x3b\42\76\x3c\57\144\x69\166\x3e";
        die;
        kc:
        goto xl;
        MQ:
        if (strcmp($LW, $gW) === 0) {
            goto O9;
        }
        echo sprintf("\x49\156\x76\141\154\x69\144\x20\141\165\144\151\145\x6e\143\145");
        die;
        goto Kj;
        O9:
        return TRUE;
        Kj:
        xl:
    }
    private static function doDecryptElement(DOMElement $Bg, XMLSecurityKey $ZT, array &$ls)
    {
        $mu = new XMLSecEnc();
        $mu->setNode($Bg);
        $mu->type = $Bg->getAttribute("\124\x79\x70\145");
        $dD = $mu->locateKey($Bg);
        if ($dD) {
            goto Mo;
        }
        echo sprintf("\x43\157\x75\x6c\144\40\x6e\x6f\x74\x20\154\x6f\143\141\x74\145\x20\153\x65\171\x20\x61\x6c\147\x6f\x72\x69\164\150\155\40\151\x6e\x20\x65\156\143\162\x79\160\x74\145\144\x20\x64\x61\x74\x61\56");
        die;
        Mo:
        $Mu = $mu->locateKeyInfo($dD);
        if ($Mu) {
            goto tX;
        }
        echo sprintf("\x43\x6f\165\x6c\x64\x20\156\x6f\164\40\154\x6f\x63\x61\x74\x65\40\74\x64\x73\x69\147\x3a\x4b\145\x79\111\x6e\146\157\x3e\x20\x66\157\x72\x20\x74\150\145\40\145\x6e\143\x72\171\x70\164\x65\144\x20\153\145\x79\56");
        die;
        tX:
        $eY = $ZT->getAlgorithm();
        if ($Mu->isEncrypted) {
            goto q0;
        }
        $WC = $dD->getAlgorithm();
        if (!($eY !== $WC)) {
            goto wT;
        }
        echo sprintf("\101\x6c\147\x6f\162\151\164\150\x6d\x20\155\x69\x73\x6d\141\164\143\150\40\x62\x65\x74\x77\145\145\x6e\40\x69\x6e\160\x75\x74\40\153\x65\x79\x20\141\x6e\144\x20\153\x65\x79\40\x69\156\x20\x6d\145\x73\163\x61\x67\145\x2e\x20" . "\x4b\x65\171\x20\167\141\163\x3a\x20" . var_export($eY, TRUE) . "\73\40\155\x65\x73\x73\141\x67\x65\x20\x77\x61\x73\72\40" . var_export($WC, TRUE));
        die;
        wT:
        $dD = $ZT;
        goto nu;
        q0:
        $ZA = $Mu->getAlgorithm();
        if (!in_array($ZA, $ls, TRUE)) {
            goto hc;
        }
        echo sprintf("\101\154\x67\157\162\151\x74\150\x6d\x20\144\x69\163\141\x62\154\145\x64\72\40" . var_export($ZA, TRUE));
        die;
        hc:
        if (!($ZA === XMLSecurityKey::RSA_OAEP_MGF1P && $eY === XMLSecurityKey::RSA_1_5)) {
            goto yw;
        }
        $eY = XMLSecurityKey::RSA_OAEP_MGF1P;
        yw:
        if (!($eY !== $ZA)) {
            goto ro;
        }
        echo sprintf("\x41\154\x67\x6f\x72\151\164\x68\155\x20\155\151\x73\x6d\141\164\143\x68\40\142\145\164\x77\145\145\156\40\151\156\x70\x75\164\40\x6b\145\x79\40\141\x6e\144\40\x6b\x65\x79\x20\x75\x73\145\144\40\164\157\40\145\x6e\143\x72\x79\x70\164\x20" . "\x20\x74\150\x65\40\x73\x79\x6d\x6d\x65\164\x72\x69\x63\40\x6b\x65\x79\40\146\157\x72\40\x74\150\x65\x20\x6d\x65\163\x73\x61\x67\x65\x2e\x20\x4b\145\x79\40\167\141\163\x3a\40" . var_export($eY, TRUE) . "\x3b\40\x6d\145\163\163\141\x67\x65\40\x77\x61\x73\72\x20" . var_export($ZA, TRUE));
        die;
        ro:
        $d3 = $Mu->encryptedCtx;
        $Mu->key = $ZT->key;
        $st = $dD->getSymmetricKeySize();
        if (!($st === NULL)) {
            goto M_;
        }
        echo sprintf("\x55\156\153\x6e\x6f\x77\x6e\40\153\145\x79\40\x73\x69\172\145\x20\146\x6f\162\x20\x65\x6e\143\162\x79\160\x74\x69\157\156\x20\x61\x6c\147\157\162\151\x74\x68\x6d\72\40" . var_export($dD->type, TRUE));
        die;
        M_:
        try {
            $Rh = $d3->decryptKey($Mu);
            if (!(strlen($Rh) != $st)) {
                goto mR;
            }
            echo sprintf("\x55\156\145\x78\x70\145\143\x74\x65\144\40\153\x65\x79\x20\x73\x69\172\x65\x20\x28" . strlen($Rh) * 8 . "\x62\x69\164\163\x29\40\146\157\x72\40\x65\156\x63\162\171\160\164\x69\157\156\x20\x61\x6c\x67\157\x72\x69\164\150\x6d\x3a\x20" . var_export($dD->type, TRUE));
            die;
            mR:
        } catch (Exception $R8) {
            $hX = $d3->getCipherValue();
            $rv = openssl_pkey_get_details($Mu->key);
            $rv = sha1(serialize($rv), TRUE);
            $Rh = sha1($hX . $rv, TRUE);
            if (strlen($Rh) > $st) {
                goto BD;
            }
            if (strlen($Rh) < $st) {
                goto Ym;
            }
            goto oD;
            BD:
            $Rh = substr($Rh, 0, $st);
            goto oD;
            Ym:
            $Rh = str_pad($Rh, $st);
            oD:
        }
        $dD->loadkey($Rh);
        nu:
        $PB = $dD->getAlgorithm();
        if (!in_array($PB, $ls, TRUE)) {
            goto xm;
        }
        echo sprintf("\101\154\147\x6f\x72\x69\x74\150\155\x20\144\151\163\141\142\x6c\x65\x64\x3a\x20" . var_export($PB, TRUE));
        die;
        xm:
        $mK = $mu->decryptNode($dD, FALSE);
        $lg = "\74\x72\x6f\157\164\x20\x78\155\154\156\163\x3a\x73\141\155\x6c\x3d\42\x75\162\x6e\x3a\157\x61\x73\x69\163\x3a\156\141\x6d\x65\163\x3a\x74\x63\72\123\101\x4d\114\72\x32\56\x30\72\x61\x73\x73\x65\162\164\151\157\156\42\40" . "\x78\155\154\x6e\x73\72\x78\x73\x69\75\42\x68\164\x74\160\x3a\x2f\57\x77\167\x77\x2e\167\63\x2e\x6f\162\147\57\62\60\x30\61\x2f\x58\115\x4c\x53\x63\150\x65\155\x61\x2d\151\x6e\x73\164\x61\156\x63\x65\x22\x3e" . $mK . "\74\57\162\157\157\x74\x3e";
        $jC = new DOMDocument();
        if (@$jC->loadXML($lg)) {
            goto hO;
        }
        throw new Exception("\x46\141\151\x6c\x65\144\x20\164\x6f\40\160\141\162\163\145\x20\x64\x65\x63\x72\x79\x70\x74\x65\144\x20\x58\115\114\x2e\40\x4d\141\x79\x62\145\40\164\x68\x65\x20\x77\x72\157\x6e\x67\40\163\x68\x61\x72\145\144\153\145\x79\40\167\141\163\x20\165\163\x65\144\77");
        hO:
        $Ce = $jC->firstChild->firstChild;
        if (!($Ce === NULL)) {
            goto kT;
        }
        echo sprintf("\115\151\x73\163\x69\x6e\x67\40\x65\156\143\x72\x79\160\164\x65\x64\40\x65\154\x65\155\145\156\164\56");
        throw new Exception("\x4d\x69\163\163\151\156\x67\x20\x65\x6e\x63\x72\171\160\164\145\144\x20\x65\154\145\155\x65\x6e\164\56");
        kT:
        if ($Ce instanceof DOMElement) {
            goto df;
        }
        echo sprintf("\104\x65\x63\162\171\x70\164\x65\144\40\145\154\145\155\145\156\164\40\x77\141\163\x20\156\157\x74\x20\141\143\164\165\141\x6c\x6c\x79\40\141\x20\104\117\115\105\x6c\145\x6d\x65\156\x74\56");
        df:
        return $Ce;
    }
    public static function decryptElement(DOMElement $Bg, XMLSecurityKey $ZT, array $ls = array(), XMLSecurityKey $Zl = NULL)
    {
        try {
            return self::doDecryptElement($Bg, $ZT, $ls);
        } catch (Exception $R8) {
            try {
                return self::doDecryptElement($Bg, $Zl, $ls);
            } catch (Exception $x0) {
            }
            die;
        }
    }
    public static function metadata_builder($Zz)
    {
        $lg = new DOMDocument();
        $lY = plugins_url() . "\x2f\x6d\151\156\x69\157\162\141\156\147\x65\55\163\x61\x6d\x6c\55\x32\60\x2d\x73\x69\156\147\x6c\x65\55\163\x69\x67\x6e\55\157\x6e\57\163\160\x2d\155\145\164\141\x64\141\x74\141\x2e\170\x6d\x6c";
        $lg->load($lY);
        $Xj = new DOMXPath($lg);
        $aq = $Xj->query("\57\x2f\x6d\x64\x3a\105\x6e\164\x69\164\171\104\x65\163\x63\162\151\160\x74\157\162\133\100\x65\156\164\151\164\171\x49\104\x3d\42\150\164\164\160\72\57\x2f\x7b\x70\141\x74\150\55\x74\x6f\x2d\x79\x6f\x75\162\55\163\x69\x74\x65\175\57\x77\x70\55\x63\157\156\x74\x65\156\164\x2f\x70\x6c\x75\x67\x69\x6e\163\x2f\x6d\x69\x6e\151\157\162\x61\x6e\147\145\55\163\141\155\x6c\x2d\x32\x30\x2d\x73\x69\156\x67\x6c\145\55\163\x69\147\x6e\55\157\x6e\x2f\42\135");
        if (!($aq->length >= 1)) {
            goto yo;
        }
        $GH = $aq->item(0);
        $GH->setAttribute("\x65\x6e\x74\x69\x74\x79\x49\104", $Zz . "\57\167\x70\x2d\x63\x6f\156\x74\145\x6e\164\x2f\160\x6c\165\147\151\156\x73\57\155\x69\156\151\x6f\162\141\156\x67\x65\55\x73\x61\x6d\154\55\x32\60\x2d\163\151\x6e\x67\x6c\x65\55\x73\151\x67\156\55\157\156\57");
        yo:
        $aq = $Xj->query("\57\57\x6d\144\72\101\x73\163\145\162\164\151\x6f\156\103\157\156\163\165\x6d\x65\162\x53\x65\162\166\x69\x63\145\x5b\100\114\157\143\x61\x74\151\157\x6e\x3d\42\x68\164\164\x70\72\57\57\x7b\160\x61\x74\x68\55\164\157\x2d\x79\x6f\165\162\55\163\151\164\145\x7d\x22\135");
        if (!($aq->length >= 1)) {
            goto aP;
        }
        $GH = $aq->item(0);
        $GH->setAttribute("\x4c\x6f\143\141\x74\151\x6f\156", $Zz . "\57");
        aP:
        $lg->save(plugins_url() . "\x2f\x6d\x69\156\151\x6f\162\141\x6e\x67\x65\55\x73\x61\155\154\55\x32\x30\x2d\x73\x69\x6e\147\x6c\145\x2d\x73\x69\x67\x6e\55\x6f\156\57\163\160\x2d\x6d\x65\x74\x61\x64\141\x74\x61\56\x78\155\x6c");
    }
    public static function get_mapped_groups($wB, $zN)
    {
        $VG = array();
        if (empty($zN)) {
            goto ps;
        }
        $ht = array();
        $IO = 1;
        ox:
        if (!($IO < 10)) {
            goto DD;
        }
        $lM = $wB->get("\x67\x72\x6f\x75\x70" . $IO . "\137\155\x61\160");
        $ht[$IO] = explode("\73", $lM);
        $IO++;
        goto ox;
        DD:
        ps:
        foreach ($zN as $la) {
            if (empty($la)) {
                goto pJ;
            }
            $IO = 0;
            $zO = false;
            Ib:
            if (!($IO < 9 && !$zO)) {
                goto EO;
            }
            if (!(!empty($ht[$IO]) && in_array($la, $ht[$IO]))) {
                goto vo;
            }
            $VG[] = $wB->get("\x67\162\157\x75\x70" . $IO);
            $zO = true;
            vo:
            $IO++;
            goto Ib;
            EO:
            pJ:
            j1:
        }
        PA:
        return array_unique($VG);
    }
    public static function getEncryptionAlgorithm($o6)
    {
        switch ($o6) {
            case "\x68\164\164\160\x3a\x2f\x2f\167\x77\x77\x2e\x77\x33\x2e\157\162\x67\x2f\x32\x30\60\61\57\60\x34\x2f\170\155\154\145\x6e\143\x23\164\162\151\x70\x6c\x65\x64\x65\163\55\x63\x62\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto cJ;
            case "\x68\164\164\160\72\x2f\57\167\x77\x77\x2e\x77\x33\56\x6f\162\147\57\62\x30\60\61\x2f\x30\64\57\x78\155\154\x65\156\x63\43\141\x65\163\61\62\x38\55\143\x62\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\x74\164\x70\x3a\x2f\57\x77\167\167\x2e\167\63\x2e\157\162\147\57\x32\x30\x30\61\57\x30\x34\57\170\x6d\x6c\x65\156\143\43\x61\145\x73\61\x39\x32\x2d\143\142\143":
                return XMLSecurityKey::AES192_CBC;
                goto cJ;
            case "\150\164\164\160\x3a\57\x2f\x77\167\167\56\167\63\56\x6f\162\147\57\62\x30\60\x31\57\60\x34\x2f\x78\155\x6c\x65\156\x63\43\x61\x65\x73\62\65\x36\55\x63\142\143":
                return XMLSecurityKey::AES256_CBC;
                goto cJ;
            case "\x68\x74\164\160\72\57\x2f\167\x77\x77\56\x77\63\x2e\157\x72\x67\57\62\x30\x30\x31\x2f\x30\64\x2f\170\155\154\x65\x6e\x63\43\x72\x73\141\x2d\61\x5f\x35":
                return XMLSecurityKey::RSA_1_5;
                goto cJ;
            case "\x68\164\x74\160\x3a\57\x2f\167\167\167\56\x77\63\x2e\x6f\162\x67\57\62\60\x30\61\57\x30\64\x2f\x78\155\x6c\x65\156\x63\43\x72\x73\141\55\157\x61\145\160\55\x6d\147\x66\x31\x70":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto cJ;
            case "\x68\x74\x74\x70\x3a\57\57\167\x77\167\x2e\x77\63\x2e\x6f\162\147\57\x32\x30\x30\x30\x2f\x30\71\x2f\170\155\154\144\x73\151\x67\x23\x64\163\x61\x2d\163\x68\x61\61":
                return XMLSecurityKey::DSA_SHA1;
                goto cJ;
            case "\150\x74\x74\160\72\57\x2f\x77\167\167\56\x77\x33\56\x6f\x72\x67\x2f\x32\60\x30\x30\57\x30\x39\57\x78\155\x6c\144\163\x69\147\x23\162\x73\x61\x2d\163\x68\141\61":
                return XMLSecurityKey::RSA_SHA1;
                goto cJ;
            case "\150\x74\x74\x70\x3a\x2f\x2f\x77\167\167\x2e\167\63\56\157\162\x67\57\x32\60\x30\61\x2f\x30\64\x2f\170\155\154\x64\x73\x69\x67\55\x6d\x6f\162\145\x23\162\x73\x61\55\163\x68\x61\62\x35\66":
                return XMLSecurityKey::RSA_SHA256;
                goto cJ;
            case "\x68\x74\x74\160\72\x2f\x2f\x77\167\167\56\167\63\x2e\157\x72\147\57\x32\60\60\61\x2f\60\x34\x2f\x78\155\154\x64\x73\151\x67\55\155\x6f\x72\145\x23\x72\163\141\x2d\163\x68\x61\63\70\64":
                return XMLSecurityKey::RSA_SHA384;
                goto cJ;
            case "\150\164\164\160\72\57\57\x77\x77\167\x2e\167\63\x2e\x6f\162\147\x2f\x32\x30\x30\x31\57\60\64\57\170\x6d\154\x64\x73\151\147\55\x6d\157\162\x65\x23\162\163\141\x2d\x73\150\x61\65\61\62":
                return XMLSecurityKey::RSA_SHA512;
                goto cJ;
            default:
                echo sprintf("\x49\x6e\166\x61\154\151\144\40\105\x6e\143\162\x79\160\164\x69\157\156\40\x4d\x65\164\150\157\144\72\x20" . $o6);
                die;
                goto cJ;
        }
        Sz:
        cJ:
    }
    public static function sanitize_certificate($iN)
    {
        $iN = preg_replace("\57\133\xd\xa\x5d\x2b\57", '', $iN);
        $iN = str_replace("\x2d", '', $iN);
        $iN = str_replace("\x42\x45\107\111\116\40\x43\x45\x52\x54\x49\106\111\x43\x41\124\105", '', $iN);
        $iN = str_replace("\105\116\x44\40\103\105\122\124\111\x46\x49\x43\101\124\x45", '', $iN);
        $iN = str_replace("\x20", '', $iN);
        $iN = chunk_split($iN, 64, "\xd\xa");
        $iN = "\x2d\55\55\55\55\x42\x45\107\111\x4e\40\103\105\122\x54\111\x46\111\103\x41\x54\x45\x2d\x2d\55\55\55\15\12" . $iN . "\x2d\x2d\x2d\x2d\x2d\x45\116\x44\40\x43\105\x52\124\x49\x46\111\103\101\124\105\55\x2d\55\x2d\55";
        return $iN;
    }
    public static function sanitize_private_key($gy)
    {
        $gy = preg_replace("\57\x5b\15\xa\x5d\53\x2f", '', $gy);
        $gy = str_replace("\x2d", '', $gy);
        $gy = str_replace("\x42\x45\x47\111\116\x20\x50\x52\111\126\x41\124\105\x20\113\x45\x59", '', $gy);
        $gy = str_replace("\105\x4e\x44\x20\x50\x52\x49\126\x41\124\x45\x20\x4b\105\x59", '', $gy);
        $gy = str_replace("\x20", '', $gy);
        $gy = chunk_split($gy, 64, "\xd\12");
        $gy = "\x2d\55\55\x2d\55\x42\105\107\x49\116\x20\x50\x52\x49\126\101\x54\x45\40\113\105\131\55\x2d\55\55\x2d\15\12" . $gy . "\x2d\x2d\55\55\x2d\105\116\104\40\x50\x52\x49\126\x41\124\105\40\113\105\131\55\x2d\x2d\55\55";
        return $gy;
    }
    public static function desanitize_certificate($iN)
    {
        $iN = preg_replace("\x2f\x5b\xd\xa\x5d\x2b\x2f", '', $iN);
        $iN = str_replace("\x2d\55\55\x2d\x2d\x42\x45\107\111\x4e\40\x43\x45\122\124\x49\106\x49\x43\x41\x54\105\x2d\x2d\x2d\x2d\55", '', $iN);
        $iN = str_replace("\x2d\55\55\x2d\x2d\105\x4e\104\x20\x43\105\x52\124\111\x46\111\x43\x41\124\x45\55\x2d\x2d\x2d\55", '', $iN);
        $iN = str_replace("\x20", '', $iN);
        return $iN;
    }
    public static function Print_SAML_Request($J4, $n3)
    {
        header("\x43\157\x6e\164\145\x6e\x74\x2d\124\171\x70\145\72\40\x74\x65\170\x74\x2f\150\x74\x6d\154");
        $Ij = new DOMDocument();
        $Ij->preserveWhiteSpace = false;
        $Ij->formatOutput = true;
        $Ij->loadXML($J4);
        if ($n3 == "\x64\x69\163\160\154\141\x79\x53\101\x4d\114\122\145\x71\165\x65\x73\x74") {
            goto Zt;
        }
        $qQ = "\123\x41\115\x4c\x20\122\145\163\160\x6f\156\163\x65";
        goto QX;
        Zt:
        $qQ = "\123\101\x4d\x4c\40\122\x65\161\165\x65\163\164";
        QX:
        $JP = $Ij->saveXML();
        $W4 = htmlentities($JP);
        $W4 = rtrim($W4);
        $lg = simplexml_load_string($JP);
        $lY = drupal_get_path("\155\x6f\x64\165\x6c\x65", "\155\151\156\x69\157\162\x61\x6e\x67\x65\x5f\x73\x61\155\x6c") . "\x2f\143\163\x73\x2f\x73\164\171\154\145\137\163\145\x74\164\151\156\x67\x73\x2e\x63\163\x73";
        echo "\74\154\151\x6e\153\40\x72\x65\154\75\47\x73\164\171\154\145\163\x68\x65\145\x74\x27\x20\151\144\75\x27\155\157\x5f\163\x61\x6d\x6c\x5f\141\144\x6d\151\x6e\137\163\x65\x74\x74\x69\x6e\147\163\137\163\x74\171\154\145\55\143\163\163\x27\40\x20\150\x72\x65\x66\75\47" . $lY . "\47\x20\x74\x79\160\145\75\47\164\x65\170\164\x2f\143\x73\x73\x27\40\x6d\x65\x64\151\141\x3d\47\141\154\x6c\x27\x20\x2f\x3e\xd\12\40\x20\x20\x20\x20\40\40\40\x20\x20\40\x20\xd\xa\x9\x9\11\x3c\144\x69\x76\x20\143\154\x61\x73\x73\x3d\42\155\x6f\55\144\x69\163\160\x6c\141\x79\55\x6c\157\x67\x73\x22\x20\x3e\74\x70\40\x74\171\x70\145\75\x22\164\x65\170\164\42\x20\40\x20\x69\x64\75\x22\123\x41\x4d\114\137\x74\171\160\x65\x22\76" . $qQ . "\x3c\x2f\x70\x3e\x3c\x2f\x64\151\166\76\xd\xa\x9\x9\11\15\12\x9\11\x9\x3c\144\x69\166\x20\x74\171\160\x65\75\42\x74\145\x78\164\x22\x20\x69\x64\x3d\x22\x53\101\x4d\x4c\137\x64\151\163\160\154\141\171\x22\40\x63\154\141\163\x73\75\42\x6d\x6f\x2d\x64\151\x73\x70\154\x61\171\55\x62\x6c\157\x63\x6b\x22\x3e\x3c\160\162\x65\x20\143\154\x61\x73\x73\x3d\47\142\x72\x75\x73\150\72\40\x78\x6d\154\x3b\x27\76" . $W4 . "\74\x2f\160\x72\145\76\74\x2f\x64\x69\166\76\15\12\x9\11\11\x3c\142\x72\76\15\xa\x9\x9\11\74\x64\151\x76\40\x73\x74\x79\x6c\x65\x3d\42\155\x61\x72\x67\151\156\72\63\45\x3b\144\151\163\160\154\x61\171\72\142\154\157\x63\x6b\73\x74\145\170\x74\55\x61\x6c\x69\147\156\72\143\x65\156\x74\145\162\x3b\42\76\15\12\40\40\40\40\40\x20\x20\40\x20\x20\x20\40\xd\xa\x9\x9\11\74\144\x69\166\40\163\x74\x79\x6c\x65\x3d\x22\155\141\x72\147\x69\156\72\63\45\73\144\151\163\160\x6c\x61\171\x3a\x62\x6c\x6f\143\x6b\x3b\x74\x65\170\164\55\x61\154\151\147\156\72\143\x65\156\x74\145\162\x3b\42\40\x3e\xd\xa\11\xd\xa\x20\x20\40\x20\40\40\x20\x20\40\40\x20\x20\x3c\x2f\x64\x69\166\76\15\xa\x9\x9\11\x3c\x62\165\x74\164\157\x6e\x20\x69\x64\x3d\42\143\x6f\160\171\x22\x20\x6f\156\x63\x6c\151\x63\153\x3d\42\143\x6f\160\171\x44\151\x76\x54\x6f\103\x6c\151\x70\142\157\x61\162\x64\x28\x29\42\x20\x20\163\x74\171\x6c\145\75\42\160\141\144\x64\x69\156\147\72\x31\x25\73\x77\151\x64\164\150\x3a\61\x30\60\x70\170\x3b\142\141\143\153\147\x72\x6f\165\156\x64\x3a\40\x23\60\60\71\x31\103\104\x20\156\157\156\145\x20\162\x65\x70\145\141\164\40\163\143\x72\x6f\154\x6c\40\60\45\40\x30\45\73\143\165\162\163\x6f\162\72\40\160\157\151\x6e\164\x65\x72\x3b\146\x6f\156\x74\x2d\x73\x69\172\x65\72\x31\65\160\170\73\142\157\x72\144\145\162\x2d\x77\x69\x64\164\x68\x3a\40\x31\160\x78\x3b\x62\x6f\162\x64\x65\x72\55\163\x74\x79\154\x65\x3a\40\x73\x6f\x6c\x69\144\x3b\x62\157\162\144\x65\162\x2d\162\141\144\151\165\163\x3a\x20\x33\x70\x78\73\x77\150\151\x74\145\x2d\x73\x70\x61\143\145\x3a\40\x6e\x6f\167\x72\x61\x70\73\x62\157\170\x2d\x73\151\x7a\151\156\x67\x3a\x20\x62\x6f\162\x64\x65\x72\55\142\157\170\73\x62\x6f\x72\x64\145\x72\x2d\143\157\154\x6f\162\72\40\x23\x30\60\x37\x33\x41\101\73\x62\157\170\55\163\150\x61\x64\157\167\x3a\x20\x30\x70\170\x20\x31\160\170\x20\x30\160\170\40\x72\147\x62\141\x28\61\62\60\x2c\x20\x32\x30\60\54\x20\x32\x33\60\54\x20\60\x2e\x36\x29\x20\x69\x6e\163\x65\x74\73\x63\157\154\157\162\x3a\40\43\106\106\106\73\42\x20\76\x43\x6f\x70\171\74\57\x62\x75\x74\x74\157\x6e\x3e\15\12\x9\x9\x9\46\156\x62\163\160\x3b\xd\12\40\x20\40\40\x20\x20\x20\x20\40\40\x20\40\x20\40\40\74\x69\x6e\160\x75\164\40\151\144\75\x22\144\167\156\x2d\x62\164\156\x22\40\163\164\171\x6c\145\x3d\42\160\x61\144\144\x69\156\147\x3a\x31\x25\73\x77\x69\144\164\x68\72\61\60\x30\x70\170\73\142\x61\x63\153\147\162\157\165\156\144\x3a\40\43\x30\x30\x39\x31\103\x44\40\156\157\x6e\145\40\162\145\160\x65\141\164\x20\x73\x63\x72\157\154\x6c\40\x30\45\40\x30\45\x3b\x63\165\162\x73\157\162\x3a\x20\160\157\151\156\164\145\162\x3b\x66\157\156\164\55\163\151\x7a\x65\72\61\x35\160\170\x3b\142\x6f\x72\x64\145\x72\x2d\x77\x69\x64\164\x68\72\40\61\x70\x78\73\142\157\x72\144\x65\162\x2d\163\x74\171\154\x65\x3a\x20\x73\x6f\154\151\144\73\142\157\x72\x64\145\x72\x2d\162\x61\144\151\165\163\72\40\x33\x70\x78\73\x77\x68\x69\x74\x65\x2d\x73\160\x61\143\x65\72\x20\156\x6f\x77\x72\141\x70\73\142\x6f\170\55\163\151\x7a\x69\156\147\72\x20\142\157\162\x64\145\x72\x2d\142\157\x78\x3b\x62\x6f\162\x64\x65\162\x2d\x63\157\x6c\157\162\x3a\x20\43\60\60\x37\63\x41\101\x3b\142\x6f\170\x2d\x73\150\x61\144\x6f\x77\72\40\60\x70\170\x20\x31\x70\x78\40\60\x70\x78\x20\x72\147\142\141\50\61\x32\60\x2c\x20\62\60\60\x2c\40\62\63\x30\x2c\x20\x30\x2e\66\51\x20\x69\x6e\x73\x65\164\x3b\x63\x6f\154\157\x72\72\x20\x23\106\x46\x46\73\x22\164\x79\160\145\75\x22\142\x75\x74\164\157\156\x22\40\x76\141\x6c\165\x65\x3d\x22\x44\157\x77\x6e\154\157\x61\x64\x22\40\15\xa\x20\40\x20\x20\40\40\x20\x20\40\40\40\40\40\40\x20\x22\x3e\15\12\x9\x9\11\x3c\x2f\144\x69\166\76\xd\12\11\x9\11\x3c\x2f\x64\151\166\76\xd\12\11\11\x9\15\12\11\x9";
        ob_end_flush();
        ?>

        <script>

            function copyDivToClipboard() {
                var aux = document.createElement("input");
                aux.setAttribute("value", document.getElementById("SAML_display").textContent);
                document.body.appendChild(aux);
                aux.select();
                document.execCommand("copy");
                document.body.removeChild(aux);
                document.getElementById('copy').textContent = "Copied";
                document.getElementById('copy').style.background = "grey";
                window.getSelection().selectAllChildren(document.getElementById("SAML_display"));
            }

            function download(filename, text) {
                var element = document.createElement('a');
                element.setAttribute('href', 'data:Application/octet-stream;charset=utf-8,' + encodeURIComponent(text));
                element.setAttribute('download', filename);

                element.style.display = 'none';
                document.body.appendChild(element);

                element.click();

                document.body.removeChild(element);
            }

            document.getElementById("dwn-btn").addEventListener("click", function () {

                var filename = document.getElementById("SAML_type").textContent + ".xml";
                var node = document.getElementById("SAML_display");
                htmlContent = node.innerHTML;
                text = node.textContent;
                console.log(text);
                download(filename, text);
            }, false);

        </script>
        <?php 
        die;
    }
    public static function drupal_is_cli()
    {
        if (!isset($_SERVER["\x53\x45\122\126\x45\x52\x5f\123\117\x46\124\x57\101\x52\105"]) && (php_sapi_name() == "\x63\154\x69" || is_numeric($_SERVER["\x61\162\147\x63"]) && $_SERVER["\x61\162\x67\143"] > 0)) {
            goto vs;
        }
        return FALSE;
        goto zC;
        vs:
        return TRUE;
        zC:
    }
}
