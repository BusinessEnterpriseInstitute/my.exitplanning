<?php


class Utilities
{
    public static function generateCertificate($P8, $YY, $Su, $g7)
    {
        $Y6 = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\x72\145\x73\157\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . "\157\x70\145\156\x73\x73\154\56\x63\x6e\x66";
        $sU = array("\x63\157\x6e\x66\x69\x67" => $Y6, "\x64\x69\x67\145\163\164\x5f\x61\x6c\x67" => "{$YY}", "\x70\162\151\x76\141\164\145\137\x6b\x65\171\137\142\151\164\x73" => $Su, "\160\162\x69\166\141\164\x65\137\x6b\x65\x79\x5f\x74\x79\x70\x65" => OPENSSL_KEYTYPE_RSA);
        $bM = openssl_pkey_new($sU);
        $cT = openssl_csr_new($P8, $bM, $sU);
        if (!($cT === FALSE)) {
            goto VR;
        }
        drupal_set_message(t("\106\x61\143\x69\x6e\x67\40\151\163\163\x75\x65\x73\x20\167\x68\x69\x6c\x65\40\x67\x65\156\x65\x72\141\164\151\156\x67\x20\x63\165\163\x74\157\155\40\143\145\162\164\x69\146\x69\143\x61\x74\145\56\x20\x50\154\145\141\163\x65\x20\143\150\x65\x63\x6b\40\151\x66\x20\x63\157\165\x6e\x74\162\x79\x20\x63\x6f\x64\x65\x20\151\163\x20\x63\x6f\x72\x72\145\143\x74\56"), "\x65\162\162\x6f\x72");
        return FALSE;
        VR:
        $bP = openssl_csr_sign($cT, null, $bM, $g7, $sU, time());
        openssl_x509_export($bP, $Z0);
        openssl_pkey_export($bM, $pB, null, $sU);
        openssl_csr_export($cT, $kq);
        JX:
        if (!(($Ms = openssl_error_string()) !== false)) {
            goto jb;
        }
        error_log($Ms);
        goto JX;
        jb:
        $mA = array("\x70\x75\142\x6c\151\x63\x5f\x6b\x65\171" => $Z0, "\x70\162\x69\x76\x61\164\145\x5f\153\145\x79" => $pB);
        variable_set("\x6d\151\x6e\x69\x6f\x72\x61\x6e\147\145\137\163\x61\155\154\137\160\x75\142\x6c\x5f\143\145\162\164\x69\146\151\x63\141\x74\x65", $mA["\x70\x75\142\x6c\x69\x63\x5f\153\145\x79"]);
        variable_set("\x6d\x69\156\151\x6f\x72\141\156\147\145\137\x73\141\155\x6c\x5f\x70\x72\x69\x76\141\x74\x65\137\143\x65\162\164\x69\146\151\x63\141\164\x65", $mA["\160\x72\x69\166\x61\x74\145\x5f\x6b\x65\171"]);
        file_put_contents(self::getCertificatePath(), $mA["\160\165\x62\x6c\151\143\x5f\153\x65\171"]);
        file_put_contents(self::getKeyPath(), $mA["\x70\x72\151\x76\141\164\x65\x5f\153\x65\x79"]);
        return TRUE;
    }
    public static function isCustomerRegistered(&$form, $form_state)
    {
        global $base_url;
        $u8 = $base_url . "\57\x61\x64\155\151\156\x2f\x63\x6f\x6e\146\x69\147\57\x70\145\x6f\x70\x6c\x65\57\x6d\x69\156\151\157\x72\x61\x6e\x67\145\x5f\163\x61\155\154\x2f\143\x75\x73\x74\157\155\x65\162\137\163\145\164\165\160\57";
        if (variable_get("\155\151\x6e\151\x6f\x72\x61\x6e\x67\x65\137\163\141\155\154\x5f\x63\165\x73\164\x6f\x6d\145\162\x5f\x61\x64\155\x69\156\137\x65\155\141\x69\154", NULL) == NULL || variable_get("\x6d\151\156\x69\157\162\x61\x6e\x67\145\137\x73\x61\155\x6c\137\x63\165\x73\x74\157\x6d\145\x72\137\x69\144", NULL) == NULL || variable_get("\155\151\156\x69\157\x72\141\x6e\x67\x65\137\163\141\x6d\154\x5f\143\x75\x73\x74\157\x6d\x65\x72\137\141\x64\155\x69\x6e\x5f\x74\x6f\x6b\145\156", NULL) == NULL || variable_get("\155\x69\x6e\x69\x6f\x72\141\156\147\145\x5f\x73\x61\155\154\137\x63\x75\x73\x74\x6f\155\145\x72\x5f\x61\160\x69\137\x6b\145\171", NULL) == NULL) {
            goto K5;
        }
        if (!(variable_get("\x6d\x69\x6e\x69\157\x72\x61\x6e\147\x65\137\163\x61\155\x6c\x5f\x6c\x69\143\x65\156\163\x65\x5f\x6b\x65\x79") == NULL && variable_get("\155\x69\156\x69\x6f\162\x61\x6e\147\x65\137\163\141\x6d\x6c\137\x63\x75\x73\x74\x6f\x6d\145\162\x5f\141\x64\x6d\x69\x6e\x5f\x65\x6d\141\x69\x6c") != NULL)) {
            goto w_;
        }
        $form["\155\x61\162\x6b\165\160\137\155\163\147"] = array("\43\x6d\141\x72\153\165\160" => "\74\x64\x69\x76\x20\143\x6c\x61\163\x73\x3d\42\155\157\x5f\163\141\155\x6c\x5f\x72\x65\x67\x69\x73\x74\x65\x72\137\155\x65\x73\163\141\x67\145\42\x3e\x3c\160\x3e\131\x6f\x75\40\156\145\x65\x64\x20\164\x6f\40\74\x61\40\x68\162\x65\146\75\x22" . $u8 . "\42\x20\x20\x3e\x76\x65\162\x69\x66\x79\x20\74\x2f\x61\76\x20\171\x6f\x75\162\40\154\x69\x63\145\x6e\163\145\40\153\x65\x79\x20\x62\145\146\157\x72\x65\x20\165\x73\151\156\147\x20\x74\150\x69\x73\x20\x6d\x6f\x64\x75\154\145\x2e\x3c\57\141\76\74\57\160\x3e\x3c\57\x64\151\166\76");
        return TRUE;
        w_:
        goto Qf;
        K5:
        $form["\x6d\141\162\153\165\160\137\162\x65\x67\x5f\155\163\x67"] = array("\43\155\x61\x72\x6b\165\x70" => "\74\x64\x69\x76\x20\143\154\141\163\x73\x3d\x22\155\x6f\x5f\x73\x61\x6d\154\137\x72\145\x67\151\163\164\x65\x72\x5f\x6d\145\163\163\x61\147\x65\42\76\x59\x6f\165\x20\156\x65\x65\144\x20\164\x6f\x20\x3c\141\40\150\162\145\x66\x3d\x22" . $u8 . "\42\x20\76\x4c\157\147\x69\x6e\x3c\x2f\x61\76\x20\167\x69\x74\x68\x20\155\x69\156\151\x4f\x72\x61\156\x67\x65\x20\141\143\143\157\165\x6e\x74\40\x62\x65\x66\x6f\x72\145\x20\x75\x73\x69\x6e\147\40\164\150\151\163\40\x6d\x6f\x64\165\154\145\56\74\57\143\x65\156\x74\145\162\x3e\74\57\x64\x69\x76\76");
        return TRUE;
        Qf:
        if (!(variable_get("\x6d\x69\156\151\x6f\x72\x61\x6e\x67\145\137\163\141\x6d\x6c\x5f\154\x69\143\x65\156\163\145\137\x6b\x65\171") != NULL && variable_get("\155\x69\x6e\151\157\x72\141\156\x67\x65\137\x73\141\x6d\154\x5f\x63\165\x73\164\x6f\155\145\x72\137\x61\144\155\151\156\x5f\145\x6d\141\x69\154") != NULL)) {
            goto p9;
        }
        return FALSE;
        p9:
    }
    public static function createUpdateUrl($R3, $uz, $Xf, $xH, $UU, $nc)
    {
        $tx = "\x31\x31\x31\x31\61\61\61\61\61\61\61\61\x31\x31\61\x31" . $R3;
        $Va = $nc . "\x2f\155\x6f\x61\x73\57\141\160\151\x2f\160\154\x75\147\151\x6e\57\x64\x72\165\x70\141\154\x4a\157\157\155\x6c\141\x55\160\144\141\x74\x65\x2f" . $UU . "\57" . $uz . "\x2f" . $Xf . "\57";
        $Mj = openssl_cipher_iv_length($z2 = "\101\x45\x53\x2d\61\x32\70\x2d\x43\102\x43");
        $BU = openssl_random_pseudo_bytes($Mj);
        $wg = openssl_encrypt($tx, $z2, $xH, $XV = OPENSSL_RAW_DATA, $BU);
        return $Va . str_replace(array("\x2b", "\x2f", "\75"), array("\x2d", "\137", ''), base64_encode($wg));
    }
    public static function AddsupportTab(&$form, $form_state)
    {
        $form["\x6d\141\162\x6b\165\160\137\151\x64\160\x5f\141\x74\x74\x72\x5f\150\x65\x61\x64\x65\162\137\164\x6f\x70\137\163\165\160\160\157\x72\x74"] = array("\43\x6d\141\x72\153\x75\x70" => "\74\144\151\x76\40\x63\x6c\x61\x73\x73\75\x22\x6d\x6f\137\163\141\155\x6c\137\x74\x61\x62\x6c\145\137\154\141\171\157\x75\x74\137\x73\x75\x70\x70\157\162\164\137\x31\x22\76");
        $form["\155\141\162\x6b\x75\160\137\163\165\x70\x70\157\162\164\137\x31"] = array("\x23\155\141\x72\x6b\x75\160" => "\x3c\150\x33\76\x46\145\x61\164\x75\162\x65\40\x52\145\161\x75\145\x73\164\57\103\157\156\x74\x61\x63\164\40\x55\163\72\74\57\150\63\76\x3c\x64\151\x76\x3e\116\x65\x65\x64\x20\141\156\171\x20\x68\x65\154\x70\77\40\127\145\40\143\x61\x6e\40\x68\x65\154\x70\40\x79\x6f\x75\x20\167\151\164\150\x20\x63\x6f\156\146\x69\147\x75\x72\151\x6e\147\x20\171\x6f\x75\162\x20\123\x65\162\166\151\143\145\40\x50\162\157\166\x69\144\145\162\56\40\112\165\x73\x74\40\163\x65\x6e\144\x20\165\163\40\x61\40\x71\x75\145\x72\x79\x20\141\x6e\144\x20\167\145\x20\167\151\x6c\x6c\40\x67\145\164\x20\142\141\x63\x6b\x20\x74\x6f\x20\171\x6f\165\x20\x73\x6f\157\x6e\56\74\142\x72\x20\x2f\76\74\x2f\x64\x69\166\x3e\74\142\162\x3e");
        $form["\155\x69\x6e\x69\157\162\141\156\147\x65\x5f\x73\141\155\x6c\137\x65\x6d\x61\x69\x6c\x5f\141\144\x64\x72\145\x73\x73"] = array("\43\x74\171\x70\x65" => "\164\x65\x78\x74\146\x69\x65\x6c\144", "\x23\x61\x74\x74\162\x69\142\165\164\145\x73" => array("\x73\x74\x79\154\x65" => "\167\151\144\x74\150\72\x31\x30\60\45", "\x70\154\x61\x63\145\x68\157\x6c\x64\145\162" => "\x45\x6e\164\145\x72\40\171\157\x75\x72\x20\105\155\x61\x69\x6c"), "\43\144\x65\146\141\x75\154\164\x5f\x76\141\x6c\x75\x65" => variable_get("\155\151\156\151\157\162\x61\x6e\147\145\x5f\x73\141\x6d\154\x5f\x63\x75\163\164\157\x6d\145\162\x5f\x61\x64\x6d\151\x6e\x5f\145\x6d\141\151\154", ''));
        $form["\155\x69\x6e\x69\157\162\x61\156\x67\x65\137\x73\141\x6d\154\137\x70\150\x6f\x6e\145\137\156\165\155\x62\145\x72"] = array("\x23\x74\x79\160\145" => "\164\145\170\x74\x66\x69\145\154\144", "\43\x61\x74\x74\x72\151\142\165\164\x65\x73" => array("\163\164\171\154\145" => "\167\x69\x64\164\x68\x3a\x31\x30\x30\45", "\x70\154\x61\x63\x65\150\157\x6c\x64\145\x72" => "\105\156\164\x65\162\x20\171\x6f\x75\x72\x20\160\x68\157\156\145\40\156\165\x6d\x62\145\x72\40\167\x69\x74\x68\40\143\157\165\156\164\162\171\x20\x63\x6f\144\x65\x20\x65\x67\x2e\50\x2b\x31\51"), "\x23\x64\145\x66\141\x75\154\164\x5f\166\141\x6c\x75\145" => variable_get("\x6d\x69\x6e\151\157\162\x61\x6e\147\145\137\163\x61\155\x6c\x5f\x63\x75\163\164\x6f\155\x65\x72\137\x61\x64\x6d\151\x6e\137\160\150\157\x6e\x65", ''));
        $form["\155\151\x6e\151\x6f\162\x61\x6e\147\145\x5f\x73\141\x6d\154\137\163\165\x70\160\x6f\162\x74\x5f\161\165\145\162\x79"] = array("\x23\164\x79\x70\x65" => "\x74\x65\x78\x74\141\162\x65\x61", "\43\x63\157\154\163" => "\x31\x30", "\x23\162\157\167\163" => "\65", "\43\x61\164\164\x72\151\x62\x75\164\x65\163" => array("\163\164\x79\154\x65" => "\x77\x69\144\x74\150\72\61\60\60\x25\x3b\142\157\x72\144\145\162\55\162\141\x64\151\165\163\72\62\160\170\x3b\x62\x61\143\x6b\x67\x72\157\x75\156\144\x3a\43\x66\143\146\143\146\x61\73\142\157\170\55\163\150\x61\x64\x6f\167\x3a\x20\x69\156\x73\x65\164\40\x30\x20\61\160\x78\40\62\160\x78\x20\x72\147\142\x61\50\60\x2c\40\60\x2c\40\x30\54\x20\60\x2e\x31\62\x35\51\73\x66\x6f\x6e\x74\55\x66\x61\x6d\x69\x6c\x79\x3a\x20\x48\145\154\166\x65\164\x69\x63\x61\x20\116\x65\x75\x65\54\x20\x48\145\154\x76\x65\164\x69\x63\141\54\x20\101\162\x69\141\x6c\54\x20\163\141\x6e\x73\55\163\145\x72\151\x66\x3b", "\160\154\x61\x63\x65\150\157\x6c\x64\145\x72" => "\127\x72\x69\164\145\x20\x79\157\x75\x72\x20\x71\165\x65\162\171\40\x68\x65\162\x65\56"), "\x23\162\145\163\151\x7a\x61\142\x6c\145" => False);
        $form["\x6d\151\156\x69\x6f\x72\141\x6e\147\145\137\x73\141\x6d\x6c\x5f\163\x75\160\x70\157\x72\164\x5f\x73\x75\142\x6d\x69\164\x5f\x63\x6c\x69\143\153"] = array("\43\164\171\x70\x65" => "\x73\165\142\x6d\x69\x74", "\x23\166\x61\x6c\x75\x65" => t("\x53\x75\142\155\x69\x74\40\x51\165\x65\x72\171"), "\x23\x73\x75\142\155\x69\164" => array("\125\164\151\x6c\x69\x74\151\x65\x73\72\x3a\163\145\x6e\x64\x5f\x73\x75\x70\x70\157\x72\164\137\161\x75\x65\162\x79"), "\x23\x61\x74\x74\x72\x69\x62\x75\x74\145\163" => array("\x73\164\x79\x6c\145" => "\x62\x61\143\153\x67\x72\157\165\x6e\144\x3a\x20\43\x33\x33\67\141\x62\67\x3b\x63\x6f\154\157\162\x3a\x20\43\146\x66\x66\146\x66\146\73\164\145\170\x74\x2d\163\x68\141\144\157\167\72\x20\60\40\x2d\x31\160\170\x20\x31\x70\170\40\43\63\x33\x37\x61\x62\67\54\40\61\x70\170\x20\60\40\x31\x70\x78\40\x23\63\x33\67\x61\x62\x37\x2c\x20\60\40\61\160\170\40\61\160\170\40\43\63\x33\x37\141\142\67\x2c\40\55\x31\160\170\40\60\40\x31\x70\x78\40\x23\63\x33\x37\x61\142\67\x3b\142\x6f\x78\x2d\x73\x68\x61\x64\157\x77\x3a\40\60\x20\61\160\170\x20\x30\40\x23\x33\63\67\x61\x62\x37\73\x62\x6f\162\x64\x65\x72\x2d\x63\x6f\154\157\162\72\40\43\x33\63\67\141\142\67\40\x23\x33\63\67\141\142\67\x20\43\63\x33\67\x61\142\67\x3b\144\151\x73\160\x6c\141\x79\x3a\142\x6c\157\x63\153\x3b\155\141\x72\x67\x69\156\55\154\x65\146\x74\x3a\141\x75\164\x6f\73\155\141\162\147\151\156\55\x72\x69\x67\150\x74\72\141\x75\x74\x6f\x3b"));
        $form["\x6d\x69\x6e\x69\x6f\162\141\156\147\x65\137\163\x61\155\x6c\137\x73\165\160\160\157\162\164\137\156\x6f\164\x65"] = array("\x23\x6d\x61\x72\x6b\x75\x70" => "\74\144\151\x76\76\111\146\x20\171\157\165\40\167\141\156\164\x20\x63\165\x73\x74\157\155\x20\x66\x65\141\x74\x75\162\x65\x73\x20\x69\x6e\x20\164\150\145\x20\160\x6c\x75\147\151\x6e\x2c\x20\x6a\165\x73\x74\x20\144\162\x6f\x70\x20\x61\156\40\x65\155\141\151\154\x20\164\x6f\40\x3c\141\x20\150\x72\145\146\75\x22\155\141\151\154\164\x6f\72\x64\162\165\x70\141\154\x73\x75\160\160\157\x72\x74\100\x78\145\x63\x75\x72\x69\x66\x79\x2e\x63\x6f\x6d\42\x3e\144\x72\x75\160\x61\154\163\x75\160\x70\157\162\x74\x40\170\145\143\x75\x72\151\x66\171\x2e\143\157\155\x3c\57\x61\x3e\74\x2f\x64\x69\x76\76");
        $form["\x6d\151\156\151\x6f\x72\x61\156\x67\x65\x5f\x66\x61\161"] = array("\x23\155\141\162\x6b\165\x70" => "\74\142\x72\x3e\74\x64\x69\x76\x20\163\x74\171\x6c\145\x3d\x22\x74\x65\170\164\x2d\x61\x6c\x69\147\x6e\72\40\143\x65\x6e\164\145\x72\x3b\x22\76\74\x61\40\x63\154\141\x73\163\x3d\42\x6d\157\x5f\x73\x61\155\x6c\x5f\x62\164\156\40\155\157\x5f\x73\x61\155\x6c\x5f\x62\x74\x6e\55\160\162\151\155\x61\x72\171\x2d\146\141\x71\40\x6d\157\x5f\163\x61\155\154\x5f\142\x74\156\55\x6c\141\x72\147\x65\40\x6d\x6f\137\x73\x61\x6d\x6c\137\x62\x74\156\x5f\x66\x61\x71\137\x62\165\x74\164\157\156\x73\x22\40\163\x74\x79\x6c\x65\x3d\x22\x66\154\x6f\x61\164\x3a\x20\151\156\150\x65\x72\151\164\x3b\x70\x61\x64\144\151\156\x67\72\40\63\160\170\x20\66\160\x78\x20\41\151\155\160\157\162\x74\x61\x6e\x74\x3b\143\x6f\x6c\x6f\162\72\40\x23\x34\x38\141\x30\144\x63\x3b\142\157\162\x64\x65\162\72\x20\62\x70\x78\40\x73\157\154\x69\x64\40\43\x34\x38\141\x30\x64\x63\73\42\40\x68\x72\145\146\x3d\42\150\164\164\160\163\x3a\57\57\146\x61\x71\x2e\x6d\151\156\151\x6f\x72\141\x6e\x67\145\x2e\143\157\155\x2f\x6b\x62\57\x64\162\x75\160\141\x6c\x2f\x73\141\155\154\55\144\x72\x75\160\x61\x6c\57\x22\40\164\141\x72\x67\x65\164\x3d\42\137\x62\154\141\156\153\x22\76" . "\106\101\x51\163\x3c\57\141\x3e");
        $form["\x6d\151\156\x69\x6f\162\141\x6e\x67\145\137\x67\x75\x69\x64\145"] = array("\x23\155\141\x72\153\x75\160" => "\74\141\x20\x63\x6c\x61\x73\163\x3d\42\155\157\x5f\x73\141\155\154\x5f\x62\x74\x6e\40\155\x6f\x5f\x73\141\155\x6c\x5f\142\x74\x6e\55\160\x72\x69\155\141\x72\x79\55\146\141\x71\40\155\x6f\137\163\141\x6d\154\137\142\x74\x6e\x2d\154\x61\x72\147\x65\40\155\x6f\x5f\x73\x61\155\154\137\142\164\156\x5f\x66\x61\x71\137\142\x75\164\x74\x6f\156\163\x22\x20\x73\x74\x79\x6c\x65\x3d\42\146\154\x6f\141\164\72\x20\151\156\150\145\162\151\164\x3b\160\x61\x64\x64\x69\156\147\72\x20\63\x70\x78\40\x36\x70\x78\40\41\151\155\x70\157\162\x74\141\x6e\x74\73\x63\157\x6c\x6f\162\72\40\43\64\x38\x61\x30\x64\143\x3b\142\157\x72\144\x65\x72\72\x20\x32\x70\170\40\x73\x6f\154\x69\144\x20\43\x34\70\x61\60\x64\143\73\42\x20\x68\162\x65\146\75\x22\x68\164\x74\x70\x73\72\57\x2f\160\x6c\x75\147\151\156\x73\56\x6d\151\x6e\151\157\162\141\x6e\x67\145\56\x63\x6f\x6d\x2f\x63\157\156\x66\x69\x67\x75\162\x65\55\144\x72\165\160\x61\x6c\x2d\163\x61\x6d\x6c\55\x73\151\156\x67\154\x65\55\x73\151\147\x6e\x2d\x6f\156\x22\x20\x74\x61\x72\147\145\164\x3d\42\x5f\142\x6c\x61\x6e\153\x22\76" . "\123\x65\x74\x75\x70\40\107\165\x69\144\x65\x73\x3c\57\141\76");
        $form["\155\151\156\151\157\162\x61\156\x67\x65\x5f\146\x6f\162\x75\x6d"] = array("\43\x6d\x61\162\x6b\x75\160" => "\x3c\x62\x3e\74\x2f\x62\76\x3c\x61\x20\143\154\141\163\163\75\42\155\x6f\x5f\x73\x61\x6d\x6c\137\x62\x74\x6e\40\x6d\x6f\x5f\x73\x61\155\154\x5f\142\164\x6e\x2d\x70\162\x69\x6d\x61\162\x79\55\146\141\x71\x20\155\157\x5f\x73\x61\155\154\137\142\164\x6e\x2d\154\141\x72\147\x65\40\155\x6f\137\x73\x61\155\154\x5f\x62\164\156\x5f\x66\x61\161\x5f\x62\x75\164\x74\157\156\x73\42\x20\x73\164\x79\x6c\x65\x3d\42\x6d\141\162\x67\151\x6e\55\154\145\x66\x74\72\x20\x31\60\x70\x78\x3b\40\146\154\x6f\141\x74\x3a\x20\151\x6e\x68\145\x72\x69\164\x3b\160\141\x64\x64\x69\x6e\x67\x3a\x20\63\x70\170\x20\66\160\x78\40\x21\x69\x6d\160\x6f\162\164\x61\156\x74\73\x63\157\x6c\157\162\x3a\40\43\64\70\141\60\144\x63\x3b\x62\157\162\144\145\162\72\x20\62\x70\x78\40\x73\x6f\154\151\x64\40\x23\64\x38\141\60\x64\143\73\x22\x20\x68\x72\145\x66\75\x22\150\x74\164\x70\163\72\57\x2f\146\x6f\162\165\155\56\155\x69\156\x69\157\162\x61\156\147\x65\x2e\143\157\x6d\x2f\42\x20\164\x61\x72\147\145\164\x3d\42\x5f\142\x6c\141\x6e\153\42\x3e" . "\x41\x73\x6b\x20\161\165\145\x73\164\x69\x6f\x6e\163\x20\x6f\156\40\146\x6f\162\x75\x6d\x3c\57\x61\76\74\x2f\144\x69\x76\76\x3c\57\144\151\166\x3e");
    }
    public static function Is_Restricted_Domain($ji)
    {
        $xY = variable_get("\x6d\x69\x6e\151\157\162\141\x6e\x67\145\137\x73\x61\x6d\154\x5f\x65\x6e\x61\142\154\145\137\144\157\155\x61\151\156\x5f\x72\x65\163\x74\162\x69\143\164\151\157\x6e");
        if (!($xY === FALSE)) {
            goto mL;
        }
        return FALSE;
        mL:
        $Cl = explode("\100", $ji)[1];
        if (!(is_null($Cl) || empty($Cl))) {
            goto Dd;
        }
        return FALSE;
        Dd:
        $v9 = variable_get("\x6d\x69\x6e\x69\x6f\162\141\x6e\147\145\x5f\163\141\155\154\137\x64\x6f\155\141\151\156\163");
        $Nr = variable_get("\155\x69\156\151\157\x72\x61\x6e\147\145\137\163\141\x6d\x6c\x5f\x64\x6f\x6d\x61\x69\x6e\x73\137\x61\x72\x65\137\167\150\151\x74\x65\137\x6f\162\137\142\x6c\x61\143\153");
        $v9 = explode("\x3b", $v9);
        if ($Nr === "\167\150\151\164\x65") {
            goto pG;
        }
        if ($Nr == "\x62\154\x61\143\x6b") {
            goto C9;
        }
        goto Ty;
        pG:
        if (array_search($Cl, $v9) === FALSE) {
            goto ax;
        }
        return FALSE;
        goto C6;
        ax:
        return TRUE;
        C6:
        goto Ty;
        C9:
        if (array_search($Cl, $v9) === FALSE) {
            goto Vm;
        }
        return TRUE;
        goto cN;
        Vm:
        return FALSE;
        cN:
        Ty:
    }
    public static function send_support_query(&$form, $form_state)
    {
        $EV = trim($form["\x6d\x69\x6e\x69\157\x72\141\156\147\145\x5f\x73\x61\x6d\154\137\x65\155\141\151\x6c\x5f\141\x64\144\x72\x65\163\163"]["\43\x76\x61\x6c\x75\x65"]);
        $nD = trim($form["\155\x69\156\x69\x6f\162\141\156\147\145\x5f\163\141\x6d\154\x5f\160\x68\x6f\156\x65\137\x6e\165\155\x62\145\162"]["\x23\166\x61\154\165\x65"]);
        $AH = trim($form["\x6d\x69\x6e\x69\157\x72\x61\156\x67\145\137\x73\141\155\154\x5f\163\165\x70\160\x6f\162\x74\137\x71\165\145\162\171"]["\x23\x76\141\x6c\x75\145"]);
        Utilities::send_query($EV, $nD, $AH);
    }
    public static function send_query($EV, $nD, $AH)
    {
        if (empty($EV) || empty($AH)) {
            goto Lo;
        }
        if (!valid_email_address($EV)) {
            goto de;
        }
        goto rZ;
        Lo:
        drupal_set_message(t("\124\150\x65\x20\74\x62\x3e\74\x75\x3e\105\x6d\x61\x69\x6c\74\57\x75\76\74\x2f\x62\76\40\141\x6e\144\40\x3c\142\x3e\74\165\76\121\x75\145\x72\x79\x3c\57\x75\76\x3c\57\x62\x3e\x20\146\x69\x65\x6c\144\x73\x20\141\162\145\x20\162\145\x71\x75\x69\x72\x65\144\x2e"), "\x65\162\x72\157\162");
        return;
        goto rZ;
        de:
        drupal_set_message(t("\124\150\145\40\x65\155\x61\151\x6c\40\141\x64\x64\162\145\x73\x73\40\x3c\142\76\74\x69\76" . $EV . "\x3c\x2f\x69\76\74\x2f\142\x3e\40\x69\x73\40\156\x6f\164\x20\166\x61\154\x69\144\x2e"), "\x65\162\x72\157\162");
        return;
        rZ:
        $kS = new MiniOrangeSamlSupport($EV, $nD, $AH);
        $xi = $kS->sendSupportQuery();
        if ($xi) {
            goto TP;
        }
        drupal_set_message(t("\105\162\162\157\162\x20\x73\145\156\144\x69\x6e\x67\x20\x73\165\160\x70\x6f\x72\x74\40\x71\165\145\162\171"), "\x65\162\x72\x6f\x72");
        goto c4;
        TP:
        drupal_set_message(t("\x53\165\160\x70\x6f\x72\164\40\x71\165\145\162\x79\x20\163\x75\143\x63\x65\163\163\x66\x75\154\154\171\x20\163\145\156\x74"));
        c4:
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $Va = variable_get("\x6d\151\x6e\151\x6f\x72\x61\x6e\x67\x65\x5f\163\141\155\x6c\x5f\x62\x61\163\x65\x5f\165\162\x6c", '');
        $ni = isset($Va) && !empty($Va) ? $Va : $base_url;
        return $ni;
    }
    public static function getIssuer()
    {
        $mP = variable_get("\x6d\x69\x6e\x69\157\x72\141\x6e\x67\145\x5f\163\141\155\x6c\137\145\x6e\x74\x69\x74\171\137\x69\x64", '');
        $ni = Utilities::miniorange_get_baseURL();
        $Jk = isset($mP) && !empty($mP) ? $mP : $ni;
        return $Jk;
    }
    public static function getCertificatePath($ol = false)
    {
        $ni = '';
        if (!$ol) {
            goto d5;
        }
        $ni = self::miniorange_get_baseURL() . "\57";
        d5:
        $D6 = drupal_get_path("\155\x6f\x64\165\154\x65", "\155\151\156\151\157\162\141\156\x67\x65\137\x73\141\x6d\154");
        return $ni . $D6 . "\57\x72\145\163\157\x75\x72\143\145\163\57" . self::getCertficateName();
    }
    public static function getCertficateName()
    {
        $UP = variable_get("\155\151\x6e\151\157\162\x61\156\147\x65\137\x73\x61\155\154\137\160\x75\142\x6c\137\x63\x65\162\x74\151\x66\x69\143\x61\164\x65", '');
        if (empty($UP)) {
            goto HZ;
        }
        return MiniorangeSAMLConstants::CUSTOM_PUBLIC_CERT_NAME;
        goto wP;
        HZ:
        return MiniorangeSAMLConstants::DEFAULT_PUBLIC_CERT_NAME;
        wP:
    }
    public static function getKeyPath()
    {
        $D6 = drupal_get_path("\155\x6f\x64\x75\x6c\x65", "\x6d\x69\156\x69\x6f\x72\x61\x6e\147\x65\137\163\x61\x6d\x6c");
        return $D6 . "\x2f\x72\x65\x73\x6f\x75\162\143\145\x73\57" . self::getKeyName();
    }
    public static function getKeyName()
    {
        $aY = variable_get("\155\151\156\x69\x6f\x72\x61\156\147\145\137\x73\141\155\x6c\137\x70\162\151\166\141\x74\145\137\x63\145\162\x74\x69\146\x69\x63\x61\164\x65", '');
        if (empty($aY)) {
            goto GL;
        }
        return MiniorangeSAMLConstants::CUSTOM_PRIVATE_KEY_NAME;
        goto pN;
        GL:
        return MiniorangeSAMLConstants::DEFAULT_PRIVATE_KEY_NAME;
        pN:
    }
    public static function getTabNames()
    {
        $T0 = array("\111\x64\x65\156\x74\151\164\171\137\x50\162\157\x76\151\144\x65\x72" => "\x6d\157\x5f\x6f\160\164\151\157\x6e\x73\x5f\x65\156\x75\x6d\x5f\151\x64\145\156\164\x69\x74\171\137\x70\162\157\x76\151\x64\x65\x72", "\x53\x65\162\x76\x69\143\x65\137\x50\162\x6f\166\x69\x64\145\x72" => "\155\x6f\137\157\160\x74\151\x6f\156\x73\x5f\x65\156\x75\155\137\163\145\162\166\151\143\x65\x5f\160\162\157\x76\x69\144\145\162", "\x4d\x61\x70\160\x69\156\147" => "\x6d\x6f\x5f\x6f\x70\164\151\157\156\x73\137\145\x6e\x75\x6d\137\155\141\160\160\151\156\x67", "\123\151\x67\156\x5f\111\156\x5f\x53\145\164\x74\151\x6e\147\x73" => "\x6d\157\x5f\157\x70\x74\x69\x6f\156\x73\137\x65\156\x75\x6d\x5f\x73\x69\147\156\137\x69\156\x5f\x73\x65\x74\x74\x69\x6e\147\x73", "\103\165\x73\x74\157\x6d\137\103\145\162\164\x69\146\x69\x63\x61\164\x65" => "\x6d\157\137\x6f\x70\x74\151\157\x6e\x73\x5f\x65\156\165\x6d\137\143\x75\x73\164\x6f\x6d\x5f\x63\145\x72\164\x69\146\x69\x63\x61\x74\x65");
        return $T0;
    }
    public static function getVariableNames($T8)
    {
        if ($T8 == "\x6d\x6f\x5f\157\x70\164\x69\157\156\163\x5f\145\x6e\165\155\137\x69\x64\x65\156\x74\151\164\171\x5f\160\162\157\166\151\x64\x65\x72") {
            goto Gn;
        }
        if ($T8 == "\155\x6f\x5f\x6f\x70\164\x69\x6f\x6e\x73\137\145\x6e\165\x6d\x5f\x73\145\162\x76\151\x63\145\137\x70\x72\x6f\166\x69\144\145\162") {
            goto xW;
        }
        if ($T8 == "\155\157\x5f\157\x70\x74\151\x6f\156\163\137\x65\x6e\x75\155\137\155\x61\160\x70\151\x6e\147") {
            goto l3;
        }
        if ($T8 == "\155\x6f\x5f\157\x70\164\x69\x6f\156\163\x5f\145\156\165\x6d\137\x73\151\147\156\137\151\x6e\x5f\x73\x65\164\164\x69\x6e\147\x73") {
            goto eC;
        }
        if (!($T8 == "\155\x6f\x5f\x6f\x70\164\151\x6f\x6e\163\x5f\145\x6e\x75\155\x5f\143\x75\x73\x74\x6f\x6d\x5f\x63\145\162\x74\151\146\x69\x63\x61\164\145")) {
            goto fb;
        }
        $dU = array("\103\165\163\164\157\x6d\137\x70\162\x69\x76\141\x74\x65\137\143\x65\162\164" => "\x6d\x69\156\x69\x6f\x72\141\x6e\x67\x65\137\163\x61\x6d\x6c\137\160\x72\151\x76\x61\164\145\137\143\x65\x72\164\x69\x66\151\x63\141\x74\145", "\x43\x75\163\164\x6f\155\x5f\x70\x75\x62\x6c\x69\143\137\143\x65\162\x74" => "\155\151\156\151\157\162\141\x6e\147\x65\137\x73\x61\155\154\x5f\x70\165\x62\x6c\137\143\145\x72\x74\x69\x66\151\x63\x61\x74\145");
        fb:
        goto nD;
        eC:
        $dU = array("\x50\x72\157\164\x65\x63\x74\137\x77\150\157\154\x65\x5f\163\151\164\x65" => "\155\151\156\151\157\x72\x61\x6e\147\x65\137\x73\141\x6d\x6c\137\146\157\x72\143\145\x5f\x61\x75\x74\x68", "\x41\165\164\157\x5f\162\x65\x64\x69\x72\x65\143\x74" => "\x6d\151\x6e\x69\157\x72\141\156\147\x65\x5f\x73\x61\155\154\x5f\x61\x75\x74\157\137\162\145\144\x69\x72\145\143\164\137\x74\x6f\x5f\x69\x64\x70", "\102\x61\143\153\144\157\157\x72\x5f\x4c\x6f\147\151\x6e" => "\155\x69\156\x69\157\x72\141\156\x67\x65\137\163\x61\155\x6c\137\x65\x6e\x61\142\154\145\137\x62\141\143\x6b\x64\157\x6f\162", "\x44\x65\x66\x61\x75\154\x74\137\162\x65\x64\x69\x72\145\x63\x74\x5f\x75\x72\154" => "\x6d\151\156\151\x6f\162\141\x6e\x67\145\x5f\163\141\x6d\x6c\137\144\x65\146\141\165\154\164\x5f\162\145\x6c\x61\171\163\x74\x61\164\145", "\142\x61\x63\x6b\x64\x6f\x6f\162\121\x75\145\162\171" => "\x6d\151\x6e\x69\157\162\141\x6e\147\x65\x5f\x62\x61\x63\x6b\144\157\157\x72\137\x71\165\x65\x72\x79", "\145\156\x61\x62\x6c\x65\x5f\144\157\155\141\x69\156\137\162\145\x73\x74\162\151\143\164\151\157\x6e" => "\x6d\x69\x6e\151\x6f\x72\x61\x6e\147\x65\137\163\141\155\154\137\x65\x6e\141\x62\154\x65\137\144\x6f\x6d\141\x69\x6e\137\162\x65\163\164\162\151\x63\164\x69\x6f\x6e", "\x6d\x69\156\x69\157\x72\141\x6e\147\x65\137\x73\141\155\154\x5f\144\157\155\x61\151\x6e\163\x5f\141\x72\x65\x5f\x77\150\151\x74\x65\x5f\x6f\162\x5f\x62\x6c\141\143\x6b" => "\155\x69\156\x69\157\162\x61\x6e\147\145\137\163\141\155\154\137\144\157\155\141\x69\x6e\163\137\141\162\145\x5f\167\150\x69\x74\x65\x5f\x6f\x72\137\142\154\141\x63\153", "\155\x69\x6e\x69\x6f\162\x61\x6e\x67\145\137\163\141\155\x6c\x5f\144\x6f\155\x61\151\156\163" => "\155\x69\156\x69\157\162\141\x6e\x67\x65\137\163\x61\155\x6c\137\144\x6f\155\141\x69\156\x73");
        nD:
        goto nc;
        l3:
        $dU = array("\125\163\x65\162\156\141\x6d\145\137\141\x74\164\x72" => "\155\x69\156\x69\x6f\x72\141\156\x67\145\x5f\x73\141\x6d\154\x5f\x75\163\145\162\x6e\141\155\x65\x5f\141\x74\x74\x72\151\x62\x75\164\145", "\x45\155\141\151\x6c\x5f\x61\x74\x74\x72" => "\x6d\x69\x6e\x69\157\162\141\x6e\x67\145\x5f\x73\141\155\154\x5f\x65\155\141\151\154\x5f\x61\x74\164\162\x69\x62\165\164\145", "\x52\x6f\154\145" => "\155\x69\156\151\157\x72\x61\x6e\x67\145\137\163\141\x6d\x6c\137\151\x64\x70\x5f\x61\164\164\162\x31\x5f\x6e\x61\155\x65", "\122\x6f\x6c\145\137\x6d\141\x70\160\x69\x6e\x67" => "\155\151\x6e\x69\x6f\162\x61\156\x67\145\137\163\x61\155\x6c\137\x65\x6e\141\142\154\x65\137\162\157\154\145\155\141\x70\160\151\156\147", "\104\x69\x73\x61\x62\154\145\x5f\x61\165\x74\x6f\x5f\143\x72\145\x61\x74\x65\137\165\x73\145\162" => "\155\x69\x6e\x69\157\x72\x61\156\147\145\x5f\x73\x61\155\154\x5f\x64\x69\163\141\x62\154\145\x5f\141\x75\x74\x6f\143\x72\x65\x61\x74\x65\137\165\163\145\162\x73", "\104\145\x66\x61\165\x6c\x74\137\x72\x6f\x6c\145" => "\155\151\x6e\151\x6f\162\x61\156\147\145\x5f\x73\x61\155\154\x5f\144\x65\x66\141\x75\x6c\164\x5f\x72\157\154\x65", "\104\157\x5f\x6e\157\164\137\165\160\144\x61\164\145\x5f\x75\163\x65\x72\137\x72\x6f\154\145\163" => "\x6d\x69\156\151\157\x72\x61\x6e\x67\145\x5f\x73\x61\x6d\x6c\137\144\x69\163\x61\x62\x6c\145\137\162\x6f\154\x65\x5f\x75\x70\144\141\x74\x65");
        nc:
        goto HV;
        xW:
        $dU = array("\x49\x64\x65\156\x74\151\x74\171\x5f\156\141\x6d\x65" => "\155\x69\156\x69\x6f\x72\x61\x6e\147\145\137\163\141\x6d\154\x5f\151\x64\x70\137\156\141\x6d\145", "\111\163\163\165\x65\x72" => "\155\x69\156\151\157\x72\x61\x6e\x67\x65\x5f\163\x61\155\x6c\137\x69\144\x70\137\x69\163\x73\x75\x65\x72", "\x45\x6e\141\142\x6c\145\137\123\151\x67\x6e\145\144\x5f\x53\123\117\137\x61\156\144\137\x53\114\117" => "\155\x69\156\151\x6f\x72\141\x6e\x67\145\137\x73\x61\155\154\x5f\x72\145\x71\x75\145\163\x74\x5f\x73\151\x67\x6e\145\144", "\x4e\141\155\x65\137\111\104\137\x66\157\x72\155\141\x74" => "\x6d\x69\156\151\x6f\162\141\156\x67\x65\x5f\x6e\141\x6d\x65\151\144\137\x66\x6f\x72\x6d\x61\164", "\102\151\156\144\x69\x6e\x67\x5f\123\x53\117" => "\x6d\x69\x6e\x69\x6f\x72\141\x6e\147\145\x5f\163\141\155\x6c\137\150\x74\164\x70\x5f\x62\151\156\144\151\x6e\147", "\x42\x69\x6e\144\x69\x6e\x67\x5f\x53\x4c\117" => "\155\x69\156\x69\157\162\141\156\147\145\x5f\163\x61\155\x6c\x5f\150\x74\x74\x70\137\x62\x69\156\x64\x69\x6e\x67\x5f\163\x6c\x6f", "\x4c\157\147\x69\156\137\x55\x52\114" => "\x6d\x69\156\x69\157\x72\x61\x6e\147\x65\x5f\163\141\x6d\154\x5f\151\144\160\x5f\x6c\157\x67\151\x6e\137\165\162\154", "\105\x6e\x61\142\x6c\x65\137\x6c\x6f\x67\157\x75\164\137\167\x69\x74\x68\x6f\165\164\x5f\162\x65\163\x70\157\x6e\163\x65" => "\x6d\151\156\151\157\162\141\156\x67\145\x5f\163\x61\155\x6c\x5f\145\156\x61\x62\154\x65\137\154\x6f\147\x6f\165\x74", "\114\x6f\147\157\165\x74\137\125\122\114" => "\155\151\x6e\151\157\x72\x61\x6e\x67\145\x5f\163\x61\x6d\x6c\x5f\151\x64\x70\137\154\157\x67\157\165\x74\x5f\165\162\154", "\130\65\x30\x39\137\143\x65\x72\x74\x69\146\x69\143\141\164\145" => "\x6d\151\x6e\151\157\162\x61\x6e\147\145\x5f\163\x61\x6d\x6c\137\x69\144\x70\x5f\x78\65\x30\71\x5f\143\145\x72\x74\151\146\x69\x63\141\164\145", "\x45\x6e\x61\142\x6c\x65\137\154\157\147\x69\x6e\x5f\167\x69\x74\150\137\x53\x41\115\x4c" => "\x6d\x69\x6e\151\157\162\x61\x6e\147\145\137\163\x61\155\154\137\x65\156\x61\142\x6c\x65\x5f\154\157\x67\x69\x6e", "\x53\151\x67\x6e\x61\x74\165\x72\145\x5f\101\x6c\147\x6f" => "\163\x65\x63\165\162\x69\x74\x79\137\163\x69\147\x6e\x61\x74\165\162\x65\137\141\x6c\x67\x6f\x72\151\x74\x68\155");
        HV:
        goto ta;
        Gn:
        $dU = array("\102\162\x6f\153\145\x72\137\x73\145\x72\x76\x69\143\x65" => "\x6d\157\137\163\141\x6d\154\137\x65\x6e\141\x62\x6c\145\x5f\143\x6c\x6f\x75\144\x5f\142\162\x6f\x6b\x65\162", "\x53\120\x5f\102\141\163\145\x5f\125\x72\154" => "\x6d\151\x6e\x69\157\162\141\156\x67\x65\x5f\163\141\155\x6c\x5f\x62\141\163\145\137\165\x72\154", "\x53\120\137\105\156\164\151\164\x79\x5f\111\104" => "\x6d\x69\156\151\157\x72\141\x6e\147\x65\x5f\163\141\155\154\137\x65\156\164\151\x74\171\x5f\151\x64");
        ta:
        return $dU;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\165\162\x6c", get_loaded_extensions())) {
            goto Aq;
        }
        return 0;
        goto k4;
        Aq:
        return 1;
        k4:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($K8)
    {
        $x7 = '';
        $m3 = 0;
        RO:
        if (!($m3 < strlen($K8))) {
            goto H2;
        }
        $x7 .= sprintf("\x25\x30\62\x78", ord($K8[$m3]));
        ag:
        $m3++;
        goto RO;
        H2:
        return $x7;
    }
    public static function generateRandomBytes($Hx, $yY = TRUE)
    {
        return openssl_random_pseudo_bytes($Hx);
    }
    public static function insertSignature(XMLSecurityKey $xt, array $mA, DOMElement $Eb = NULL, DOMNode $F1 = NULL)
    {
        $Zf = new XMLSecurityDSig();
        $Zf->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($xt->type) {
            case XMLSecurityKey::RSA_SHA256:
                $wP = XMLSecurityDSig::SHA256;
                goto Up;
            case XMLSecurityKey::RSA_SHA384:
                $wP = XMLSecurityDSig::SHA384;
                goto Up;
            case XMLSecurityKey::RSA_SHA512:
                $wP = XMLSecurityDSig::SHA512;
                goto Up;
            default:
                $wP = XMLSecurityDSig::SHA1;
        }
        Mz:
        Up:
        $Zf->addReferenceList(array($Eb), $wP, array("\x68\164\x74\x70\x3a\x2f\x2f\167\167\167\56\167\x33\x2e\x6f\162\147\x2f\62\x30\x30\x30\x2f\x30\71\57\170\155\154\x64\163\x69\147\43\x65\156\x76\145\154\157\160\145\x64\x2d\x73\151\147\x6e\141\x74\165\162\145", XMLSecurityDSig::EXC_C14N), array("\x69\144\137\156\141\x6d\x65" => "\111\x44", "\x6f\x76\x65\162\167\x72\151\x74\x65" => FALSE));
        $Zf->sign($xt);
        foreach ($mA as $i8) {
            $Zf->add509Cert($i8, TRUE);
            Ne:
        }
        Mx:
        $Zf->insertSignature($Eb, $F1);
    }
    public static function signXML($DP, $ij, $Ys, $Z_ = '', $dd)
    {
        $IF = array("\164\x79\160\145" => "\x70\162\151\166\x61\164\145");
        if ($dd == "\122\x53\101\137\123\110\x41\62\x35\66") {
            goto tg;
        }
        if ($dd == "\x52\x53\101\x5f\123\110\101\x33\70\x34") {
            goto nq;
        }
        if ($dd == "\122\123\101\x5f\x53\x48\x41\65\x31\x32") {
            goto yb;
        }
        if ($dd == "\x52\123\x41\x5f\x53\x48\x41\x31") {
            goto TI;
        }
        goto ad;
        tg:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $IF);
        goto ad;
        nq:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $IF);
        goto ad;
        yb:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $IF);
        goto ad;
        TI:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $IF);
        ad:
        $xt->loadKey($Ys, TRUE);
        $iG = file_get_contents($ij);
        $Wt = new DOMDocument();
        $Wt->loadXML($DP);
        $Ve = $Wt->firstChild;
        if (!empty($Z_)) {
            goto pZ;
        }
        self::insertSignature($xt, array($iG), $Ve);
        goto Tx;
        pZ:
        $MX = $Wt->getElementsByTagName($Z_)->item(0);
        self::insertSignature($xt, array($iG), $Ve, $MX);
        Tx:
        $Ri = $Ve->ownerDocument->saveXML($Ve);
        $tM = base64_encode($Ri);
        return $tM;
    }
    public static function postSAMLRequest($Va, $jE, $B8)
    {
        echo "\74\150\164\155\x6c\76\x3c\150\x65\141\x64\x3e\15\12\40\x20\x20\x20\x20\40\40\x20\x20\40\40\40\40\x20\40\x20\40\40\74\163\x63\x72\x69\x70\x74\x20\163\x72\143\75\47\x68\x74\164\160\x73\72\57\x2f\x63\x6f\x64\145\x2e\152\x71\x75\145\162\x79\x2e\143\x6f\x6d\x2f\x6a\161\165\145\162\x79\x2d\61\x2e\x31\x31\56\63\x2e\155\151\156\x2e\152\x73\47\x3e\x3c\57\163\x63\x72\x69\160\x74\x3e\15\xa\x20\x20\40\40\40\40\x20\x20\x20\x20\40\x20\x20\40\x20\40\40\x20\74\163\143\x72\151\160\x74\x20\x74\171\x70\x65\75\x22\164\x65\x78\164\57\x6a\x61\x76\141\x73\143\x72\x69\x70\164\42\76\44\x28\146\x75\156\x63\x74\151\157\156\x28\51\173\x64\x6f\x63\165\x6d\x65\x6e\x74\x2e\x66\x6f\x72\155\x73\133\47\163\x61\x6d\154\55\162\x65\x71\165\x65\163\164\55\146\157\x72\x6d\47\x5d\56\163\165\142\x6d\151\x74\x28\51\73\x7d\x29\73\x3c\57\x73\143\x72\151\x70\164\x3e\x3c\57\x68\x65\x61\x64\x3e\xd\12\40\x20\x20\40\40\x20\40\x20\40\x20\x20\x20\x20\40\40\40\40\x20\x3c\142\157\x64\171\x3e\x50\x6c\145\141\x73\145\40\167\x61\151\x74\56\56\56\x3c\x66\157\162\x6d\x20\141\143\x74\151\157\x6e\75\x22" . $Va . "\x22\40\x6d\x65\164\x68\157\144\x3d\x22\160\x6f\163\164\x22\x20\x69\144\x3d\42\163\141\155\154\x2d\x72\x65\x71\165\x65\x73\x74\55\x66\x6f\162\155\42\x3e\15\xa\40\x20\40\x20\40\40\x20\x20\40\40\x20\40\40\x20\40\40\x20\40\x20\x20\x3c\x69\x6e\160\x75\x74\x20\164\171\x70\x65\75\42\150\151\144\144\x65\156\42\40\x6e\141\155\145\75\x22\123\101\115\x4c\x52\x65\161\165\145\x73\x74\42\x20\166\x61\154\x75\x65\x3d\42" . $jE . "\42\x20\57\x3e\xd\12\40\40\40\40\40\40\40\40\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\x20\74\x69\156\160\x75\x74\40\x74\171\160\145\75\42\150\151\x64\144\145\x6e\42\x20\156\141\155\x65\75\x22\x52\x65\x6c\x61\x79\x53\x74\x61\x74\x65\42\x20\166\141\154\x75\x65\75\42" . htmlentities($B8) . "\42\40\57\76\x3c\57\146\157\x72\155\x3e\xd\12\x20\40\40\40\40\x20\40\40\x20\40\x20\x20\x20\40\x20\40\40\x20\x20\40\74\57\142\157\x64\x79\x3e\xd\xa\x20\x20\x20\40\40\40\x20\40\40\x20\40\x20\x20\x20\x3c\x2f\x68\x74\155\154\x3e";
        die;
    }
    public static function createAuthnRequest($OG, $mP, $AB, $gH, $lD = "\146\x61\x6c\163\145", $mh)
    {
        $FM = "\x3c\77\x78\x6d\154\40\166\145\162\163\151\x6f\x6e\x3d\42\x31\x2e\x30\x22\x20\145\x6e\x63\157\144\x69\x6e\x67\75\x22\125\x54\x46\55\70\x22\77\76" . "\x3c\163\x61\155\x6c\x70\72\101\165\164\150\156\122\x65\x71\x75\x65\x73\x74\40\x78\x6d\x6c\156\x73\72\x73\141\155\154\160\x3d\x22\x75\x72\x6e\72\x6f\141\x73\151\163\72\156\x61\155\145\x73\72\164\x63\x3a\123\101\115\x4c\72\x32\x2e\60\x3a\160\162\157\x74\x6f\x63\x6f\x6c\42\x20\x78\155\154\x6e\163\x3d\42\165\x72\x6e\x3a\x6f\x61\x73\151\163\x3a\x6e\x61\155\145\x73\x3a\x74\143\72\x53\x41\x4d\x4c\x3a\x32\56\60\x3a\x61\163\x73\145\x72\164\x69\x6f\156\x22\x20\111\104\75\42" . self::generateID() . "\x22\40\126\145\x72\x73\x69\x6f\x6e\x3d\42\x32\x2e\x30\42\x20\111\x73\163\165\x65\x49\x6e\x73\x74\x61\x6e\x74\x3d\42" . self::generateTimestamp() . "\42";
        if (!($lD == "\164\x72\165\x65")) {
            goto kk;
        }
        $FM .= "\40\x46\157\x72\143\145\x41\x75\164\x68\156\x3d\42\x74\162\165\x65\x22";
        kk:
        $FM .= "\x20\x50\x72\157\x74\x6f\143\x6f\x6c\102\x69\x6e\x64\151\156\147\75\x22\165\x72\x6e\x3a\157\141\x73\x69\163\x3a\x6e\141\155\145\163\x3a\x74\143\x3a\x53\x41\x4d\114\72\62\x2e\60\x3a\142\151\x6e\x64\x69\x6e\x67\163\72\110\x54\124\120\x2d\120\x4f\x53\x54\x22\40\x41\163\x73\145\162\x74\151\157\156\x43\157\156\163\165\155\145\x72\123\145\162\166\x69\x63\145\125\122\x4c\x3d\x22" . $OG . "\42\x20\x44\x65\163\x74\x69\156\x61\x74\151\157\156\x3d\x22" . $AB . "\x22\76\x3c\163\141\155\x6c\72\x49\x73\x73\x75\x65\x72\40\x78\155\x6c\x6e\x73\72\x73\141\x6d\x6c\75\42\165\x72\156\72\x6f\141\163\x69\x73\72\156\141\x6d\x65\x73\72\x74\143\x3a\x53\101\115\114\x3a\62\56\x30\72\141\163\x73\145\x72\x74\151\157\x6e\x22\76" . $mP . "\x3c\x2f\163\141\x6d\154\x3a\x49\163\163\x75\145\162\x3e\x3c\x73\141\x6d\154\x70\x3a\116\141\x6d\x65\x49\x44\120\x6f\x6c\x69\143\171\x20\101\154\x6c\x6f\167\103\162\x65\141\164\145\x3d\x22\164\x72\165\x65\42\x20\x46\157\162\155\141\x74\75\42" . $gH . "\42\xd\xa\40\40\40\x20\x20\40\40\x20\x20\40\x20\x20\40\x20\40\40\x20\40\40\40\x20\x20\40\x20\x2f\x3e\x3c\x2f\163\141\155\154\x70\x3a\x41\x75\164\x68\156\x52\x65\161\165\x65\x73\x74\76";
        if (!(empty($mh) || $mh == "\110\124\124\x50\55\122\145\144\151\x72\145\143\164")) {
            goto zp;
        }
        $Sl = gzdeflate($FM);
        $GZ = base64_encode($Sl);
        $xP = urlencode($GZ);
        $FM = $xP;
        zp:
        return $FM;
    }
    public static function createSAMLRequest($OG, $mP, $AB, $gH, $lD = "\146\x61\x6c\163\x65")
    {
        $FM = "\x3c\77\170\x6d\154\x20\166\x65\162\x73\x69\157\156\x3d\42\61\56\x30\42\x20\145\x6e\143\x6f\144\151\x6e\147\75\42\125\x54\x46\x2d\x38\42\77\76" . "\74\x73\141\155\x6c\x70\72\x41\x75\x74\x68\x6e\122\145\x71\x75\x65\x73\164\40\x78\155\154\x6e\x73\72\163\x61\x6d\x6c\160\x3d\42\165\x72\156\72\157\141\x73\151\163\72\156\x61\155\x65\x73\x3a\x74\x63\72\x53\x41\115\114\72\x32\56\x30\72\160\x72\157\x74\157\143\x6f\154\42\x20\111\x44\75\x22" . self::generateID() . "\x22\40\x56\x65\x72\x73\x69\157\x6e\75\x22\62\56\60\42\x20\x49\x73\163\x75\x65\x49\156\163\164\141\156\x74\75\42" . self::generateTimestamp() . "\x22";
        if (!($lD == "\164\162\165\x65")) {
            goto Zw;
        }
        $FM .= "\40\x46\157\x72\143\x65\101\x75\x74\150\156\75\x22\164\162\165\145\42";
        Zw:
        $FM .= "\x20\x50\x72\x6f\x74\x6f\143\x6f\154\102\151\x6e\144\151\x6e\147\75\x22\165\x72\x6e\72\x6f\x61\163\151\163\x3a\156\x61\155\x65\x73\72\x74\x63\72\x53\x41\x4d\114\72\x32\x2e\x30\72\x62\x69\x6e\x64\151\x6e\147\163\x3a\110\124\x54\120\x2d\120\117\x53\x54\42\x20\101\163\163\x65\x72\164\151\x6f\156\x43\157\156\x73\165\155\x65\x72\123\145\162\x76\151\143\145\125\x52\x4c\75\42" . $OG . "\42\x20\x44\x65\x73\x74\x69\156\x61\x74\151\157\x6e\75\42" . $AB . "\42\76\x3c\x73\x61\155\154\x3a\111\163\x73\x75\x65\162\40\x78\x6d\x6c\x6e\x73\x3a\x73\x61\155\154\75\42\165\x72\156\x3a\157\141\x73\x69\163\72\x6e\x61\x6d\x65\x73\72\x74\143\72\123\101\115\114\x3a\62\56\x30\x3a\x61\x73\163\145\x72\x74\x69\x6f\x6e\42\x3e" . $mP . "\74\x2f\163\x61\x6d\154\x3a\111\x73\x73\165\x65\x72\x3e\x3c\x73\141\155\x6c\x70\x3a\x4e\x61\155\x65\111\x44\120\x6f\154\151\143\171\x20\101\x6c\154\157\167\103\162\x65\x61\164\145\x3d\x22\x74\x72\165\x65\x22\x20\x46\x6f\162\155\x61\164\x3d\42" . $gH . "\42\xd\xa\40\x20\40\40\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\x20\40\x20\40\x20\x20\40\x20\x20\x2f\76\x3c\x2f\163\141\155\154\x70\72\101\x75\x74\150\x6e\122\145\x71\x75\145\x73\x74\76";
        return $FM;
    }
    public static function mo_saml_logout()
    {
        $mY = variable_get("\x6d\151\x6e\151\x6f\x72\141\x6e\x67\x65\x5f\163\x61\x6d\154\x5f\151\144\160\137\x6c\x6f\x67\157\165\164\x5f\x75\162\x6c", '');
        $hB = variable_get("\x6d\x69\156\x69\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\x6d\154\x5f\x68\164\164\x70\x5f\142\151\156\x64\151\156\x67\x5f\x73\154\x6f", '');
        $dd = variable_get("\x73\145\143\x75\x72\151\164\171\137\x73\x69\147\156\141\164\x75\162\145\137\141\x6c\x67\x6f\162\151\164\x68\x6d");
        if (empty($mY)) {
            goto qy;
        }
        if (!(!session_id() || session_id() == '' || !isset($_SESSION))) {
            goto ci;
        }
        session_start();
        ci:
        if (isset($_SESSION["\155\x6f\x5f\163\x61\155\x6c\x5f\x6c\x6f\147\x6f\165\164\x5f\x72\x65\x71\x75\145\163\164"])) {
            goto bP;
        }
        if (isset($_SESSION["\x6d\157\x5f\x73\141\x6d\x6c"]["\154\157\x67\x67\145\x64\x5f\151\x6e\137\167\151\164\150\x5f\151\144\160"])) {
            goto nl;
        }
        session_destroy();
        if (!(isset($_REQUEST["\122\x65\154\141\171\123\x74\x61\x74\145"]) && !empty($_REQUEST["\122\145\x6c\141\171\x53\164\141\x74\145"]))) {
            goto zT;
        }
        drupal_goto($_REQUEST["\122\x65\154\141\171\123\x74\141\164\145"]);
        die;
        zT:
        goto Rm;
        bP:
        goto Rm;
        nl:
        global $base_url;
        unset($_SESSION["\155\x6f\x5f\x73\141\155\x6c"]);
        $Ti = $_SESSION["\x73\145\163\x73\151\157\156\111\156\x64\x65\x78"];
        $F6 = $_SESSION["\116\141\x6d\145\111\104"];
        $LA = variable_get("\155\x69\x6e\151\157\162\141\x6e\x67\x65\137\x73\x61\155\x6c\137\x65\x6e\141\142\154\145\137\154\157\x67\157\165\164");
        if (!($LA == 1 || $LA == true)) {
            goto W7;
        }
        session_destroy();
        W7:
        if (isset($_SESSION["\154\157\x67\x6f\165\x74"]) && !empty($_SESSION["\154\x6f\147\x6f\x75\164"])) {
            goto rj;
        }
        $EZ = Utilities::miniorange_get_baseURL();
        goto L7;
        rj:
        $EZ = $_SESSION["\x6c\x6f\x67\157\165\164"];
        L7:
        $Xg = Utilities::getIssuer();
        $FF = variable_get("\155\151\x6e\151\157\x72\141\156\147\145\137\163\141\155\154\x5f\162\145\161\x75\x65\163\x74\x5f\x73\151\147\x6e\145\x64");
        $AB = $mY;
        $PL = $EZ;
        $Bp = Utilities::createLogoutRequest($F6, $Ti, $Xg, $AB, $hB);
        $D6 = drupal_get_path("\155\x6f\144\x75\154\x65", "\155\151\x6e\151\157\x72\x61\x6e\147\145\x5f\x73\141\155\x6c");
        if (empty($hB) || $hB == "\110\x74\164\160\x52\145\144\151\162\x65\143\x74") {
            goto p1;
        }
        if ($FF) {
            goto Ig;
        }
        $tM = base64_encode($Bp);
        Utilities::postSAMLRequest($mY, $tM, $PL);
        die;
        Ig:
        $Ys = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $D6 . DIRECTORY_SEPARATOR . "\162\x65\163\157\165\x72\143\145\x73" . DIRECTORY_SEPARATOR . Utilities::getKeyName();
        $ij = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $D6 . DIRECTORY_SEPARATOR . "\162\x65\x73\x6f\165\162\143\145\163" . DIRECTORY_SEPARATOR . self::getCertficateName();
        $tM = Utilities::signXML($Bp, $ij, $Ys, "\x4e\141\155\x65\111\x44", $dd);
        Utilities::postSAMLRequest($mY, $tM, $PL);
        goto gJ;
        p1:
        $c1 = $mY;
        if (strpos($mY, "\77") !== false) {
            goto rE;
        }
        $c1 .= "\77";
        goto B6;
        rE:
        $c1 .= "\x26";
        B6:
        if ($FF) {
            goto Dm;
        }
        $c1 .= "\x53\101\115\x4c\x52\145\161\x75\x65\x73\x74\x3d" . $Bp . "\x26\122\145\x6c\141\x79\123\x74\x61\164\x65\75" . urlencode($PL);
        header("\114\x6f\x63\x61\164\151\157\x6e\x3a\40" . $c1);
        die;
        Dm:
        if ($dd == "\x52\123\101\137\123\x48\x41\x32\65\66") {
            goto j1;
        }
        if ($dd == "\122\123\x41\x5f\123\x48\x41\63\x38\x34") {
            goto xf;
        }
        if ($dd == "\122\123\x41\137\x53\110\x41\65\x31\62") {
            goto rp;
        }
        if ($dd == "\122\x53\101\x5f\x53\110\x41\61") {
            goto FC;
        }
        goto V3;
        j1:
        $Bp = "\123\101\x4d\x4c\122\145\161\165\145\163\164\x3d" . $Bp . "\x26\122\x65\154\x61\x79\x53\164\x61\x74\145\75" . urlencode($PL) . "\x26\123\151\x67\x41\x6c\147\x3d" . urlencode(XMLSecurityKey::RSA_SHA256);
        goto V3;
        xf:
        $Bp = "\x53\101\x4d\x4c\x52\x65\161\165\145\163\x74\x3d" . $Bp . "\x26\x52\x65\154\141\x79\x53\164\x61\x74\145\75" . urlencode($PL) . "\46\123\x69\147\101\x6c\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA384);
        goto V3;
        rp:
        $Bp = "\x53\101\115\x4c\x52\x65\161\x75\x65\x73\164\x3d" . $Bp . "\46\x52\145\x6c\141\171\x53\164\x61\164\145\75" . urlencode($PL) . "\46\x53\151\147\x41\x6c\147\75" . urlencode(XMLSecurityKey::RSA_SHA512);
        goto V3;
        FC:
        $Bp = "\123\x41\115\x4c\x52\x65\161\165\145\163\164\x3d" . $Bp . "\x26\x52\x65\x6c\x61\171\x53\164\141\x74\145\75" . urlencode($PL) . "\x26\123\151\147\101\154\x67\x3d" . urlencode(XMLSecurityKey::RSA_SHA1);
        V3:
        $IF = array("\164\171\x70\x65" => "\x70\x72\151\x76\x61\x74\x65");
        if ($dd == "\122\x53\x41\137\x53\110\101\62\x35\66") {
            goto N2;
        }
        if ($dd == "\x52\123\x41\137\x53\110\x41\63\70\64") {
            goto qt;
        }
        if ($dd == "\x52\x53\101\x5f\123\110\101\x35\x31\x32") {
            goto J8;
        }
        if ($dd == "\122\123\101\137\123\x48\x41\61") {
            goto Ay;
        }
        goto Fw;
        N2:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $IF);
        goto Fw;
        qt:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $IF);
        goto Fw;
        J8:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $IF);
        goto Fw;
        Ay:
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $IF);
        Fw:
        $qK = DRUPAL_ROOT . DIRECTORY_SEPARATOR . $D6 . DIRECTORY_SEPARATOR . "\162\x65\x73\x6f\x75\x72\x63\145\163" . DIRECTORY_SEPARATOR . self::getKeyName();
        $xt->loadKey($qK, FALSE);
        $th = new XMLSecurityDSig();
        $V0 = $xt->signData($Bp);
        $V0 = base64_encode($V0);
        $c1 .= $Bp . "\46\x53\x69\147\x6e\141\x74\x75\x72\145\x3d" . urlencode($V0);
        header("\114\157\143\x61\164\x69\x6f\x6e\72\x20" . $c1);
        die;
        gJ:
        Rm:
        qy:
    }
    public static function createLogoutRequest($F6, $Ti = '', $mP, $AB, $ys = "\x48\164\x74\160\122\x65\x64\x69\x72\x65\143\164")
    {
        $FM = "\x3c\x3f\x78\x6d\154\40\166\x65\x72\163\151\157\156\x3d\x22\x31\56\x30\42\40\x65\x6e\143\157\x64\x69\156\147\x3d\x22\x55\124\106\x2d\70\42\77\x3e" . "\x3c\x73\x61\x6d\154\160\72\114\x6f\147\x6f\x75\x74\122\145\x71\165\145\x73\164\40\x78\x6d\154\156\163\x3a\x73\x61\155\x6c\x70\75\42\x75\162\156\72\157\x61\x73\151\163\72\x6e\141\155\x65\x73\72\164\143\x3a\123\x41\x4d\114\72\62\56\x30\72\160\162\x6f\x74\x6f\x63\x6f\154\x22\40\x78\x6d\x6c\156\x73\x3a\163\141\155\x6c\x3d\42\x75\162\x6e\72\x6f\x61\163\151\163\x3a\156\141\155\x65\163\x3a\x74\143\72\123\101\115\x4c\x3a\62\56\x30\x3a\141\163\x73\145\x72\x74\x69\x6f\x6e\x22\x20\x49\104\x3d\x22" . self::generateID() . "\x22\40\x49\163\163\165\145\x49\156\163\x74\x61\156\x74\x3d\x22" . self::generateTimestamp() . "\42\x20\126\145\x72\x73\x69\x6f\156\75\42\62\x2e\x30\42\x20\x44\x65\163\x74\151\156\141\x74\x69\x6f\156\x3d\x22" . $AB . "\x22\76\15\xa\11\x9\11\11\x9\11\x3c\x73\141\x6d\x6c\72\x49\x73\163\x75\145\x72\x20\x78\x6d\154\156\163\x3a\x73\141\155\x6c\75\x22\165\162\x6e\x3a\x6f\141\x73\x69\163\x3a\x6e\141\155\x65\163\72\x74\x63\x3a\x53\x41\x4d\x4c\x3a\62\56\x30\72\141\x73\163\x65\x72\x74\151\x6f\156\42\76" . $mP . "\x3c\x2f\163\141\155\x6c\x3a\x49\163\x73\165\x65\162\76\xd\xa\11\11\x9\x9\11\11\x3c\163\x61\x6d\154\72\x4e\141\x6d\145\x49\104\40\x78\x6d\x6c\156\163\72\163\141\155\154\75\42\x75\162\x6e\x3a\x6f\x61\163\x69\163\x3a\x6e\x61\x6d\145\x73\x3a\x74\x63\72\x53\101\115\114\x3a\x32\x2e\60\72\x61\163\x73\x65\x72\x74\x69\157\x6e\42\76" . $F6 . "\x3c\x2f\163\141\x6d\154\72\x4e\141\155\x65\x49\104\76";
        if (empty($Ti)) {
            goto no;
        }
        $FM .= "\74\x73\141\x6d\x6c\160\72\123\x65\163\163\151\x6f\x6e\x49\156\144\x65\170\x3e" . $Ti . "\x3c\57\x73\x61\155\x6c\x70\72\x53\145\163\x73\151\157\156\111\x6e\144\x65\x78\76";
        no:
        $FM .= "\74\57\163\141\155\x6c\x70\72\114\157\x67\x6f\x75\x74\122\x65\161\165\145\x73\x74\x3e";
        if (!(empty($ys) || $ys == "\110\x74\x74\x70\122\x65\x64\x69\x72\x65\143\x74")) {
            goto Wl;
        }
        $Sl = gzdeflate($FM);
        $GZ = base64_encode($Sl);
        $xP = urlencode($GZ);
        $FM = $xP;
        Wl:
        return $FM;
    }
    public static function upload_metadata($Ik, $Gj = false)
    {
        if (empty(variable_get("\x6d\151\156\x69\x6f\162\x61\x6e\147\145\x5f\x73\x61\155\x6c\137\x69\x64\160\137\156\141\x6d\145"))) {
            goto mj;
        }
        variable_set("\155\x69\156\x69\x6f\x72\x61\x6e\x67\145\137\x73\x61\155\154\137\x69\x64\x70\137\x6e\141\155\145", "\111\x64\x65\x6e\164\151\x74\171\40\120\x72\x6f\166\x69\144\145\x72");
        mj:
        global $base_url;
        require_once drupal_get_path("\155\x6f\x64\165\x6c\x65", "\x6d\x69\x6e\151\x6f\x72\x61\156\147\x65\137\x73\x61\x6d\154") . DIRECTORY_SEPARATOR . "\151\156\x63\x6c\165\144\x65\163" . DIRECTORY_SEPARATOR . "\115\x65\164\141\144\x61\164\141\x52\x65\x61\144\x65\162\x2e\x70\x68\160";
        $Wt = new DOMDocument();
        $Wt->loadXML($Ik);
        restore_error_handler();
        $hr = $Wt->firstChild;
        if (!empty($hr)) {
            goto aW;
        }
        drupal_set_message(t("\x50\x6c\145\141\x73\x65\x20\160\162\157\166\x69\144\145\40\141\x20\x76\x61\x6c\x69\x64\40\155\145\x74\x61\144\141\164\x61\x20\x66\151\x6c\145\x2e"), "\145\162\x72\x6f\162");
        return;
        goto us;
        aW:
        $Tv = new IDPMetadataReader($Wt);
        $u7 = $Tv->getIdentityProviders();
        if (!empty($u7)) {
            goto qJ;
        }
        drupal_set_message(t("\120\x6c\145\141\163\145\40\x70\x72\x6f\166\151\x64\x65\40\x61\40\x76\141\x6c\x69\144\40\x6d\145\x74\x61\144\x61\x74\x61\x20\146\151\154\x65\x2e"), "\145\162\x72\x6f\x72");
        return;
        qJ:
        foreach ($u7 as $xt => $bS) {
            $zD = $bS->getLoginURL("\110\x54\x54\x50\55\122\145\144\151\162\x65\143\164");
            $mY = $bS->getLogoutURL("\110\124\124\120\55\x52\x65\x64\151\x72\145\143\164");
            if (!empty($zD)) {
                goto wO;
            }
            $zD = $bS->getLoginURL("\110\124\124\120\x2d\120\117\123\x54");
            wO:
            if (!empty($mY)) {
                goto Ut;
            }
            $mY = $bS->getLogoutURL("\110\x54\x54\x50\55\120\x4f\x53\124");
            Ut:
            $cl = $bS->getEntityID();
            $Jl = $bS->getSigningCertificate();
            $To = $base_url;
            if (!($Gj == true)) {
                goto SB;
            }
            variable_set("\x6d\x69\x6e\x69\x6f\162\141\x6e\x67\x65\137\163\x61\155\154\137\151\x64\x70\x5f\x6c\157\x67\151\x6e\x5f\165\162\154", $zD);
            variable_set("\x6d\x69\156\151\x6f\162\x61\156\147\x65\137\x73\x61\x6d\x6c\137\x69\x64\x70\137\154\x6f\x67\157\x75\164\x5f\x75\162\x6c", $mY);
            SB:
            variable_set("\155\x69\156\151\x6f\162\141\x6e\x67\x65\137\163\x61\155\x6c\137\x69\144\x70\137\x69\x73\163\165\145\x72", $cl);
            variable_set("\155\x69\x6e\x69\157\x72\x61\156\x67\145\137\x73\x61\155\x6c\137\x69\144\160\x5f\170\x35\60\x39\x5f\143\145\x72\x74\x69\146\x69\143\x61\x74\x65", $Jl);
            pK:
        }
        f3:
        if (!($Gj == true)) {
            goto dN;
        }
        drupal_set_message(t("\x49\144\x65\x6e\164\151\x74\x79\x20\x50\162\157\x76\151\x64\145\162\40\103\x6f\156\x66\x69\x67\165\x72\141\x74\151\x6f\156\40\x73\165\x63\143\x65\163\x73\146\165\x6c\154\171\x20\x73\x61\x76\145\x64\56"));
        return;
        dN:
        us:
    }
    public static function generateTimestamp($wO = NULL)
    {
        if (!($wO === NULL)) {
            goto yT;
        }
        $wO = time();
        yT:
        return gmdate("\x59\55\155\x2d\144\134\x54\x48\72\151\x3a\x73\x5c\132", $wO);
    }
    public static function xpQuery(DOMNode $sr, $AH)
    {
        static $Lz = NULL;
        if ($sr instanceof DOMDocument) {
            goto F6;
        }
        $lu = $sr->ownerDocument;
        goto hV;
        F6:
        $lu = $sr;
        hV:
        if (!($Lz === NULL || !$Lz->document->isSameNode($lu))) {
            goto z4;
        }
        $Lz = new DOMXPath($lu);
        $Lz->registerNamespace("\163\x6f\141\160\55\145\156\166", "\x68\x74\164\x70\72\x2f\x2f\163\143\150\x65\x6d\141\x73\x2e\170\x6d\154\163\x6f\x61\x70\56\x6f\162\x67\57\163\157\141\160\57\145\x6e\x76\145\x6c\157\x70\x65\57");
        $Lz->registerNamespace("\163\x61\155\x6c\137\x70\162\157\164\157\x63\157\154", "\x75\162\x6e\x3a\x6f\141\163\x69\x73\x3a\156\141\x6d\x65\163\x3a\164\x63\72\123\101\115\114\x3a\62\x2e\x30\x3a\160\x72\x6f\x74\x6f\143\x6f\154");
        $Lz->registerNamespace("\x73\141\155\154\137\141\x73\x73\x65\162\x74\151\x6f\x6e", "\x75\x72\x6e\72\x6f\x61\x73\151\x73\72\156\x61\x6d\x65\x73\72\164\143\72\x53\101\x4d\x4c\x3a\62\56\x30\x3a\x61\x73\163\145\162\x74\151\x6f\156");
        $Lz->registerNamespace("\x73\x61\x6d\x6c\137\155\x65\164\x61\144\x61\164\x61", "\165\x72\156\x3a\157\x61\163\151\x73\72\156\x61\x6d\x65\163\x3a\x74\x63\72\x53\101\x4d\x4c\72\x32\56\x30\x3a\155\145\x74\141\x64\141\x74\141");
        $Lz->registerNamespace("\x64\x73", "\150\x74\x74\160\72\x2f\57\x77\167\167\x2e\x77\63\x2e\157\x72\147\57\62\60\x30\60\57\60\x39\x2f\170\155\154\144\163\151\x67\x23");
        $Lz->registerNamespace("\x78\x65\156\143", "\150\164\x74\160\x3a\57\x2f\167\x77\x77\x2e\x77\x33\x2e\x6f\x72\147\57\62\x30\60\61\57\x30\64\x2f\170\x6d\154\145\156\143\x23");
        z4:
        $lV = $Lz->query($AH, $sr);
        $x7 = array();
        $m3 = 0;
        mb:
        if (!($m3 < $lV->length)) {
            goto td;
        }
        $x7[$m3] = $lV->item($m3);
        bG:
        $m3++;
        goto mb;
        td:
        return $x7;
    }
    public static function parseNameId(DOMElement $DP)
    {
        $x7 = array("\126\x61\x6c\x75\x65" => trim($DP->textContent));
        foreach (array("\116\x61\155\x65\x51\165\x61\154\x69\146\151\145\x72", "\x53\120\x4e\141\155\145\x51\x75\141\x6c\151\146\151\x65\162", "\x46\157\x72\x6d\x61\x74") as $ml) {
            if (!$DP->hasAttribute($ml)) {
                goto uJ;
            }
            $x7[$ml] = $DP->getAttribute($ml);
            uJ:
            O3:
        }
        wz:
        return $x7;
    }
    public static function xsDateTimeToTimestamp($y8)
    {
        $Ye = array();
        $F9 = "\x2f\x5e\50\134\x64\134\144\x5c\144\x5c\144\51\x2d\50\x5c\x64\x5c\144\51\55\50\x5c\144\134\x64\x29\x54\50\134\144\x5c\x64\x29\x3a\x28\134\x64\x5c\144\51\x3a\x28\134\x64\x5c\x64\51\50\x3f\x3a\x5c\x2e\134\x64\x2b\x29\77\132\x24\57\x44";
        if (!(preg_match($F9, $y8, $Ye) == 0)) {
            goto Th;
        }
        echo sprintf("\x6e\x76\x61\154\151\x64\40\x53\101\115\x4c\62\40\164\151\x6d\145\163\164\141\155\160\x20\160\141\163\x73\145\144\40\x74\x6f\40\170\163\x44\x61\x74\145\124\151\x6d\145\x54\157\124\x69\x6d\x65\163\x74\141\155\x70\x3a\40" . $y8);
        die;
        Th:
        $qS = intval($Ye[1]);
        $RZ = intval($Ye[2]);
        $Vu = intval($Ye[3]);
        $vK = intval($Ye[4]);
        $Mk = intval($Ye[5]);
        $g1 = intval($Ye[6]);
        $wG = gmmktime($vK, $Mk, $g1, $RZ, $Vu, $qS);
        return $wG;
    }
    public static function extractStrings(DOMElement $Iz, $o9, $No)
    {
        $x7 = array();
        $sr = $Iz->firstChild;
        j_:
        if (!($sr !== NULL)) {
            goto xD;
        }
        if (!($sr->namespaceURI !== $o9 || $sr->localName !== $No)) {
            goto oh;
        }
        goto Kh;
        oh:
        $x7[] = trim($sr->textContent);
        Kh:
        $sr = $sr->nextSibling;
        goto j_;
        xD:
        return $x7;
    }
    public static function validateElement(DOMElement $Eb)
    {
        $Zf = new XMLSecurityDSig();
        $Zf->idKeys[] = "\111\104";
        $on = self::xpQuery($Eb, "\x2e\57\x64\x73\x3a\x53\x69\x67\x6e\x61\x74\x75\x72\145");
        if (count($on) === 0) {
            goto iv;
        }
        if (count($on) > 1) {
            goto Gk;
        }
        goto WG;
        iv:
        return FALSE;
        goto WG;
        Gk:
        echo sprintf("\130\115\x4c\123\145\143\x3a\x20\x6d\157\x72\x65\x20\x74\x68\141\x6e\40\x6f\156\145\x20\x73\x69\147\156\x61\164\165\162\x65\40\145\154\145\x6d\x65\156\x74\40\x69\156\40\x72\157\157\164\x2e");
        die;
        WG:
        $on = $on[0];
        $Zf->sigNode = $on;
        $Zf->canonicalizeSignedInfo();
        if ($Zf->validateReference()) {
            goto KI;
        }
        echo sprintf("\130\115\x4c\163\x65\143\x3a\x20\x64\151\x67\x65\x73\164\40\x76\x61\x6c\x69\x64\141\x74\x69\157\x6e\40\x66\x61\151\154\x65\x64");
        die;
        KI:
        $MT = FALSE;
        foreach ($Zf->getValidatedNodes() as $Z8) {
            if ($Z8->isSameNode($Eb)) {
                goto Yq;
            }
            if ($Eb->parentNode instanceof DOMDocument && $Z8->isSameNode($Eb->ownerDocument)) {
                goto fz;
            }
            goto Wk;
            Yq:
            $MT = TRUE;
            goto sT;
            goto Wk;
            fz:
            $MT = TRUE;
            goto sT;
            Wk:
            eD:
        }
        sT:
        if ($MT) {
            goto zy;
        }
        echo sprintf("\x58\115\x4c\x53\x65\143\x3a\x20\x54\x68\x65\40\162\157\x6f\164\40\x65\x6c\x65\155\x65\156\x74\40\151\163\x20\156\x6f\164\40\163\x69\x67\x6e\x65\x64\x2e");
        die;
        zy:
        $mA = array();
        foreach (self::xpQuery($on, "\x2e\57\x64\163\x3a\x4b\145\x79\111\x6e\x66\157\57\x64\163\x3a\130\65\60\x39\x44\x61\164\141\x2f\144\x73\x3a\130\65\x30\71\x43\x65\x72\x74\151\x66\151\x63\141\x74\x65") as $EI) {
            $T9 = trim($EI->textContent);
            $T9 = str_replace(array("\xd", "\xa", "\11", "\x20"), '', $T9);
            $mA[] = $T9;
            Mt:
        }
        J_:
        $x7 = array("\123\x69\x67\x6e\x61\x74\165\x72\145" => $Zf, "\x43\145\x72\164\151\x66\x69\143\x61\x74\x65\x73" => $mA);
        return $x7;
    }
    public static function validateSignature(array $tH, XMLSecurityKey $xt)
    {
        $Zf = $tH["\123\x69\x67\156\141\x74\x75\x72\x65"];
        $GQ = self::xpQuery($Zf->sigNode, "\56\57\144\163\x3a\x53\x69\147\x6e\x65\144\111\156\x66\x6f\x2f\x64\163\x3a\123\x69\147\156\x61\x74\x75\162\x65\x4d\145\164\x68\157\x64");
        if (!empty($GQ)) {
            goto ib;
        }
        echo sprintf("\x4d\151\x73\163\x69\156\x67\40\123\x69\147\156\x61\164\x75\x72\145\x4d\x65\164\x68\157\x64\x20\145\x6c\145\155\x65\156\x74");
        die;
        ib:
        $GQ = $GQ[0];
        if ($GQ->hasAttribute("\101\154\147\157\162\x69\x74\150\155")) {
            goto WQ;
        }
        echo sprintf("\x4d\x69\x73\x73\151\x6e\x67\x20\101\x6c\147\x6f\162\151\164\150\x6d\55\141\164\164\x72\151\x62\165\x74\145\x20\x6f\156\x20\123\151\x67\156\141\164\165\x72\x65\x4d\145\x74\x68\157\144\x20\x65\154\145\x6d\x65\x6e\164\56");
        die;
        WQ:
        $YM = $GQ->getAttribute("\101\x6c\x67\157\162\x69\164\150\x6d");
        if (!($xt->type === XMLSecurityKey::RSA_SHA1 && $YM !== $xt->type)) {
            goto t5;
        }
        $xt = self::castKey($xt, $YM);
        t5:
        if ($Zf->verify($xt)) {
            goto QV;
        }
        echo sprintf("\125\156\141\x62\154\145\40\164\157\x20\166\141\154\x69\144\x61\x74\x65\x20\123\x67\x6e\x61\x74\165\162\x65");
        die;
        QV:
    }
    public static function castKey(XMLSecurityKey $xt, $qO, $wP = "\x70\x75\x62\154\151\143")
    {
        if (!($xt->type === $qO)) {
            goto q8;
        }
        return $xt;
        q8:
        $Zj = openssl_pkey_get_details($xt->key);
        if (!($Zj === FALSE)) {
            goto vG;
        }
        echo sprintf("\x55\x6e\x61\x62\x6c\145\x20\x74\x6f\x20\x67\145\x74\x20\153\145\x79\40\x64\145\x74\x61\x69\154\x73\x20\146\x72\x6f\x6d\40\x58\x4d\x4c\x53\145\143\165\x72\151\164\171\113\x65\171\56");
        die;
        vG:
        if (isset($Zj["\153\x65\171"])) {
            goto hy;
        }
        echo sprintf("\x4d\x69\x73\x73\x69\x6e\x67\x20\153\x65\171\x20\x69\156\40\160\x75\142\154\x69\x63\x20\153\145\x79\40\144\x65\x74\141\151\154\163\56");
        die;
        hy:
        $Tr = new XMLSecurityKey($qO, array("\x74\171\160\145" => $wP));
        $Tr->loadKey($Zj["\x6b\x65\x79"]);
        return $Tr;
    }
    public static function processResponse($fE, $pQ, $cx, SAML2_Response $b9, $B8)
    {
        $cj = $b9->getDestination();
        if (!($cj !== NULL && $cj !== $fE)) {
            goto G9;
        }
        echo sprintf("\104\x65\x73\x74\x69\156\141\164\151\x6f\x6e\40\151\x6e\x20\162\x65\163\x70\157\156\x73\x65\40\144\157\145\x73\156\47\x74\40\155\141\x74\x63\150\x20\164\x68\145\x20\143\x75\x72\x72\145\x6e\164\x20\x55\x52\x4c\56\x20\104\145\163\x74\151\156\141\164\x69\157\x6e\40\151\163\x20\42" . $cj . "\42\54\x20\143\165\162\162\145\x6e\164\x20\x55\x52\114\40\151\163\x20\x22" . $fE . "\42\x2e");
        die;
        G9:
        $co = self::checkSign($pQ, $cx, $B8);
        return $co;
    }
    public static function checkSign($pQ, $cx, $B8)
    {
        $mA = $cx["\103\x65\x72\x74\151\x66\151\x63\x61\164\145\x73"];
        if (!(count($mA) === 0)) {
            goto fP;
        }
        return FALSE;
        fP:
        $U4 = self::findCertificate($pQ, $mA, $B8);
        $ZV = NULL;
        $xt = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\171\160\x65" => "\x70\x75\x62\154\x69\x63"));
        $xt->loadKey($U4);
        try {
            self::validateSignature($cx, $xt);
            return TRUE;
        } catch (Exception $Ms) {
            $ZV = $Ms;
        }
        if ($ZV !== NULL) {
            goto sL;
        }
        return FALSE;
        goto qS;
        sL:
        throw $ZV;
        qS:
    }
    private static function findCertificate(array $WN, array $mA, $B8)
    {
        $kZ = $mA[0];
        $kZ = chunk_split($kZ, 80);
        foreach ($mA as $fg) {
            $nM = strtolower(sha1(base64_decode($fg)));
            if (!in_array($nM, $WN, TRUE)) {
                goto Fv;
            }
            $wY = "\55\55\55\x2d\x2d\x42\105\x47\111\116\x20\x43\105\x52\124\x49\106\x49\103\101\x54\105\x2d\x2d\x2d\55\55\12" . chunk_split($fg, 64) . "\x2d\55\x2d\55\55\x45\116\104\x20\x43\x45\x52\x54\x49\106\x49\103\x41\x54\105\x2d\55\55\x2d\55\xa";
            return $wY;
            Fv:
            uT:
        }
        Cc:
        if ($B8 == "\164\x65\163\x74\x56\141\x6c\151\x64\141\164\145") {
            goto W_;
        }
        echo "\x20\74\x64\151\166\40\163\x74\171\154\145\75\x22\143\x6f\x6c\x6f\x72\72\x20\x23\x61\71\64\x34\64\62\73\146\157\156\x74\55\x73\x69\172\145\x3a\x31\64\160\164\73\40\x6d\x61\x72\x67\x69\x6e\x2d\x62\x6f\164\x74\157\x6d\x3a\x32\60\160\170\x3b\42\76\x3c\160\76\x3c\x73\x74\162\x6f\x6e\147\x3e\x45\x72\x72\x6f\162\72\40\74\57\x73\164\162\x6f\x6e\x67\x3e\127\145\x20\143\157\165\154\x64\40\156\x6f\164\x20\163\151\x67\156\40\x79\157\165\40\x69\156\x2e\x20\x50\154\x65\141\163\x65\x20\143\157\x6e\164\141\x63\x74\40\x79\157\165\162\40\x41\144\155\151\x6e\151\163\164\162\141\164\157\x72\x2e\74\57\160\76\x3c\x2f\144\151\166\76";
        die;
        goto It;
        W_:
        echo "\74\x64\151\x76\40\163\x74\x79\x6c\145\x3d\42\x66\x6f\156\x74\x2d\x66\x61\155\151\154\x79\72\x43\x61\x6c\x69\x62\162\x69\x3b\x70\141\x64\x64\151\156\147\x3a\60\40\x33\x25\x3b\42\76";
        echo "\74\144\x69\166\x20\163\164\171\x6c\x65\75\x22\143\x6f\x6c\157\x72\x3a\40\x23\x61\71\x34\64\64\62\73\142\x61\x63\153\x67\x72\157\165\156\144\x2d\x63\x6f\154\157\162\72\x20\x23\146\62\x64\145\x64\145\x3b\x70\141\x64\x64\x69\156\x67\x3a\x20\x31\65\x70\x78\73\x6d\x61\x72\147\151\156\x2d\142\x6f\x74\164\157\x6d\72\x20\x32\x30\x70\x78\73\164\x65\170\164\x2d\141\x6c\151\147\156\x3a\143\145\156\164\145\162\73\x62\157\162\x64\x65\162\x3a\x31\x70\170\x20\x73\157\x6c\x69\x64\x20\43\105\66\x42\63\102\x32\x3b\x66\157\156\x74\55\x73\x69\172\x65\x3a\x31\x38\x70\164\x3b\42\76\x20\105\122\122\x4f\122\x3c\57\x64\151\166\x3e\xd\12\40\40\40\x20\40\40\x20\40\40\x20\x20\x20\74\144\151\166\x20\163\164\x79\154\x65\75\42\x63\157\x6c\x6f\162\x3a\40\43\x61\71\x34\64\64\62\73\146\157\x6e\164\55\x73\x69\172\x65\x3a\x31\x34\160\x74\x3b\40\x6d\141\x72\x67\x69\x6e\x2d\142\x6f\x74\164\157\x6d\72\x32\60\160\x78\73\42\x3e\x3c\160\76\x3c\x73\164\162\x6f\x6e\x67\x3e\x45\162\x72\157\162\72\x20\74\57\163\x74\162\157\156\x67\x3e\x55\x6e\x61\x62\154\x65\40\164\157\40\x66\x69\x6e\144\40\141\40\x63\x65\162\x74\x69\x66\x69\143\141\x74\145\40\x6d\141\164\143\150\x69\156\147\x20\164\150\x65\40\143\157\156\146\151\147\165\162\145\144\x20\x66\x69\x6e\x67\145\x72\x70\x72\x69\156\164\x2e\74\x2f\160\76\xd\12\x20\x20\40\x20\40\40\40\x20\x20\x20\40\40\x3c\x70\x3e\x3c\163\164\162\x6f\x6e\x67\x3e\x50\157\163\x73\x69\142\x6c\145\x20\103\141\165\163\x65\x3a\x20\x3c\x2f\x73\164\162\x6f\156\x67\x3e\x43\x6f\156\x74\x65\156\164\40\157\146\40\47\x58\56\65\60\x39\40\x43\x65\x72\x74\151\x66\151\x63\x61\x74\145\47\x20\x66\151\145\154\x64\x20\151\x6e\x20\x53\x65\x72\166\151\x63\x65\40\120\162\x6f\166\151\144\145\162\x20\x53\x65\164\x74\151\156\x67\x73\x20\151\163\40\151\x6e\143\157\162\162\x65\x63\x74\74\x2f\x70\x3e\15\xa\11\11\x9\74\x70\x3e\74\x62\76\105\170\x70\145\143\x74\145\x64\40\x76\x61\154\165\145\x3a\x20\x3c\x2f\x62\76" . $kZ . "\74\x2f\160\x3e";
        echo str_repeat("\46\x6e\x62\163\x70\73", 15);
        echo "\x3c\x2f\x64\x69\x76\x3e\xd\12\40\x20\x20\x20\40\x20\40\40\x20\40\40\40\x20\x20\40\x20\74\144\x69\166\40\x73\x74\171\x6c\145\75\42\x6d\141\x72\x67\x69\x6e\x3a\x33\x25\73\x64\x69\163\160\154\141\171\72\142\x6c\x6f\143\153\x3b\x74\145\x78\164\55\141\154\x69\147\x6e\72\143\x65\x6e\164\x65\x72\x3b\42\76\15\12\x20\40\x20\40\40\40\40\40\40\40\40\40\x20\40\40\40\x3c\x66\157\162\155\x20\x61\143\164\x69\157\x6e\75\42\151\156\x64\x65\x78\x2e\x70\150\160\x22\76\15\12\40\40\40\40\40\40\x20\40\x20\40\x20\x20\40\40\40\x20\74\144\x69\166\x20\163\164\171\x6c\x65\75\x22\x6d\x61\x72\147\151\156\72\63\45\x3b\144\x69\x73\160\154\141\x79\72\142\x6c\157\x63\x6b\x3b\x74\145\x78\164\x2d\141\x6c\x69\x67\x6e\72\x63\x65\156\164\145\x72\x3b\x22\76\74\151\156\160\165\x74\40\163\x74\171\154\x65\x3d\x22\x70\141\x64\x64\x69\156\147\x3a\61\45\x3b\x77\x69\144\x74\x68\72\61\x30\60\160\x78\x3b\x62\x61\x63\x6b\147\162\x6f\165\156\x64\72\x20\x23\x30\x30\x39\61\x43\x44\x20\x6e\x6f\x6e\145\40\162\145\160\x65\x61\164\x20\163\x63\162\157\154\154\40\60\45\x20\x30\x25\73\143\x75\x72\163\x6f\x72\72\40\160\157\151\156\164\145\162\x3b\x66\x6f\x6e\x74\x2d\x73\151\172\145\x3a\61\x35\x70\170\73\x62\157\162\144\x65\162\55\167\x69\x64\x74\x68\x3a\40\x31\x70\x78\x3b\142\157\x72\144\145\162\x2d\x73\164\171\x6c\x65\x3a\40\163\x6f\154\151\144\x3b\142\157\x72\x64\x65\x72\55\x72\141\x64\x69\165\x73\72\x20\x33\x70\x78\73\167\x68\x69\x74\x65\x2d\x73\x70\141\143\x65\72\x20\156\157\x77\162\141\x70\x3b\x62\x6f\170\55\163\151\172\151\156\147\x3a\40\x62\x6f\x72\144\145\x72\x2d\142\157\x78\x3b\x62\157\x72\x64\145\162\x2d\x63\x6f\154\157\x72\x3a\x20\x23\60\x30\x37\63\x41\101\x3b\142\x6f\170\55\163\150\141\144\x6f\167\72\40\60\160\170\40\61\x70\170\40\x30\x70\x78\40\x72\147\142\141\50\x31\62\x30\54\40\x32\x30\60\x2c\x20\x32\63\x30\54\x20\x30\56\66\51\40\151\x6e\x73\145\164\73\x63\x6f\x6c\x6f\162\x3a\40\x23\x46\x46\x46\x3b\42\164\171\x70\x65\x3d\42\x62\x75\164\x74\x6f\156\x22\40\166\x61\x6c\x75\x65\75\x22\104\157\x6e\145\x22\x20\157\x6e\103\154\x69\x63\153\75\x22\163\145\x6c\146\x2e\143\x6c\x6f\163\145\50\x29\x3b\x22\76\x3c\57\x64\x69\x76\x3e";
        die;
        It:
    }
    public static function validateIssuerAndAudience($u4, $TA, $Fq, $base_url, $B8)
    {
        $mP = current($u4->getAssertions())->getIssuer();
        $D3 = current(current($u4->getAssertions())->getValidAudiences());
        if (strcmp($Fq, $mP) === 0) {
            goto ap;
        }
        if ($B8 == "\164\145\163\164\126\x61\154\151\144\141\164\x65") {
            goto VK;
        }
        echo "\40\74\x64\151\x76\40\163\x74\x79\154\145\75\42\x63\157\154\157\x72\x3a\x20\x23\141\x39\64\64\x34\x32\x3b\146\x6f\x6e\164\x2d\x73\151\172\x65\72\x31\64\160\x74\73\x20\155\141\x72\147\x69\x6e\x2d\x62\157\x74\x74\x6f\x6d\72\x32\x30\x70\x78\x3b\x22\76\x3c\x70\x3e\74\163\164\x72\157\156\x67\76\105\162\x72\157\162\x3a\x20\74\x2f\x73\164\162\x6f\x6e\x67\76\x57\x65\x20\143\157\165\x6c\144\40\x6e\x6f\x74\40\163\151\147\x6e\x20\x79\157\165\x20\151\156\x2e\40\x50\x6c\145\x61\163\145\40\143\157\156\164\141\143\x74\x20\x79\x6f\165\162\40\101\x64\155\151\156\x69\163\164\x72\x61\x74\157\162\x2e\x3c\x2f\160\76\74\x2f\x64\151\x76\76\15\12\x20\40\x20\x20\40\40\40\x20\40\40\40\40\x20\40\x20\x20\40\40\74\144\151\x76\x20\163\x74\x79\154\145\75\x22\x6d\141\x72\147\151\x6e\x3a\63\45\73\144\151\x73\160\x6c\141\x79\x3a\x62\154\157\143\153\73\164\145\170\164\55\141\x6c\x69\147\156\x3a\x63\145\156\x74\x65\x72\x3b\42\76";
        die;
        goto xw;
        VK:
        ob_end_clean();
        echo "\74\x64\x69\x76\x20\163\x74\x79\x6c\145\75\42\146\157\156\164\55\146\141\x6d\x69\x6c\x79\72\103\x61\154\x69\142\x72\151\x3b\160\141\144\144\x69\156\x67\x3a\60\40\x33\45\73\x22\76";
        echo "\74\144\151\x76\x20\x73\x74\171\x6c\145\x3d\42\143\x6f\x6c\157\x72\x3a\x20\43\x61\71\x34\64\x34\62\x3b\x62\141\143\x6b\x67\x72\x6f\165\156\144\x2d\x63\x6f\x6c\157\162\x3a\40\43\x66\x32\x64\145\144\145\73\160\x61\144\x64\151\156\x67\72\x20\61\65\x70\170\73\155\x61\x72\147\x69\156\55\142\x6f\x74\164\x6f\x6d\x3a\40\x32\60\x70\170\x3b\x74\145\170\x74\x2d\x61\154\x69\x67\x6e\72\x63\145\156\x74\x65\x72\73\142\157\162\144\145\x72\x3a\x31\160\170\x20\x73\157\x6c\151\144\40\x23\105\x36\102\63\102\62\73\146\157\x6e\164\x2d\x73\151\x7a\145\72\x31\x38\160\164\x3b\42\x3e\40\105\122\x52\117\x52\x3c\57\x64\x69\166\x3e\xd\12\x20\40\40\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\40\40\x3c\144\151\166\x20\x73\x74\171\154\x65\75\x22\143\x6f\154\157\162\x3a\40\43\x61\71\x34\64\64\x32\x3b\146\157\156\x74\x2d\x73\x69\172\145\x3a\61\64\x70\164\73\40\x6d\141\x72\x67\x69\x6e\55\x62\x6f\164\x74\157\x6d\x3a\x32\x30\x70\170\73\42\76\74\160\x3e\74\163\x74\162\x6f\156\147\76\105\162\162\x6f\x72\72\x20\74\57\x73\x74\162\157\x6e\x67\x3e\x49\163\163\165\145\162\x20\143\x61\x6e\156\157\x74\x20\142\145\x20\x76\x65\x72\151\x66\x69\x65\144\x2e\74\57\160\x3e\15\xa\x20\40\40\x20\x20\40\40\x20\x20\x20\40\x20\40\40\x20\x20\74\x70\x3e\120\154\x65\141\x73\145\x20\143\157\156\x74\141\x63\x74\x20\x79\x6f\x75\162\x20\x61\144\x6d\x69\156\151\x73\164\162\x61\164\x6f\162\40\x61\156\x64\x20\x72\x65\160\x6f\162\164\x20\x74\x68\145\40\146\x6f\x6c\154\x6f\167\x69\156\x67\x20\x65\x72\x72\157\x72\x3a\x3c\x2f\x70\76\15\12\40\40\x20\40\40\40\40\40\x20\40\x20\40\40\x20\40\x20\x3c\x70\76\74\163\x74\162\157\x6e\x67\x3e\x50\x6f\x73\163\x69\142\154\x65\x20\x43\141\165\163\145\72\40\74\57\x73\x74\162\157\156\x67\76\124\x68\x65\40\166\141\x6c\165\145\x20\x69\156\40\x27\111\144\120\40\x45\156\164\151\164\x79\x20\x49\x44\40\x6f\x72\x20\111\163\x73\165\x65\x72\47\x20\146\x69\145\154\x64\40\151\156\40\x53\145\162\166\151\x63\x65\x20\x50\162\157\166\x69\144\145\x72\x20\x53\145\x74\x74\151\x6e\x67\163\x20\x69\163\x20\151\156\143\157\x72\x72\x65\x63\x74\74\57\160\x3e\15\xa\40\x20\x20\40\x20\x20\x20\40\40\40\40\x20\x20\40\40\x20\74\x70\76\x3c\163\164\x72\157\x6e\x67\76\x45\x78\160\145\x63\164\145\144\40\x45\156\x74\151\164\171\x20\x49\104\72\40\x3c\57\163\164\162\157\156\x67\x3e" . $mP . "\74\x70\x3e\xd\12\x20\40\x20\40\40\40\x20\x20\x20\x20\x20\x20\40\x20\x20\40\74\160\76\74\x73\164\x72\157\156\147\x3e\105\x6e\164\x69\164\x79\x20\111\x44\40\106\157\x75\x6e\144\x3a\x20\74\x2f\163\x74\162\157\x6e\147\76" . $Fq . "\x3c\x2f\160\76\15\12\40\x20\40\40\40\40\x20\x20\40\x20\x20\x20\x20\x20\40\40\74\57\x64\x69\x76\x3e\15\xa\x20\x20\x20\40\x20\x20\40\x20\x20\x20\x20\40\x20\x20\x20\40\74\144\151\166\x20\163\164\x79\x6c\x65\x3d\x22\x6d\141\x72\x67\x69\156\x3a\x33\45\73\x64\151\x73\x70\x6c\x61\171\x3a\x62\x6c\157\x63\153\x3b\x74\x65\170\x74\x2d\141\x6c\x69\x67\x6e\x3a\x63\x65\156\x74\145\x72\73\42\x3e\xd\12\40\40\x20\40\40\x20\x20\40\40\40\x20\x20\x20\x20\40\x20\x3c\144\x69\166\40\163\164\x79\154\145\75\42\155\x61\x72\x67\151\156\x3a\x33\45\73\144\151\x73\160\154\141\171\72\x62\154\x6f\x63\153\x3b\x74\145\x78\x74\x2d\x61\154\x69\x67\156\x3a\x63\145\x6e\x74\x65\162\73\42\x3e\74\151\156\x70\165\x74\40\163\x74\171\x6c\x65\75\42\x70\x61\144\x64\x69\156\147\72\x31\x25\x3b\167\151\144\x74\150\72\61\60\60\x70\170\73\142\141\x63\x6b\147\x72\x6f\165\156\144\x3a\x20\x23\60\x30\71\61\x43\x44\40\x6e\157\156\145\40\x72\x65\x70\145\141\x74\x20\x73\x63\162\157\x6c\x6c\40\60\x25\40\x30\x25\73\x63\165\162\x73\x6f\162\x3a\x20\x70\x6f\x69\x6e\x74\x65\162\x3b\146\157\x6e\x74\x2d\163\x69\172\145\x3a\x31\x35\160\170\x3b\142\x6f\162\x64\145\162\x2d\x77\x69\144\x74\150\72\x20\x31\x70\x78\x3b\x62\x6f\162\144\x65\x72\x2d\163\x74\171\154\145\72\x20\163\x6f\154\x69\x64\73\x62\157\x72\x64\145\x72\55\162\x61\144\151\165\163\72\40\x33\x70\170\73\x77\150\151\164\145\x2d\x73\x70\x61\143\145\72\40\x6e\x6f\167\x72\141\x70\73\x62\x6f\170\55\x73\x69\172\151\x6e\147\72\40\x62\x6f\162\144\145\162\x2d\142\157\170\73\142\x6f\x72\x64\x65\x72\x2d\x63\x6f\x6c\157\162\72\40\x23\60\60\67\63\x41\101\x3b\x62\x6f\170\55\163\150\141\x64\157\x77\x3a\x20\x30\x70\170\40\61\160\170\40\60\160\170\x20\x72\x67\x62\141\x28\61\x32\60\x2c\40\x32\60\60\x2c\x20\62\x33\x30\x2c\x20\x30\56\x36\51\40\x69\x6e\163\145\164\x3b\x63\157\x6c\x6f\162\72\x20\x23\x46\x46\106\x3b\42\x74\171\160\x65\75\x22\142\165\164\x74\157\x6e\x22\x20\166\x61\x6c\165\145\75\42\104\157\156\x65\x22\40\157\156\103\154\151\143\x6b\75\42\x73\145\154\146\x2e\143\154\157\163\x65\x28\51\73\42\x3e\x3c\57\144\x69\166\76";
        die;
        xw:
        goto QZ;
        ap:
        if (strcmp($D3, $TA) === 0) {
            goto Zi;
        }
        echo sprintf("\x49\x6e\x76\141\x6c\x69\144\x20\141\165\144\x69\x65\156\x63\145");
        die;
        goto fV;
        Zi:
        return TRUE;
        fV:
        QZ:
    }
    private static function doDecryptElement(DOMElement $py, XMLSecurityKey $Gi, array &$eG)
    {
        $Et = new XMLSecEnc();
        $Et->setNode($py);
        $Et->type = $py->getAttribute("\x54\171\160\x65");
        $e1 = $Et->locateKey($py);
        if ($e1) {
            goto QY;
        }
        echo sprintf("\x43\x6f\x75\154\144\40\156\157\x74\40\154\157\x63\141\164\145\x20\153\145\x79\x20\x61\x6c\147\x6f\x72\x69\164\150\155\40\x69\x6e\x20\145\156\x63\162\171\x70\x74\x65\x64\x20\x64\x61\164\141\56");
        die;
        QY:
        $Yx = $Et->locateKeyInfo($e1);
        if ($Yx) {
            goto nC;
        }
        echo sprintf("\103\x6f\x75\154\x64\40\156\x6f\x74\x20\154\157\x63\141\164\145\x20\x3c\x64\x73\151\147\72\x4b\145\x79\x49\156\146\157\76\40\x66\157\x72\40\164\150\145\x20\145\x6e\x63\162\171\x70\x74\x65\x64\40\153\x65\171\x2e");
        die;
        nC:
        $MD = $Gi->getAlgorithm();
        if ($Yx->isEncrypted) {
            goto yg;
        }
        $fF = $e1->getAlgorithm();
        if (!($MD !== $fF)) {
            goto Rl;
        }
        echo sprintf("\101\154\147\157\162\151\164\150\x6d\40\155\x69\163\155\x61\x74\143\150\40\x62\145\164\167\x65\x65\156\40\x69\x6e\x70\x75\164\40\153\x65\x79\40\141\x6e\144\40\x6b\145\x79\x20\151\x6e\40\155\145\163\163\x61\x67\145\x2e\x20" . "\x4b\145\171\40\167\141\163\x3a\40" . var_export($MD, TRUE) . "\x3b\40\x6d\x65\163\163\x61\147\145\x20\x77\141\163\72\x20" . var_export($fF, TRUE));
        die;
        Rl:
        $e1 = $Gi;
        goto Pz;
        yg:
        $a9 = $Yx->getAlgorithm();
        if (!in_array($a9, $eG, TRUE)) {
            goto qL;
        }
        echo sprintf("\x41\x6c\147\157\x72\x69\164\150\x6d\40\x64\151\x73\141\x62\154\145\x64\72\x20" . var_export($a9, TRUE));
        die;
        qL:
        if (!($a9 === XMLSecurityKey::RSA_OAEP_MGF1P && $MD === XMLSecurityKey::RSA_1_5)) {
            goto Oa;
        }
        $MD = XMLSecurityKey::RSA_OAEP_MGF1P;
        Oa:
        if (!($MD !== $a9)) {
            goto Rh;
        }
        echo sprintf("\101\x6c\x67\157\162\151\164\150\155\x20\155\x69\x73\155\141\164\143\x68\x20\142\x65\164\x77\x65\x65\156\x20\x69\156\160\165\164\x20\153\145\x79\x20\141\x6e\x64\40\153\x65\x79\x20\x75\x73\x65\x64\x20\x74\x6f\x20\145\156\143\162\x79\160\164\40" . "\x20\164\x68\x65\x20\163\171\155\x6d\x65\164\162\x69\143\x20\x6b\x65\171\x20\x66\157\x72\40\x74\150\x65\x20\x6d\x65\163\x73\141\147\x65\x2e\x20\113\145\x79\40\x77\x61\163\72\40" . var_export($MD, TRUE) . "\x3b\x20\155\x65\163\x73\x61\x67\x65\40\167\x61\163\x3a\40" . var_export($a9, TRUE));
        die;
        Rh:
        $MM = $Yx->encryptedCtx;
        $Yx->key = $Gi->key;
        $eA = $e1->getSymmetricKeySize();
        if (!($eA === NULL)) {
            goto nd;
        }
        echo sprintf("\x55\156\153\x6e\x6f\x77\x6e\x20\x6b\145\171\40\x73\x69\x7a\145\40\146\157\x72\40\145\156\x63\x72\171\160\164\151\x6f\x6e\x20\x61\x6c\x67\x6f\162\x69\164\150\x6d\72\x20" . var_export($e1->type, TRUE));
        die;
        nd:
        try {
            $xt = $MM->decryptKey($Yx);
            if (!(strlen($xt) != $eA)) {
                goto DA;
            }
            echo sprintf("\125\156\145\170\160\145\143\x74\x65\x64\40\x6b\145\171\x20\x73\151\x7a\145\40\50" . strlen($xt) * 8 . "\142\x69\x74\x73\51\40\x66\157\162\x20\145\156\x63\162\171\160\164\151\157\156\40\x61\x6c\x67\x6f\x72\x69\164\150\x6d\x3a\x20" . var_export($e1->type, TRUE));
            die;
            DA:
        } catch (Exception $Ms) {
            $n7 = $MM->getCipherValue();
            $AR = openssl_pkey_get_details($Yx->key);
            $AR = sha1(serialize($AR), TRUE);
            $xt = sha1($n7 . $AR, TRUE);
            if (strlen($xt) > $eA) {
                goto uM;
            }
            if (strlen($xt) < $eA) {
                goto tk;
            }
            goto xQ;
            uM:
            $xt = substr($xt, 0, $eA);
            goto xQ;
            tk:
            $xt = str_pad($xt, $eA);
            xQ:
        }
        $e1->loadkey($xt);
        Pz:
        $qO = $e1->getAlgorithm();
        if (!in_array($qO, $eG, TRUE)) {
            goto l8;
        }
        echo sprintf("\101\154\147\x6f\x72\151\164\150\x6d\40\x64\151\x73\x61\x62\x6c\x65\x64\72\x20" . var_export($qO, TRUE));
        die;
        l8:
        $AA = $Et->decryptNode($e1, FALSE);
        $DP = "\x3c\x72\x6f\x6f\x74\40\x78\x6d\154\156\163\x3a\x73\x61\x6d\x6c\75\x22\x75\162\x6e\72\157\x61\163\151\163\72\156\x61\x6d\145\163\x3a\164\x63\x3a\x53\101\x4d\x4c\x3a\62\56\x30\72\x61\x73\163\145\x72\x74\x69\x6f\156\x22\x20" . "\x78\x6d\154\156\163\x3a\x78\x73\151\75\x22\x68\x74\164\160\72\x2f\57\x77\167\x77\x2e\167\x33\x2e\157\162\x67\57\62\60\x30\61\x2f\130\x4d\114\x53\143\x68\145\x6d\141\55\x69\156\163\164\x61\156\143\145\42\x3e" . $AA . "\74\x2f\162\157\157\164\76";
        $lx = new DOMDocument();
        if (@$lx->loadXML($DP)) {
            goto uH;
        }
        throw new Exception("\106\x61\x69\154\x65\144\x20\164\x6f\40\160\141\162\x73\x65\40\x64\x65\x63\162\171\x70\x74\x65\144\x20\130\x4d\114\x2e\40\115\141\171\x62\x65\40\x74\150\145\x20\x77\162\157\x6e\147\40\163\150\x61\x72\145\x64\153\145\171\40\x77\141\x73\x20\165\163\x65\x64\77");
        uH:
        $BC = $lx->firstChild->firstChild;
        if (!($BC === NULL)) {
            goto of;
        }
        echo sprintf("\x4d\151\x73\x73\x69\156\147\40\x65\156\x63\162\171\160\164\145\x64\40\145\154\145\155\145\x6e\x74\56");
        throw new Exception("\115\151\163\x73\x69\156\147\40\145\x6e\143\162\x79\160\x74\145\x64\40\145\x6c\x65\155\x65\156\164\56");
        of:
        if ($BC instanceof DOMElement) {
            goto gu;
        }
        echo sprintf("\104\x65\143\162\x79\x70\164\145\x64\40\145\154\145\x6d\145\156\164\40\167\141\x73\40\156\x6f\164\40\141\143\x74\165\x61\x6c\154\171\x20\141\40\104\117\x4d\x45\x6c\x65\x6d\145\x6e\x74\x2e");
        gu:
        return $BC;
    }
    public static function decryptElement(DOMElement $py, XMLSecurityKey $Gi, array $eG = array(), XMLSecurityKey $bE = NULL)
    {
        try {
            return self::doDecryptElement($py, $Gi, $eG);
        } catch (Exception $Ms) {
            try {
                return self::doDecryptElement($py, $bE, $eG);
            } catch (Exception $m1) {
            }
            die;
        }
    }
    public static function metadata_builder($L3)
    {
        $DP = new DOMDocument();
        $Va = plugins_url() . "\57\x6d\x69\156\x69\x6f\162\x61\x6e\147\145\55\x73\x61\155\x6c\x2d\62\x30\55\163\151\156\x67\x6c\145\x2d\x73\151\147\x6e\55\157\156\57\x73\x70\x2d\155\x65\x74\141\x64\141\164\141\x2e\170\155\x6c";
        $DP->load($Va);
        $Ty = new DOMXPath($DP);
        $vM = $Ty->query("\x2f\x2f\155\144\72\105\156\x74\151\x74\171\104\x65\x73\x63\162\x69\160\164\157\x72\133\100\x65\x6e\164\151\x74\x79\111\x44\75\42\x68\x74\164\160\72\57\57\x7b\160\141\164\x68\55\x74\157\55\171\x6f\165\x72\55\163\x69\164\x65\x7d\x2f\167\160\x2d\x63\157\156\x74\145\x6e\x74\x2f\x70\154\165\147\151\x6e\163\57\155\151\x6e\x69\x6f\162\141\156\147\x65\x2d\163\141\x6d\154\55\x32\x30\55\163\151\x6e\x67\154\145\55\x73\x69\147\x6e\x2d\157\156\57\42\135");
        if (!($vM->length >= 1)) {
            goto lP;
        }
        $Ve = $vM->item(0);
        $Ve->setAttribute("\x65\156\x74\x69\x74\x79\111\104", $L3 . "\x2f\x77\x70\x2d\x63\157\x6e\x74\145\x6e\x74\57\x70\154\x75\x67\x69\156\163\x2f\x6d\151\x6e\x69\x6f\x72\x61\x6e\x67\x65\x2d\163\141\155\154\55\x32\60\55\163\x69\x6e\x67\x6c\145\55\x73\151\147\x6e\55\x6f\156\57");
        lP:
        $vM = $Ty->query("\57\57\x6d\144\72\x41\x73\163\x65\162\164\x69\157\156\x43\157\x6e\163\x75\x6d\145\162\x53\145\162\x76\x69\143\x65\x5b\x40\114\157\143\141\164\151\157\x6e\x3d\x22\x68\x74\164\x70\x3a\57\x2f\x7b\160\x61\x74\150\55\x74\x6f\x2d\x79\157\165\162\55\163\151\164\145\175\42\x5d");
        if (!($vM->length >= 1)) {
            goto fL;
        }
        $Ve = $vM->item(0);
        $Ve->setAttribute("\114\x6f\x63\x61\164\x69\x6f\156", $L3 . "\57");
        fL:
        $DP->save(plugins_url() . "\x2f\155\x69\x6e\x69\x6f\162\141\x6e\x67\x65\55\163\141\155\154\55\x32\x30\x2d\x73\x69\156\147\154\145\x2d\163\x69\x67\156\x2d\x6f\x6e\57\163\160\x2d\x6d\145\164\141\x64\141\x74\x61\x2e\x78\155\x6c");
    }
    public static function get_mapped_groups($Lx, $Cr)
    {
        $VH = array();
        if (empty($Cr)) {
            goto jK;
        }
        $uw = array();
        $m3 = 1;
        D5:
        if (!($m3 < 10)) {
            goto v_;
        }
        $a7 = $Lx->get("\x67\162\157\x75\x70" . $m3 . "\x5f\x6d\x61\160");
        $uw[$m3] = explode("\73", $a7);
        $m3++;
        goto D5;
        v_:
        jK:
        foreach ($Cr as $A0) {
            if (empty($A0)) {
                goto Uz;
            }
            $m3 = 0;
            $Ad = false;
            cv:
            if (!($m3 < 9 && !$Ad)) {
                goto FN1;
            }
            if (!(!empty($uw[$m3]) && in_array($A0, $uw[$m3]))) {
                goto xy;
            }
            $VH[] = $Lx->get("\x67\162\157\165\x70" . $m3);
            $Ad = true;
            xy:
            $m3++;
            goto cv;
            FN1:
            Uz:
            XX:
        }
        OH:
        return array_unique($VH);
    }
    public static function getEncryptionAlgorithm($Ee)
    {
        switch ($Ee) {
            case "\150\164\x74\160\x3a\x2f\x2f\x77\167\167\x2e\x77\x33\x2e\157\x72\147\x2f\62\x30\x30\x31\57\x30\64\x2f\170\x6d\x6c\145\156\x63\43\x74\162\151\160\x6c\145\x64\145\163\55\x63\x62\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto m9;
            case "\x68\164\164\160\72\x2f\57\x77\167\x77\56\167\x33\x2e\157\x72\147\x2f\62\60\60\61\x2f\60\x34\x2f\x78\155\x6c\145\x6e\143\43\x61\x65\x73\x31\x32\x38\x2d\143\x62\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\x68\x74\x74\x70\x3a\57\x2f\167\167\x77\56\167\x33\x2e\x6f\162\147\57\x32\60\x30\x31\x2f\60\64\57\x78\x6d\154\x65\x6e\x63\x23\x61\145\163\x31\x39\62\55\143\x62\x63":
                return XMLSecurityKey::AES192_CBC;
                goto m9;
            case "\x68\x74\x74\160\72\57\x2f\167\x77\x77\x2e\167\63\56\x6f\x72\147\57\62\x30\60\x31\57\60\x34\57\170\x6d\154\145\156\x63\x23\x61\x65\163\62\x35\x36\55\143\142\x63":
                return XMLSecurityKey::AES256_CBC;
                goto m9;
            case "\150\164\164\x70\72\57\57\x77\167\x77\x2e\x77\63\56\x6f\x72\x67\x2f\62\60\60\x31\57\x30\x34\57\170\155\x6c\145\156\x63\43\162\163\141\55\x31\x5f\x35":
                return XMLSecurityKey::RSA_1_5;
                goto m9;
            case "\x68\x74\164\x70\72\57\x2f\x77\x77\167\x2e\167\x33\x2e\157\x72\147\57\x32\x30\x30\61\57\60\64\57\170\x6d\154\x65\156\143\43\x72\163\141\x2d\157\x61\145\160\x2d\x6d\147\146\61\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto m9;
            case "\150\164\x74\160\x3a\x2f\x2f\167\167\x77\56\167\x33\56\157\x72\x67\x2f\x32\x30\60\60\x2f\60\x39\x2f\x78\x6d\x6c\x64\x73\x69\147\x23\x64\x73\x61\x2d\163\150\141\61":
                return XMLSecurityKey::DSA_SHA1;
                goto m9;
            case "\150\164\x74\160\72\x2f\57\167\167\x77\x2e\x77\63\56\x6f\x72\147\57\x32\60\60\60\x2f\60\71\x2f\x78\x6d\x6c\x64\163\x69\147\x23\x72\x73\x61\x2d\163\150\141\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto m9;
            case "\150\x74\164\160\72\x2f\x2f\167\167\x77\56\167\x33\56\x6f\162\x67\x2f\62\60\x30\61\57\x30\64\57\170\155\154\144\x73\151\x67\55\x6d\157\x72\145\x23\x72\x73\141\x2d\163\x68\141\62\x35\66":
                return XMLSecurityKey::RSA_SHA256;
                goto m9;
            case "\150\x74\164\160\72\57\57\167\x77\x77\x2e\167\63\x2e\157\162\147\x2f\62\60\x30\x31\x2f\x30\64\x2f\x78\155\154\x64\163\151\x67\x2d\x6d\157\x72\145\43\x72\163\141\55\163\150\141\x33\x38\64":
                return XMLSecurityKey::RSA_SHA384;
                goto m9;
            case "\150\x74\x74\x70\72\57\57\x77\167\x77\x2e\167\63\56\x6f\x72\x67\57\62\60\60\x31\57\60\64\57\170\155\154\x64\x73\x69\147\x2d\x6d\x6f\x72\145\43\x72\x73\x61\55\x73\150\x61\x35\x31\x32":
                return XMLSecurityKey::RSA_SHA512;
                goto m9;
            default:
                echo sprintf("\x49\x6e\x76\141\154\151\144\x20\x45\156\x63\x72\x79\x70\164\x69\157\156\x20\115\x65\164\x68\157\x64\x3a\40" . $Ee);
                die;
                goto m9;
        }
        oi:
        m9:
    }
    public static function sanitize_certificate($i8)
    {
        $i8 = preg_replace("\x2f\133\xd\12\135\x2b\57", '', $i8);
        $i8 = str_replace("\55", '', $i8);
        $i8 = str_replace("\102\x45\x47\111\x4e\x20\x43\x45\122\x54\x49\106\111\103\101\x54\x45", '', $i8);
        $i8 = str_replace("\x45\x4e\x44\40\x43\x45\122\124\111\x46\111\103\x41\x54\105", '', $i8);
        $i8 = str_replace("\40", '', $i8);
        $i8 = chunk_split($i8, 64, "\xd\12");
        $i8 = "\55\x2d\x2d\x2d\55\102\105\107\x49\116\40\103\105\x52\124\111\x46\x49\103\101\124\x45\x2d\x2d\x2d\55\x2d\xd\12" . $i8 . "\55\55\x2d\x2d\x2d\x45\x4e\x44\40\103\x45\122\x54\x49\106\x49\x43\x41\124\x45\x2d\x2d\x2d\x2d\x2d";
        return $i8;
    }
    public static function sanitize_private_key($bM)
    {
        $bM = preg_replace("\57\133\15\12\135\53\57", '', $bM);
        $bM = str_replace("\x2d", '', $bM);
        $bM = str_replace("\102\x45\x47\x49\116\x20\120\x52\111\126\x41\124\105\x20\x4b\x45\x59", '', $bM);
        $bM = str_replace("\105\116\x44\40\x50\122\x49\126\x41\124\x45\40\113\105\131", '', $bM);
        $bM = str_replace("\x20", '', $bM);
        $bM = chunk_split($bM, 64, "\15\12");
        $bM = "\x2d\x2d\55\x2d\55\102\x45\x47\x49\116\40\120\122\x49\x56\101\124\105\40\x4b\x45\131\x2d\x2d\x2d\x2d\x2d\15\12" . $bM . "\x2d\55\55\x2d\55\x45\116\104\x20\x50\x52\x49\126\101\124\105\x20\x4b\x45\x59\55\x2d\x2d\55\55";
        return $bM;
    }
    public static function desanitize_certificate($i8)
    {
        $i8 = preg_replace("\57\x5b\15\12\x5d\53\57", '', $i8);
        $i8 = str_replace("\55\55\x2d\55\x2d\102\x45\x47\111\116\40\103\105\122\x54\111\106\x49\x43\101\x54\105\55\x2d\55\x2d\x2d", '', $i8);
        $i8 = str_replace("\x2d\55\55\55\x2d\x45\116\x44\40\103\105\122\124\x49\x46\x49\103\x41\x54\105\x2d\55\55\55\55", '', $i8);
        $i8 = str_replace("\x20", '', $i8);
        return $i8;
    }
    public static function Print_SAML_Request($Lo, $wP)
    {
        header("\103\157\x6e\x74\145\156\164\x2d\x54\x79\x70\x65\x3a\40\164\145\x78\164\57\x68\x74\x6d\x6c");
        $lu = new DOMDocument();
        $lu->preserveWhiteSpace = false;
        $lu->formatOutput = true;
        $lu->loadXML($Lo);
        if ($wP == "\x64\x69\x73\x70\x6c\x61\x79\x53\101\115\114\x52\x65\161\x75\x65\163\x74") {
            goto BR;
        }
        $wt = "\x53\101\x4d\x4c\x20\122\x65\163\x70\x6f\x6e\163\145";
        goto nP;
        BR:
        $wt = "\123\101\115\114\x20\122\145\161\x75\145\x73\164";
        nP:
        $C2 = $lu->saveXML();
        $gY = htmlentities($C2);
        $gY = rtrim($gY);
        $DP = simplexml_load_string($C2);
        $Va = drupal_get_path("\155\x6f\144\x75\154\x65", "\x6d\x69\156\151\x6f\x72\141\156\x67\145\x5f\x73\x61\155\x6c") . "\x2f\143\163\163\57\x73\x74\171\154\x65\137\x73\145\x74\164\151\156\x67\x73\56\143\163\x73";
        echo "\x3c\154\151\156\x6b\40\162\145\x6c\75\x27\x73\x74\171\x6c\x65\163\150\145\x65\164\x27\40\x69\144\75\47\155\157\x5f\163\141\x6d\154\x5f\x61\x64\155\151\x6e\x5f\x73\145\164\164\x69\x6e\147\x73\x5f\163\x74\x79\x6c\145\x2d\x63\x73\163\x27\40\x20\150\162\145\x66\x3d\x27" . $Va . "\x27\40\164\x79\160\145\x3d\x27\x74\x65\x78\164\x2f\143\x73\x73\x27\40\x6d\x65\x64\x69\141\75\x27\141\x6c\154\47\40\57\76\15\12\x20\x20\40\x20\x20\40\x20\x20\40\x20\40\x20\xd\xa\x9\x9\x9\x3c\144\151\166\x20\x63\x6c\x61\x73\x73\x3d\42\x6d\x6f\55\x64\151\163\x70\154\141\x79\55\x6c\157\147\x73\42\40\x3e\74\160\x20\x74\171\160\x65\x3d\x22\164\145\170\x74\x22\x20\40\40\151\144\75\x22\x53\101\x4d\114\x5f\164\x79\x70\x65\x22\x3e" . $wt . "\x3c\57\x70\x3e\74\57\x64\x69\166\76\xd\xa\11\11\x9\15\xa\x9\11\11\x3c\x64\x69\166\x20\164\171\160\x65\x3d\x22\164\145\x78\164\42\40\x69\144\75\x22\x53\101\115\x4c\x5f\x64\x69\163\x70\x6c\141\171\x22\40\x63\154\x61\x73\x73\75\42\x6d\157\55\x64\x69\163\160\154\x61\171\55\142\154\x6f\x63\153\x22\76\74\x70\x72\x65\x20\x63\154\x61\x73\x73\75\47\142\x72\165\x73\x68\x3a\x20\x78\155\154\x3b\47\76" . $gY . "\74\x2f\160\162\145\x3e\74\x2f\x64\x69\166\76\xd\12\11\11\11\x3c\142\x72\76\15\12\x9\x9\x9\74\144\151\x76\x20\x73\x74\171\154\x65\75\42\x6d\x61\162\x67\x69\156\x3a\x33\x25\x3b\144\x69\x73\160\154\x61\x79\x3a\x62\154\x6f\x63\x6b\x3b\164\x65\170\x74\x2d\x61\x6c\151\x67\x6e\x3a\x63\145\x6e\x74\145\x72\x3b\42\76\xd\xa\40\40\40\x20\x20\x20\x20\40\x20\40\40\x20\15\xa\11\x9\11\x3c\144\x69\166\x20\x73\x74\x79\x6c\145\x3d\42\155\141\162\x67\x69\156\x3a\x33\x25\x3b\x64\x69\x73\x70\x6c\141\171\x3a\142\154\157\143\153\x3b\x74\145\170\x74\55\141\x6c\151\147\156\x3a\x63\x65\x6e\x74\145\162\73\x22\40\76\xd\xa\11\15\12\40\40\x20\x20\40\40\x20\40\40\x20\x20\40\x3c\57\x64\x69\166\76\xd\12\11\11\11\74\142\165\164\x74\x6f\156\40\x69\144\x3d\x22\x63\157\x70\x79\x22\x20\157\156\143\x6c\151\x63\x6b\x3d\x22\143\x6f\x70\171\104\x69\x76\x54\x6f\x43\154\151\160\142\x6f\x61\162\144\x28\x29\42\40\40\x73\x74\x79\x6c\145\x3d\42\x70\x61\144\x64\151\x6e\147\72\x31\45\73\x77\x69\x64\x74\150\x3a\x31\60\60\160\170\x3b\142\141\x63\x6b\147\x72\157\165\x6e\144\72\x20\x23\x30\x30\x39\x31\103\104\40\156\x6f\x6e\x65\x20\162\x65\x70\145\x61\164\x20\x73\143\x72\157\x6c\x6c\40\60\x25\40\60\x25\73\x63\x75\162\163\x6f\x72\72\x20\x70\157\151\156\x74\x65\x72\73\x66\x6f\156\164\55\163\151\172\145\72\x31\x35\160\x78\73\x62\x6f\162\144\x65\x72\55\167\151\x64\x74\150\72\x20\x31\x70\x78\73\142\x6f\162\x64\145\162\55\163\x74\x79\x6c\145\x3a\40\x73\157\154\x69\144\x3b\x62\157\162\x64\x65\162\x2d\162\x61\144\151\165\163\x3a\x20\63\160\x78\x3b\x77\x68\x69\164\145\55\x73\160\x61\x63\x65\72\40\156\157\167\162\x61\160\x3b\x62\157\170\x2d\x73\x69\x7a\x69\x6e\147\72\x20\x62\157\162\144\x65\x72\55\142\157\x78\73\x62\157\162\x64\145\x72\55\x63\157\154\157\x72\72\40\x23\x30\60\x37\63\x41\x41\x3b\142\157\x78\x2d\163\x68\141\x64\157\167\x3a\x20\x30\x70\170\x20\61\x70\x78\x20\x30\x70\170\x20\162\x67\x62\x61\x28\x31\x32\60\x2c\40\x32\x30\60\x2c\40\62\x33\60\x2c\40\x30\56\x36\51\x20\151\156\163\x65\164\x3b\143\x6f\x6c\x6f\162\x3a\x20\x23\x46\106\x46\x3b\42\x20\76\103\x6f\160\171\74\x2f\142\x75\164\164\x6f\x6e\x3e\xd\12\11\x9\11\46\156\142\163\x70\x3b\xd\xa\40\40\x20\40\x20\40\x20\x20\x20\x20\40\x20\40\x20\x20\x3c\151\x6e\x70\165\164\40\151\x64\x3d\42\x64\167\156\x2d\142\164\x6e\42\x20\163\x74\171\x6c\145\75\x22\160\141\144\144\151\x6e\x67\72\x31\x25\73\x77\151\144\164\150\72\x31\x30\60\x70\170\x3b\x62\x61\x63\x6b\147\x72\157\165\x6e\x64\x3a\40\43\60\60\x39\61\103\104\40\x6e\157\156\x65\40\162\145\x70\145\141\164\40\163\143\x72\157\154\154\40\x30\45\40\60\45\x3b\x63\x75\x72\x73\x6f\x72\x3a\x20\x70\157\x69\156\164\145\162\x3b\146\x6f\156\164\x2d\163\151\172\x65\72\x31\x35\x70\x78\73\x62\157\x72\x64\145\162\55\x77\151\x64\x74\x68\72\x20\x31\160\x78\x3b\142\157\x72\x64\145\162\x2d\163\x74\x79\154\x65\72\x20\163\157\x6c\x69\x64\x3b\142\157\x72\144\x65\x72\55\x72\141\x64\x69\165\x73\x3a\40\63\x70\x78\x3b\x77\150\151\164\145\x2d\163\160\x61\x63\145\72\40\x6e\157\x77\162\x61\x70\x3b\142\157\170\x2d\x73\151\x7a\151\x6e\147\72\x20\142\157\162\144\x65\x72\x2d\142\x6f\170\x3b\x62\157\x72\x64\145\x72\55\x63\x6f\154\157\162\72\40\43\x30\60\x37\63\101\101\x3b\x62\x6f\170\55\163\x68\x61\144\157\167\72\40\x30\x70\170\40\61\160\x78\40\x30\x70\170\40\x72\x67\x62\141\x28\x31\62\x30\54\40\x32\60\x30\x2c\40\62\63\60\x2c\x20\x30\56\x36\x29\40\151\x6e\x73\x65\x74\73\x63\x6f\154\x6f\162\72\x20\43\106\x46\106\73\x22\164\x79\x70\145\x3d\x22\142\165\x74\x74\157\156\42\40\166\141\x6c\165\145\75\42\x44\x6f\167\x6e\x6c\x6f\x61\x64\x22\40\xd\xa\40\40\40\40\40\x20\x20\40\40\x20\x20\x20\x20\40\x20\42\76\xd\12\x9\11\11\x3c\x2f\144\151\x76\x3e\15\xa\x9\11\11\74\x2f\144\151\x76\x3e\xd\xa\x9\x9\x9\xd\12\x9\11";
        ob_end_flush();
        ?>

        <script>

            function copyDivToClipboard() {
                var aux = document.createElement("input");
                aux.setAttribute("value", document.getElementById("SAML_display").textContent);
                document.body.appendChild(aux);
                aux.select();
                document.execCommand("copy");
                document.body.removeChild(aux);
                document.getElementById('copy').textContent = "Copied";
                document.getElementById('copy').style.background = "grey";
                window.getSelection().selectAllChildren(document.getElementById("SAML_display"));
            }

            function download(filename, text) {
                var element = document.createElement('a');
                element.setAttribute('href', 'data:Application/octet-stream;charset=utf-8,' + encodeURIComponent(text));
                element.setAttribute('download', filename);

                element.style.display = 'none';
                document.body.appendChild(element);

                element.click();

                document.body.removeChild(element);
            }

            document.getElementById("dwn-btn").addEventListener("click", function () {

                var filename = document.getElementById("SAML_type").textContent + ".xml";
                var node = document.getElementById("SAML_display");
                htmlContent = node.innerHTML;
                text = node.textContent;
                console.log(text);
                download(filename, text);
            }, false);

        </script>
        <?php 
        die;
    }
}
?>
