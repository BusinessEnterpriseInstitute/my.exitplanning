<?php
/**
 * @file
 * Installation file for miniOrange Oauth Client Module.
 */

include 'miniorange_oauth_client_feedback.php';

/**
 * Implements hook_install().
 */
function miniorange_oauth_client_install() {
  variable_set('miniorange_oauth_client_free_users', '0');
  user_save(user_load(1), array('data' => array('overlay' => 0)));
}

/**
 * Implementing hook_schema
 **/

function miniorange_oauth_client_schema() {
    $schema['miniornage_oauth_client_customer'] = array(
        'description' => t('OAuth Client'),
        'fields' => array (
            'id' => array(
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => t('S.No.: '),
            ),
            'cd_plugin' => array(
              'type' => 'varchar',
              'length' => 256,
              'not null' => TRUE,
              'description' => t('cd_plugin.'),
            ),
            'dno_ssos' => array(
              'type' => 'int',
              'not null' => TRUE,
              'description' => t('dno_ssos'),
            ),
            'tno_ssos' => array(
              'type' => 'int',
              'not null' => TRUE,
              'description' => t('tno_ssos'),
            ),
            'previous_update' => array(
              'type' => 'varchar',
              'length' => 256,
              'not null' => TRUE,
              'description' => t('previous_update'),
            ),
        ),
        'primary key' => array('id'),
    );
    return $schema;
}

/**
 * Implements hook_uninstall().
 */
 function miniorange_oauth_client_uninstall() {
      db_drop_table('miniornage_oauth_client_customer');
      variable_del('miniorange_oauth_client_status');
      variable_del('miniorange_oauth_client_customer_admin_email');
      variable_del('miniorange_oauth_client_customer_admin_phone');
      variable_del('miniorange_oauth_client_customer_api_key');
      variable_del('miniorange_oauth_client_tx_id');
      variable_del('miniorange_oauth_client_customer_admin_token');
      variable_del('miniorange_oauth_client_customer_id');
      variable_del('miniorange_oauth_client_customer_admin_password');
      variable_del('miniorange_oauth_client_app');
      variable_del('site_mail');
      variable_del('miniorange_oauth_client_license_key');
      variable_del('miniorange_oauth_client_appval');
      variable_del('miniorange_auth_client_client_id');
      variable_del('miniorange_auth_client_app_name');
      variable_del('miniorange_auth_client_display_name');
      variable_del('miniorange_auth_client_client_secret');
      variable_del('miniorange_auth_client_scope');
      variable_del('miniorange_auth_client_authorize_endpoint');
      variable_del('miniorange_auth_client_access_token_ep');
      variable_del('miniorange_auth_client_user_info_ep');
      variable_del('miniorange_auth_client_callback_uri');
      variable_del('miniorange_oauth_client_email_attr_val');
      variable_del('miniorange_oauth_client_name_attr_val');
      variable_del('miniorange_oauth_default_role');
      variable_del('miniorange_oauth_client_free_users');
      variable_del('mo_saml_tourTaken_configure_oauth');
      variable_del('mo_saml_tourTaken_attr_mapping');
      variable_del('mo_saml_tourTaken_licensing');
      variable_del('mo_saml_tourTaken_miniorange_oauth_client');
      variable_del('miniorange_oauth_client_attr_list_from_server');
      variable_del('miniorange_oauth_send_with_header_oauth');
      variable_del('miniorange_oauth_send_with_body_oauth');
      variable_del('miniorange_oauth_enable_login_with_oauth');
      variable_del('miniorange_oauth_client_base_url');
 }

 /**
 * Implements hook_disable().
 */
 function miniorange_oauth_client_disable()
 {
		miniorange_oauth_client_feedback();
 }
 ?>
