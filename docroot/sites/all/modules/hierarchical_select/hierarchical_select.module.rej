***************
*** 1662,1668 ****
    // Build the lineage.
    //
  
-   $start_lineage = microtime();
  
    // If save_linage is enabled, reconstruct the lineage. This is necessary
    // because e.g. the taxonomy module stores the terms by order of weight and
--- 1662,1668 ----
    // Build the lineage.
    //
  
+   $start_lineage = microtime(TRUE);
  
    // If save_linage is enabled, reconstruct the lineage. This is necessary
    // because e.g. the taxonomy module stores the terms by order of weight and
***************
*** 1745,1758 ****
      $hierarchy->lineage = _hierarchical_select_hierarchy_enforce_deepest($hierarchy->lineage, $config['module'], $config['params']);
    }
  
-   $end_lineage = microtime();
  
  
    //
    // Build the levels.
    //
  
-   $start_levels = microtime();
  
    // Start building the levels, initialize with the root level.
    $hierarchy->levels[0] = module_invoke($config['module'], 'hierarchical_select_root_level', $config['params']);
--- 1745,1758 ----
      $hierarchy->lineage = _hierarchical_select_hierarchy_enforce_deepest($hierarchy->lineage, $config['module'], $config['params']);
    }
  
+   $end_lineage = microtime(TRUE);
  
  
    //
    // Build the levels.
    //
  
+   $start_levels = microtime(TRUE);
  
    // Start building the levels, initialize with the root level.
    $hierarchy->levels[0] = module_invoke($config['module'], 'hierarchical_select_root_level', $config['params']);
***************
*** 1935,1946 ****
    }
  
    // Calculate the time it took to generate the levels.
-   $end_levels = microtime();
  
    // Add child information.
-   $start_childinfo = microtime();
    $hierarchy = _hierarchical_select_hierarchy_add_childinfo($hierarchy, $config);
-   $end_childinfo = microtime();
  
    // Calculate the time it took to build the hierarchy object.
    $hierarchy->build_time['total'] = ($end_childinfo - $start_lineage) * 1000;
--- 1935,1946 ----
    }
  
    // Calculate the time it took to generate the levels.
+   $end_levels = microtime(TRUE);
  
    // Add child information.
+   $start_childinfo = microtime(TRUE);
    $hierarchy = _hierarchical_select_hierarchy_add_childinfo($hierarchy, $config);
+   $end_childinfo = microtime(TRUE);
  
    // Calculate the time it took to build the hierarchy object.
    $hierarchy->build_time['total'] = ($end_childinfo - $start_lineage) * 1000;
***************
*** 2138,2144 ****
   */
  function _hierarchical_select_dropbox_generate($config, $selection) {
    $dropbox = new stdClass();
-   $start = microtime();
  
    $dropbox->title = (!empty($config['dropbox']['title'])) ? filter_xss_admin($config['dropbox']['title']) : t('All selections');
    $dropbox->lineages = array();
--- 2138,2144 ----
   */
  function _hierarchical_select_dropbox_generate($config, $selection) {
    $dropbox = new stdClass();
+   $start = microtime(TRUE);
  
    $dropbox->title = (!empty($config['dropbox']['title'])) ? filter_xss_admin($config['dropbox']['title']) : t('All selections');
    $dropbox->lineages = array();
***************
*** 2198,2204 ****
    }
  
    // Calculate the time it took to build the dropbox object.
-   $dropbox->build_time = (microtime() - $start) * 1000;
  
    return $dropbox;
  }
--- 2198,2204 ----
    }
  
    // Calculate the time it took to build the dropbox object.
+   $dropbox->build_time = (microtime(TRUE) - $start) * 1000;
  
    return $dropbox;
  }
