<?php


include_once "\x4c\157\147\157\165\164\122\x65\x71\165\145\163\164\x2e\160\150\160";
class Utilities
{
    public static function generateCertificate($yB, $zA, $mJ, $bD)
    {
        $zB = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\x72\145\163\157\x75\x72\x63\145\163" . DIRECTORY_SEPARATOR . "\157\160\145\156\163\x73\154\56\143\x6e\146";
        $uw = array("\143\157\x6e\146\x69\147" => $zB, "\x64\151\147\x65\x73\x74\x5f\x61\x6c\x67" => "{$zA}", "\x70\x72\151\166\x61\164\x65\137\x6b\x65\x79\137\142\x69\164\163" => $mJ, "\x70\162\x69\166\141\x74\145\137\153\145\x79\x5f\x74\171\x70\x65" => OPENSSL_KEYTYPE_RSA);
        $Dr = openssl_pkey_new($uw);
        $RF = openssl_csr_new($yB, $Dr, $uw);
        $nz = openssl_csr_sign($RF, null, $Dr, $bD, $uw, time());
        openssl_x509_export($nz, $Pa);
        openssl_pkey_export($Dr, $uB, null, $uw);
        openssl_csr_export($RF, $wD);
        hi:
        if (!(($jC = openssl_error_string()) !== false)) {
            goto Bg;
        }
        error_log($jC);
        goto hi;
        Bg:
        $ce = array("\x70\x75\x62\154\151\x63\x5f\153\x65\x79" => $Pa, "\x70\162\151\166\141\x74\145\x5f\x6b\x65\171" => $uB);
        $It = drupal_get_path("\155\157\144\x75\x6c\145", "\155\151\156\x69\157\162\x61\156\x67\x65\x5f\x73\141\x6d\x6c\x5f\151\144\x70") . "\57\162\x65\163\x6f\165\162\143\x65\x73\57\103\x75\x73\x74\x6f\155\x5f\x50\165\142\x6c\151\143\137\103\145\162\164\x69\146\151\143\141\x74\145\x2e\143\162\x74";
        file_put_contents($It, $ce["\x70\x75\x62\x6c\x69\x63\137\153\145\x79"]);
        $eP = drupal_get_path("\x6d\x6f\x64\165\x6c\x65", "\x6d\x69\x6e\x69\x6f\162\x61\x6e\147\x65\x5f\x73\141\x6d\154\x5f\151\x64\160") . "\x2f\162\145\163\x6f\165\x72\x63\145\163\x2f\x43\165\163\164\x6f\x6d\137\120\162\x69\x76\x61\164\x65\x5f\x43\145\x72\x74\x69\x66\x69\x63\x61\164\x65\56\153\x65\171";
        file_put_contents($eP, $ce["\x70\x72\151\166\x61\x74\x65\137\x6b\x65\x79"]);
        variable_set("\x6d\151\x6e\151\157\x72\x61\156\x67\x65\137\163\x61\x6d\154\137\x69\x64\160\137\160\165\142\x6c\x5f\x63\145\162\x74\151\146\x69\143\141\x74\145", $ce["\160\x75\x62\x6c\x69\143\137\x6b\x65\171"]);
        variable_set("\x6d\151\156\151\157\x72\x61\x6e\x67\x65\x5f\x73\141\x6d\154\137\151\144\160\137\x70\x72\x69\x76\141\x74\x65\137\143\x65\162\x74\151\x66\151\143\141\164\x65", $ce["\x70\x72\151\x76\141\x74\145\x5f\x6b\145\171"]);
    }
    public static function faq(&$NO, &$ZX)
    {
        $NO["\x6d\151\156\x69\157\162\x61\x6e\147\145\x5f\x69\x64\160\137\147\x75\151\144\145\137\x6c\x69\156\x6b\x77"] = array("\43\x6d\141\x72\153\x75\x70" => "\74\x64\x69\x76\40\x63\154\x61\x73\x73\x3d\42\x6d\157\137\163\141\x6d\154\x5f\x74\141\x62\x6c\x65\137\154\x61\x79\157\x75\164\137\x73\x75\x70\160\157\x72\164\x5f\61\x22\x20\x73\164\171\x6c\145\x3d\42\155\141\162\147\151\x6e\55\x74\x6f\160\72\x20\x35\160\170\73\42\x3e");
        $NO["\x6d\x69\x6e\151\x6f\x72\x61\156\x67\145\x5f\146\141\x71"] = array("\x23\155\x61\162\x6b\165\x70" => "\x3c\142\x3e\74\x2f\142\x3e\x3c\x61\x20\143\154\x61\x73\163\x3d\x22\142\x74\x6e\40\142\x74\x6e\55\160\162\x69\155\x61\x72\x79\55\146\141\x71\x20\142\x74\x6e\55\154\141\162\147\x65\x20\142\x74\x6e\x5f\146\x61\x71\137\x62\x75\x74\x74\157\x6e\x73\42\x20\163\164\171\x6c\x65\x3d\42\146\154\x6f\141\x74\72\x20\154\x65\x66\164\73\143\x6f\x6c\157\162\x3a\40\43\64\70\141\x30\144\x63\73\142\157\x72\x64\145\x72\72\40\x32\x70\x78\x20\x73\x6f\x6c\x69\144\40\x23\64\70\141\60\x64\x63\x3b\42\40\150\162\x65\x66\x3d\x22\x68\164\164\160\163\72\57\57\146\141\x71\x2e\155\x69\x6e\151\157\162\x61\156\x67\145\56\143\x6f\x6d\x2f\x6b\x62\57\144\x72\165\x70\141\154\x2f\x22\x20\164\x61\162\147\145\x74\75\42\137\x62\x6c\141\156\153\42\76" . "\x46\162\x65\x71\x75\x65\x6e\x74\x6c\171\40\141\x73\153\145\144\x20\161\x75\145\x73\x74\x69\x6f\x6e\x73\74\57\141\x3e");
        $NO["\155\x69\156\x69\157\162\141\156\147\145\137\x66\157\x72\165\x6d"] = array("\x23\155\141\162\153\165\160" => "\74\142\x3e\x3c\x2f\x62\76\x3c\141\40\143\154\x61\x73\x73\x3d\x22\x62\x74\x6e\x20\x62\164\x6e\55\160\162\x69\155\x61\162\171\55\x66\x61\161\x20\142\x74\x6e\x2d\x6c\x61\162\147\145\x20\x62\x74\156\137\146\x61\161\137\x62\x75\x74\164\x6f\156\x73\42\40\x73\164\x79\154\145\75\x22\146\154\x6f\x61\x74\x3a\40\162\x69\147\150\x74\x3b\x63\157\154\x6f\x72\72\x20\43\64\70\141\x30\144\143\73\142\x6f\x72\x64\x65\x72\x3a\x20\62\x70\170\x20\163\157\x6c\x69\144\40\x23\x34\x38\141\60\144\143\x3b\42\40\x68\162\145\146\75\42\150\164\x74\x70\x73\x3a\x2f\x2f\x66\x6f\x72\x75\x6d\56\x6d\151\x6e\151\157\x72\141\x6e\147\145\56\x63\x6f\155\x2f\42\x20\x74\141\x72\147\145\x74\x3d\42\x5f\142\154\x61\x6e\153\x22\76" . "\x41\x73\x6b\x20\x71\165\x65\x73\164\151\157\x6e\163\x20\x6f\156\40\x66\157\x72\x75\155\74\x2f\141\x3e");
        $NO["\x6d\141\162\x6b\x75\160\137\x74\x65\x73\x74\x5f\144\151\166"] = array("\x23\155\x61\162\x6b\x75\x70" => "\x3c\57\x64\x69\166\76");
    }
    public static function isCustomer_registered(array &$NO, $ZX)
    {
        global $base_url;
        if (variable_get("\x6d\151\x6e\151\157\162\141\x6e\x67\x65\137\x73\141\155\x6c\137\151\x64\x70\x5f\x63\x75\163\x74\x6f\x6d\145\162\x5f\141\144\x6d\x69\156\x5f\x65\x6d\x61\151\x6c", NULL) == NULL || variable_get("\x6d\151\x6e\x69\x6f\x72\x61\x6e\x67\145\137\163\141\155\x6c\137\151\144\160\x5f\143\165\x73\164\157\155\x65\162\137\151\144", NULL) == NULL || variable_get("\155\x69\x6e\151\157\x72\141\x6e\147\x65\137\163\x61\155\154\137\151\144\160\137\143\165\x73\x74\x6f\155\145\x72\137\141\x64\x6d\151\156\x5f\x74\157\x6b\x65\156", NULL) == NULL || variable_get("\x6d\x69\156\151\157\162\141\x6e\147\145\x5f\163\141\x6d\x6c\x5f\x69\x64\160\137\143\165\x73\164\157\155\145\x72\137\x61\160\151\137\153\x65\x79", NULL) == NULL) {
            goto fk;
        }
        if (!(variable_get("\155\151\x6e\151\x6f\x72\x61\156\147\145\137\x73\141\155\154\137\x69\x64\160\137\163\155\x6c\x5f\x6c\153", NULL) == NULL)) {
            goto v9;
        }
        $NO["\155\141\162\x6b\165\x70\137\163\x61\x6d\154\137\x69\144\160\x5f\154\x69\143\x65\x6e\x73\x65\x5f\155\x65\163\x73\141\147\145"] = array("\43\155\141\x72\153\165\160" => "\x3c\x64\x69\166\x20\163\x74\171\x6c\x65\x3d\x22\x64\151\x73\x70\x6c\141\171\72\142\x6c\x6f\143\x6b\x3b\x20\x6d\141\162\x67\x69\x6e\x2d\x74\x6f\160\72\x31\x30\160\170\x3b\143\157\x6c\x6f\162\x3a\x72\x65\144\x3b\40\142\x61\x63\x6b\147\162\157\165\156\144\55\143\x6f\x6c\157\x72\x3a\x72\x67\x62\141\50\x32\65\x31\54\x20\62\x33\62\54\40\x30\54\40\60\56\x31\65\x29\73\40\164\145\170\164\55\x61\154\x69\147\156\72\143\145\156\164\145\x72\x3b\40\x70\x61\x64\144\151\156\x67\x3a\65\160\x78\73\x20\x62\x6f\162\x64\145\x72\x3a\x73\x6f\x6c\151\144\x20\61\160\170\40\162\147\142\x61\x28\x32\65\x35\54\x20\60\x2c\x20\x39\54\40\60\x2e\x33\x36\51\x3b\x22\x3e" . "\40\x50\154\145\141\x73\145\40\x3c\x61\x20\x68\x72\x65\x66\75\x22" . $base_url . "\x2f\x3f\x71\75\x61\x64\155\151\156\57\x63\x6f\156\x66\x69\x67\x2f\x70\x65\157\x70\x6c\145\57\155\151\x6e\151\157\162\x61\156\x67\145\137\163\x61\x6d\x6c\x5f\151\144\160\x22\76\141\143\x74\151\x76\141\x74\x65\x20\164\x68\x65\x20\x6c\151\143\x65\x6e\x73\x65\74\57\141\76" . "\x20\x74\157\x20\x65\x6e\x61\x62\154\x65\40\x44\x72\165\x70\141\x6c\40\111\x44\120\56\x3c\57\x64\151\166\x3e");
        return TRUE;
        v9:
        goto ek;
        fk:
        $NO["\x6d\x61\162\153\x75\160\x5f\163\141\155\x6c\x5f\151\144\160\137\162\x65\147\163\151\164\162\141\x74\151\x6f\156\137\155\145\x73\x73\141\x67\145"] = array("\x23\x6d\x61\x72\x6b\165\x70" => "\74\144\x69\x76\40\x73\x74\171\x6c\x65\75\x22\x64\x69\x73\x70\154\141\x79\x3a\x62\154\x6f\x63\153\73\40\155\141\162\147\x69\156\x2d\164\x6f\x70\x3a\x31\x30\160\x78\73\40\x63\157\154\157\x72\72\162\145\144\x3b\x20\x62\x61\x63\x6b\x67\162\x6f\165\156\144\x2d\143\157\154\x6f\x72\72\162\x67\x62\141\x28\x32\65\61\x2c\40\62\x33\62\x2c\x20\x30\x2c\x20\x30\x2e\x31\x35\51\x3b\x20\160\x61\x64\x64\x69\156\147\x3a\65\x70\x78\73\x74\145\170\164\55\141\x6c\x69\147\x6e\72\40\x63\x65\x6e\x74\x65\162\73\40\x62\157\x72\x64\x65\162\72\x73\157\154\x69\x64\x20\x31\x70\x78\40\162\147\x62\x61\50\x32\x35\65\54\x20\x30\54\x20\71\x2c\x20\60\56\x33\66\x29\x3b\x22\76" . "\x20\x50\x6c\145\141\x73\145\40\x3c\x61\x20\x68\x72\x65\x66\x3d\42" . $base_url . "\x2f\77\161\75\141\x64\x6d\151\x6e\57\143\157\x6e\x66\151\147\x2f\x70\x65\157\160\154\x65\x2f\x6d\x69\x6e\151\x6f\162\141\156\147\145\x5f\x73\141\x6d\154\137\x69\144\160\42\x3e\122\145\147\151\x73\164\x65\x72\x20\157\162\40\x4c\157\147\x69\x6e\x20\x77\x69\164\x68\x20\155\151\x6e\x69\117\x72\141\156\147\145\x3c\x2f\x61\76" . "\x20\x74\x6f\40\145\156\x61\142\154\145\40\x44\162\165\x70\x61\154\x20\x49\104\120\56\74\57\144\151\166\x3e");
        return TRUE;
        ek:
    }
    public static function AddsupportTab(array &$NO, $ZX)
    {
        $CF = Utilities::getEmailandPhone();
        $NO["\x6d\x61\162\153\165\160\x5f\151\x64\x70\137\x61\164\x74\x72\x5f\x68\145\x61\x64\x65\x72\137\164\x6f\x70\137\x73\x75\160\160\x6f\x72\x74"] = array("\x23\155\141\x72\153\165\x70" => "\74\x64\x69\166\x20\x63\154\x61\163\x73\x3d\42\155\x6f\137\163\x61\155\x6c\137\164\x61\142\x6c\145\x5f\x6c\x61\171\x6f\x75\164\137\x73\165\x70\x70\x6f\x72\164\137\x31\x22\76");
        $NO["\155\x61\x72\x6b\x75\160\137\x73\165\160\160\157\162\164\137\61"] = array("\x23\x6d\141\x72\153\x75\x70" => "\74\x68\63\x3e\74\x62\x3e\x53\x75\x70\x70\157\162\x74\x3a\74\57\142\x3e\x3c\x2f\x68\63\x3e\x3c\144\151\x76\76\116\x65\145\144\x20\141\x6e\x79\40\x68\x65\154\160\77\40\x4a\x75\x73\x74\x20\163\x65\x6e\144\40\x75\163\x20\x61\x20\x71\165\x65\x72\x79\40\163\157\x20\x77\145\x20\143\x61\x6e\x20\x68\x65\154\160\40\171\157\165\56\x3c\x62\x72\40\57\x3e\x3c\57\x64\x69\x76\76");
        $NO["\x6d\151\156\x69\157\x72\x61\x6e\x67\145\x5f\163\141\155\x6c\137\145\155\141\x69\154\137\x61\x64\144\162\145\x73\x73\x5f\163\x75\x70\160\157\162\x74"] = array("\x23\x74\x79\x70\x65" => "\x74\x65\x78\164\146\x69\x65\x6c\144", "\x23\141\x74\164\162\151\142\165\164\x65\163" => array("\x73\x74\171\x6c\x65" => "\x77\x69\x64\x74\x68\x3a\x31\x30\60\x25", "\160\154\141\143\145\x68\x6f\154\144\x65\162" => "\105\156\164\x65\x72\x20\x79\157\x75\162\x20\105\x6d\141\151\154"), "\x23\144\x65\x66\141\165\x6c\164\137\x76\x61\x6c\165\x65" => $CF["\x65\x6d\141\x69\x6c"]);
        $NO["\x6d\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\137\163\141\x6d\x6c\x5f\160\x68\157\x6e\145\x5f\x6e\165\155\x62\x65\x72\137\x73\165\160\160\157\162\164"] = array("\x23\x74\171\160\x65" => "\x74\x65\170\x74\x66\x69\145\x6c\144", "\43\x61\x74\x74\162\x69\x62\165\164\x65\163" => array("\163\164\x79\154\x65" => "\167\151\144\164\x68\72\61\x30\x30\x25", "\160\x6c\141\143\145\x68\157\x6c\x64\145\162" => "\105\x6e\164\x65\162\40\171\x6f\x75\162\40\160\x68\x6f\156\x65\x20\156\165\x6d\x62\145\162\40\167\x69\164\150\x20\x63\x6f\165\x6e\x74\162\x79\40\143\x6f\144\x65\x20\145\x67\x2e\x28\53\x39\61\51"), "\x23\144\145\x66\141\165\154\x74\137\x76\141\154\x75\145" => $CF["\x70\x68\157\156\x65"]);
        $NO["\155\151\156\x69\x6f\x72\141\156\147\145\137\x73\x61\155\154\x5f\x73\x75\160\x70\157\162\x74\137\x71\x75\145\162\x79\137\163\x75\160\x70\157\x72\x74"] = array("\x23\x74\171\160\x65" => "\164\145\x78\164\x61\x72\x65\141", "\43\x63\x6f\154\163" => "\x31\x30", "\43\162\157\x77\163" => "\65", "\43\x61\x74\164\162\151\x62\x75\x74\x65\163" => array("\163\164\x79\x6c\145" => "\167\151\x64\x74\x68\x3a\61\x30\60\x25", "\160\x6c\141\143\145\150\157\154\x64\145\x72" => "\127\x72\151\164\x65\40\171\x6f\x75\x72\x20\161\165\x65\x72\171\x20\150\x65\x72\x65\x2e"), "\x23\x72\x65\x73\151\172\x61\142\154\x65" => False);
        $NO["\155\x69\x6e\x69\x6f\x72\x61\156\x67\145\137\x73\x61\x6d\154\x5f\163\x75\160\x70\157\x72\x74\137\163\x75\142\155\151\164\x5f\143\x6c\151\x63\x6b"] = array("\x23\164\x79\x70\145" => "\x73\x75\x62\x6d\x69\x74", "\43\x76\141\x6c\165\x65" => t("\123\165\x62\155\151\x74\40\121\x75\x65\162\x79"), "\43\x73\165\142\x6d\151\x74" => array("\x6d\151\x6e\x69\157\x72\141\156\x67\x65\x5f\163\141\x6d\x6c\x5f\x69\144\160\137\163\x65\x6e\144\137\161\165\145\x72\171"), "\43\x61\164\x74\162\151\x62\165\x74\145\x73" => array("\x73\164\171\154\145" => "\142\x61\143\x6b\147\162\x6f\x75\x6e\144\x3a\x20\x23\63\x33\x37\x61\142\x37\x3b\x63\157\154\x6f\x72\x3a\40\x23\x66\146\146\x66\146\146\x3b\x74\x65\x78\164\x2d\x73\150\141\144\157\x77\72\40\60\40\x2d\x31\160\170\x20\61\160\170\x20\x23\63\x33\x37\x61\x62\x37\54\40\61\x70\x78\x20\x30\40\x31\160\x78\x20\x23\63\63\67\141\142\67\x2c\x20\x30\40\61\x70\170\40\x31\160\170\x20\x23\x33\63\67\x61\142\x37\54\x20\x2d\61\160\170\x20\60\40\x31\160\x78\40\x23\x33\x33\67\141\x62\x37\73\x62\157\170\x2d\x73\x68\x61\x64\157\x77\72\x20\60\x20\61\160\170\40\x30\x20\x23\x33\x33\x37\141\142\67\73\x62\x6f\x72\x64\x65\162\55\x63\157\x6c\x6f\x72\72\40\43\63\63\x37\141\142\67\x20\x23\63\x33\x37\x61\142\67\x20\x23\63\x33\67\141\142\67\x3b\144\x69\163\x70\x6c\141\x79\72\x62\154\x6f\x63\153\x3b\155\x61\x72\147\x69\156\x2d\154\145\146\x74\x3a\x61\165\x74\x6f\x3b\x6d\141\162\x67\x69\x6e\x2d\162\x69\x67\150\164\72\x61\165\x74\x6f\73"));
        $NO["\155\x69\x6e\151\157\162\141\x6e\x67\145\137\163\x61\x6d\154\x5f\163\165\160\160\x6f\162\164\x5f\x6e\x6f\x74\145"] = array("\43\155\x61\x72\x6b\x75\x70" => "\x3c\144\x69\166\76\x49\x66\40\171\157\165\40\x77\x61\156\164\x20\x63\165\163\x74\157\155\x20\x66\x65\x61\164\x75\x72\145\x73\x20\151\x6e\x20\x74\150\x65\40\160\x6c\x75\x67\151\x6e\x2c\40\x6a\165\163\164\x20\x64\x72\157\160\40\x61\x6e\40\145\155\x61\x69\x6c\x20\164\157\x20\x3c\141\40\150\162\145\x66\x3d\42\155\141\x69\154\164\157\72\x69\x6e\146\x6f\100\x78\x65\143\x75\x72\151\x66\x79\56\x63\157\x6d\42\76\x69\x6e\146\157\100\170\x65\x63\x75\162\151\146\171\x2e\x63\x6f\x6d\74\x2f\141\x3e\74\x2f\144\x69\166\x3e\x3c\57\x64\x69\166\x3e");
    }
    public static function send_support_query($Wp, $xK, $bn)
    {
        if (empty($Wp) || empty($bn)) {
            goto OB;
        }
        if (!valid_email_address($Wp)) {
            goto Fr;
        }
        goto ED;
        OB:
        drupal_set_message(t("\124\150\145\40\x3c\x62\76\74\x75\76\x45\155\141\151\154\74\x2f\165\76\x3c\x2f\x62\76\40\x61\156\144\x20\x3c\142\x3e\74\x75\76\121\165\145\162\171\74\57\165\x3e\74\57\142\76\40\146\151\145\154\x64\163\40\141\x72\145\x20\x6d\141\156\x64\x61\164\x6f\162\171\x2e"), "\145\162\x72\157\x72");
        return;
        goto ED;
        Fr:
        drupal_set_message(t("\x54\x68\x65\x20\x65\155\x61\151\154\x20\x61\144\144\x72\145\163\x73\x20\74\142\76\74\151\x3e" . $Wp . "\x3c\57\x69\x3e\x3c\x2f\142\x3e\x20\x69\x73\x20\x6e\x6f\x74\40\166\141\154\x69\144\x2e"), "\x65\162\162\x6f\x72");
        return;
        ED:
        $im = new MiniorangeSAMLIdpSupport($Wp, $xK, $bn);
        $oD = $im->sendSupportQuery();
        if ($oD) {
            goto FP;
        }
        drupal_set_message(t("\105\162\x72\157\162\x20\x73\145\156\x64\x69\x6e\x67\x20\163\165\160\160\x6f\x72\x74\x20\161\x75\x65\x72\171"), "\x65\162\x72\157\x72");
        goto U4;
        FP:
        drupal_set_message(t("\123\165\160\x70\157\162\164\x20\161\165\145\x72\171\x20\163\x75\x63\143\145\x73\x73\146\165\154\154\x79\x20\163\x65\156\x74"));
        U4:
    }
    public static function getEmailandPhone()
    {
        $wR = variable_get("\155\151\156\151\x6f\162\141\156\147\145\x5f\x73\141\x6d\x6c\137\x69\x64\160\137\143\x75\163\164\x6f\x6d\145\x72\x5f\x61\144\x6d\151\156\x5f\145\x6d\x61\151\154", '');
        $TZ = variable_get("\x6d\x69\156\x69\x6f\162\141\156\147\x65\x5f\163\141\x6d\154\137\x69\144\160\x5f\x63\165\163\x74\x6f\x6d\145\162\137\141\x64\155\151\x6e\137\160\150\157\156\145", '');
        $As = array("\145\x6d\x61\151\154" => isset($wR) ? $wR : '', "\x70\x68\157\x6e\145" => isset($TZ) ? $TZ : '');
        return $As;
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $nk = variable_get("\155\151\156\151\157\162\141\156\147\x65\x5f\x73\141\x6d\x6c\137\x69\144\160\137\142\x61\x73\x65\x5f\x75\162\154", '');
        $GY = isset($nk) && !empty($nk) ? $nk : $base_url;
        return $GY;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\165\162\x6c", get_loaded_extensions())) {
            goto r2;
        }
        return 0;
        goto e7;
        r2:
        return 1;
        e7:
    }
    public static function generateID()
    {
        return "\x5f" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($Hw)
    {
        $BE = '';
        $qK = 0;
        P4:
        if (!($qK < strlen($Hw))) {
            goto Lc;
        }
        $BE .= sprintf("\45\x30\x32\x78", ord($Hw[$qK]));
        ww:
        $qK++;
        goto P4;
        Lc:
        return $BE;
    }
    public static function generateRandomBytes($Rl, $rH = TRUE)
    {
        return openssl_random_pseudo_bytes($Rl);
    }
    public static function createAuthnRequest($qN, $L1, $RN = "\146\x61\x6c\163\145")
    {
        $Qo = "\74\x3f\170\155\154\x20\166\145\162\163\151\x6f\x6e\x3d\42\x31\x2e\60\x22\40\x65\156\x63\157\144\x69\x6e\147\75\x22\125\124\106\x2d\70\x22\77\76" . "\74\x73\141\x6d\154\x70\72\101\x75\x74\x68\x6e\x52\145\x71\x75\145\x73\164\40\170\x6d\154\x6e\x73\72\x73\141\x6d\x6c\160\x3d\42\x75\x72\156\x3a\157\x61\163\x69\163\x3a\156\x61\x6d\x65\163\72\x74\143\x3a\x53\101\x4d\x4c\72\62\56\60\x3a\x70\x72\157\164\x6f\x63\x6f\154\42\x20\x49\x44\75\x22" . self::generateID() . "\x22\x20\x56\x65\x72\x73\x69\x6f\156\75\x22\62\56\x30\x22\40\x49\163\163\x75\145\x49\156\x73\164\141\x6e\164\75\42" . self::generateTimestamp() . "\x22";
        if (!($RN == "\164\162\165\145")) {
            goto tj;
        }
        $Qo .= "\40\106\157\x72\x63\145\101\x75\x74\x68\156\x3d\42\164\x72\x75\x65\42";
        tj:
        $Qo .= "\40\x50\x72\157\x74\157\x63\157\154\102\151\x6e\144\x69\156\147\x3d\42\x75\162\x6e\x3a\x6f\141\x73\x69\x73\x3a\x6e\x61\x6d\145\x73\x3a\164\x63\72\x53\x41\115\114\x3a\62\x2e\x30\72\x62\x69\x6e\x64\x69\156\147\163\72\x48\124\124\120\x2d\120\x4f\123\x54\42\x20\x41\163\x73\x65\x72\164\151\157\x6e\x43\157\x6e\x73\x75\155\x65\x72\x53\145\x72\166\x69\x63\145\125\x52\114\x3d\42" . $qN . "\x22\x20\76\x3c\163\141\155\x6c\72\111\x73\x73\165\145\x72\x20\x78\x6d\x6c\156\x73\72\x73\141\x6d\154\x3d\42\165\x72\156\72\157\x61\163\151\x73\72\x6e\141\155\145\x73\x3a\164\143\72\123\x41\115\x4c\72\x32\x2e\x30\x3a\141\x73\163\x65\162\x74\151\x6f\156\42\x3e" . $L1 . "\x3c\x2f\x73\x61\155\154\72\111\163\163\x75\145\x72\x3e\74\x2f\x73\x61\155\154\160\x3a\101\x75\x74\150\x6e\x52\145\x71\x75\x65\x73\164\76";
        $m5 = gzdeflate($Qo);
        $cS = base64_encode($m5);
        $Cs = urlencode($cS);
        return $Cs;
    }
    public static function mo_idp_send_logout_request($QB, $L1, $L4)
    {
        global $base_url;
        $V8 = $base_url;
        $vv = variable_get("\x6d\151\156\x69\157\162\141\156\147\x65\x5f\163\141\x6d\154\137\x69\x64\x70\137\150\164\x74\x70\x5f\142\x69\156\x64\151\156\x67", '');
        $sn = drupal_get_path("\155\x6f\x64\165\x6c\145", "\x6d\x69\x6e\151\157\x72\x61\156\x67\145\137\163\141\x6d\154\x5f\151\144\x70");
        $UU = Utilities::createLogoutRequest($QB, '', $L1, $L4, "\x48\164\164\160\120\x6f\163\x74");
        $Zt = '';
        $Zt = variable_get("\155\x69\156\151\157\162\x61\156\x67\145\x5f\163\x61\x6d\x6c\137\x69\144\160\137\160\165\142\x6c\x5f\143\145\162\164\151\146\151\143\x61\x74\145");
        $Ok = '';
        $Ok = variable_get("\x6d\x69\x6e\151\157\x72\141\156\147\145\137\x73\x61\155\x6c\137\151\x64\x70\x5f\x70\162\x69\x76\x61\x74\x65\x5f\143\145\162\164\x69\146\151\143\141\x74\145");
        if ($Zt != '') {
            goto Va;
        }
        $yj = $sn . DIRECTORY_SEPARATOR . "\162\145\x73\x6f\165\162\x63\145\163" . DIRECTORY_SEPARATOR . "\151\x64\160\x2d\163\151\x67\156\x69\x6e\147\x2e\x63\x72\x74";
        goto Ok;
        Va:
        $yj = $sn . DIRECTORY_SEPARATOR . "\x72\145\x73\157\165\162\x63\145\x73" . DIRECTORY_SEPARATOR . "\103\x75\163\164\157\x6d\x5f\x50\165\142\x6c\x69\143\x5f\x43\145\162\164\x69\x66\151\x63\141\164\145\x2e\143\x72\x74";
        Ok:
        if ($Ok != '') {
            goto vZ;
        }
        $hS = $sn . DIRECTORY_SEPARATOR . "\162\x65\x73\157\x75\162\x63\145\x73" . DIRECTORY_SEPARATOR . "\151\x64\160\55\x73\151\x67\x6e\x69\x6e\147\56\153\x65\x79";
        goto sn;
        vZ:
        $hS = $sn . DIRECTORY_SEPARATOR . "\162\145\163\157\x75\162\x63\x65\163" . DIRECTORY_SEPARATOR . "\x43\165\x73\164\157\155\137\x50\x72\151\x76\x61\164\145\x5f\x43\x65\162\164\151\146\151\143\141\164\145\x2e\153\145\x79";
        sn:
        $Fb = Utilities::signXML($UU, $yj, $hS);
        self::_send_logout_request($Fb, $V8, $L4);
        return;
    }
    public static function signXML($RH, $yj, $hS)
    {
        $sV = new DOMDocument();
        $RH = str_replace("\x26", "\46\x61\x6d\160\x3b", $RH);
        $sV->loadXML($RH);
        $xV = $sV->firstChild;
        $za = $xV->ownerDocument->saveXML($xV);
        $Fb = base64_encode($za);
        return $Fb;
    }
    public static function _read_samllogout_request($O0, $k3)
    {
        $UU = $O0["\123\101\115\x4c\122\x65\161\x75\145\163\x74"];
        $v3 = "\57";
        if (!array_key_exists("\x52\145\x6c\141\x79\x53\164\x61\x74\145", $O0)) {
            goto zK;
        }
        $bS = $O0["\122\x65\x6c\141\171\x53\164\141\x74\x65"];
        zK:
        $UU = base64_decode($UU);
        if (!(array_key_exists("\x53\x41\x4d\x4c\122\x65\161\165\145\163\164", $k3) && !empty($k3["\x53\x41\x4d\x4c\x52\x65\x71\x75\145\163\164"]))) {
            goto Dq;
        }
        $UU = gzinflate($UU);
        Dq:
        $yZ = array_key_exists("\x53\x69\x67\101\154\147", $O0) ? $O0["\x53\151\x67\x41\154\147"] : null;
        $oV = array_key_exists("\123\x69\147\x6e\x61\164\x75\x72\x65", $O0) ? $O0["\x53\151\147\156\141\164\165\162\x65"] : null;
        $sV = new DOMDocument();
        $sV->loadXML($UU);
        $gn = $sV->firstChild;
        if (!($gn->localName == "\x4c\157\147\x6f\165\164\122\145\161\165\145\163\164")) {
            goto iZ;
        }
        $gE = new SAML2_LogoutRequest($gn);
        $ks = $gE->getId();
        $L1 = $gE->getIssuer();
        $vL = variable_get("\155\151\156\151\157\x72\x61\156\147\145\x5f\x73\141\x6d\154\137\151\x64\x70\137\x73\154\157\x5f\x75\162\154", '');
        $gJ = self::createLogoutResponse($ks, $L1, $vL, "\110\164\164\x70\x50\x6f\x73\x74");
        $sn = drupal_get_path("\155\157\144\x75\154\145", "\x6d\151\156\151\x6f\x72\x61\156\147\x65\x5f\163\141\x6d\x6c\x5f\151\144\160");
        $Zt = '';
        $Zt = variable_get("\155\x69\156\x69\x6f\x72\x61\156\147\145\137\x73\141\x6d\154\x5f\x69\144\x70\x5f\160\x75\x62\x6c\137\x63\145\162\164\151\x66\151\x63\141\164\x65");
        $Ok = '';
        $Ok = variable_get("\155\151\x6e\151\157\x72\x61\x6e\x67\x65\x5f\163\141\155\154\137\x69\144\160\137\160\162\151\x76\141\x74\145\x5f\143\145\x72\164\x69\146\151\x63\x61\164\145");
        if ($Zt != '') {
            goto pA;
        }
        $yj = $sn . "\x72\x65\x73\x6f\165\x72\143\x65\163" . DIRECTORY_SEPARATOR . "\151\144\x70\55\163\x69\147\156\151\156\x67\x2e\x63\162\x74";
        goto YV;
        pA:
        $yj = $sn . "\x72\145\163\157\x75\162\x63\x65\163" . DIRECTORY_SEPARATOR . "\x43\165\163\x74\x6f\x6d\137\120\165\142\154\151\143\x5f\x43\145\162\x74\x69\146\151\x63\141\164\x65\x2e\143\x72\x74";
        YV:
        if ($Ok != '') {
            goto Sn;
        }
        $hS = $sn . "\x72\x65\x73\157\x75\162\143\x65\x73" . DIRECTORY_SEPARATOR . "\x69\x64\160\55\163\151\x67\x6e\151\x6e\x67\56\x6b\145\x79";
        goto Jl;
        Sn:
        $hS = $sn . "\x72\145\163\157\165\x72\x63\145\163" . DIRECTORY_SEPARATOR . "\x43\165\163\x74\x6f\x6d\137\120\x72\x69\166\141\164\x65\x5f\103\145\x72\x74\x69\146\x69\143\141\x74\145\56\x6b\x65\171";
        Jl:
        $Fb = self::signXML($gJ, $yj, $hS);
        self::_send_logout_response($Fb, $bS, $vL);
        iZ:
    }
    public static function createLogoutResponse($kn, $L1, $vL, $Oj = "\110\164\164\x70\122\145\x64\151\x72\145\x63\164")
    {
        $Qo = "\74\77\170\155\154\40\166\145\162\x73\151\x6f\x6e\x3d\42\61\56\x30\x22\x20\x65\156\x63\157\144\x69\x6e\147\x3d\x22\x55\x54\x46\x2d\x38\42\77\76\74\163\x61\155\x6c\x70\x3a\114\157\x67\157\165\164\122\x65\x73\160\157\x6e\163\x65\40\170\155\x6c\156\x73\72\163\x61\x6d\154\x70\75\42\x75\162\156\72\157\141\x73\151\163\72\156\x61\155\145\x73\x3a\164\x63\72\123\101\115\114\x3a\x32\56\x30\x3a\x70\x72\x6f\x74\x6f\143\x6f\154\x22\x20\x78\155\154\x6e\163\x3a\163\x61\x6d\x6c\x3d\x22\165\162\x6e\x3a\157\141\163\151\x73\72\156\141\155\x65\163\72\164\x63\x3a\123\101\x4d\114\x3a\62\56\60\72\141\163\163\145\x72\164\151\157\156\x22\40\111\104\75\x22" . self::generateID() . "\x22\40\x56\145\x72\x73\x69\157\156\75\42\62\56\x30\x22\x20\111\163\x73\165\145\x49\x6e\x73\x74\141\156\x74\75\x22" . self::generateTimestamp() . "\42\x20\104\x65\x73\164\x69\156\141\x74\151\157\x6e\x3d\42" . htmlspecialchars($vL) . "\x22\40\111\156\x52\145\163\x70\157\156\163\145\x54\x6f\75\x22" . $kn . "\42\76\x3c\x73\141\155\x6c\x3a\111\163\x73\165\145\162\40\x78\155\x6c\156\163\x3a\163\141\155\x6c\75\x22\165\162\156\72\157\141\163\x69\163\x3a\156\x61\155\x65\x73\x3a\x74\x63\72\123\101\x4d\x4c\72\x32\56\x30\x3a\141\163\163\x65\162\164\x69\157\x6e\x22\x3e" . htmlspecialchars($L1) . "\x3c\x2f\163\141\x6d\x6c\x3a\111\163\163\x75\145\x72\x3e\x3c\163\141\155\x6c\x70\x3a\x53\164\x61\x74\x75\x73\76\74\x73\141\155\x6c\160\x3a\123\164\x61\x74\165\x73\x43\x6f\144\145\40\126\141\154\x75\145\75\42\x75\162\156\x3a\157\x61\163\x69\163\72\156\x61\x6d\145\163\x3a\164\143\x3a\x53\101\x4d\x4c\72\62\x2e\60\72\x73\164\141\164\165\163\72\123\165\143\x63\145\163\163\x22\57\x3e\x3c\57\163\141\x6d\154\160\72\x53\x74\141\x74\x75\163\x3e\x3c\57\x73\141\155\x6c\x70\72\x4c\157\147\157\165\164\x52\x65\163\x70\157\156\x73\145\76";
        if (!(empty($Oj) || $Oj == "\110\x74\164\x70\122\x65\x64\x69\162\x65\x63\164")) {
            goto xt;
        }
        $m5 = gzdeflate($Qo);
        $cS = base64_encode($m5);
        $Cs = urlencode($cS);
        $Qo = $Cs;
        xt:
        return $Qo;
    }
    public static function _read_saml_response($O0, $k3)
    {
        $sZ = $O0["\x53\x41\x4d\x4c\122\x65\x73\160\157\156\x73\145"];
        $V8 = "\x2f";
        if (!array_key_exists("\122\x65\x6c\x61\171\x53\164\x61\164\x65", $O0)) {
            goto aN;
        }
        $V8 = $O0["\122\145\154\x61\x79\x53\164\x61\x74\145"];
        aN:
        $sZ = base64_decode($sZ);
        if (!(array_key_exists("\x53\101\x4d\114\x52\145\163\x70\157\x6e\x73\145", $k3) && !empty($k3["\123\101\x4d\114\122\x65\x73\x70\x6f\x6e\x73\145"]))) {
            goto ef;
        }
        $sZ = gzinflate($sZ);
        ef:
        $sV = new DOMDocument();
        $sV->loadXML($sZ);
        $A0 = $sV->firstChild;
        if (!($A0->localName == "\x4c\x6f\x67\157\x75\164\x52\x65\x73\160\157\x6e\163\145")) {
            goto Lh;
        }
        if (isset($_SESSION)) {
            goto Qn;
        }
        session_start();
        Qn:
        session_destroy();
        drupal_goto($V8);
        die;
        Lh:
    }
    public static function _send_logout_response($Fb, $V8, $L4)
    {
        $S4 = htmlspecialchars($Fb);
        echo "\74\x66\157\x72\155\x20\x69\144\75\42\x72\145\x73\x70\157\156\x73\x65\x66\x6f\x72\155\x22\40\x61\143\x74\x69\157\x6e\x3d\x22" . $L4 . "\42\40\x6d\145\x74\x68\x6f\144\x3d\42\160\157\x73\164\42\76\12\x20\x20\x20\40\40\x20\x3c\x69\x6e\160\x75\x74\x20\x74\x79\160\x65\x3d\x22\150\x69\x64\144\145\156\42\x20\x6e\x61\155\145\75\x22\x53\x41\x4d\114\122\145\x73\160\x6f\x6e\163\145\42\x20\x76\x61\x6c\x75\145\x3d\42" . $S4 . "\x22\40\x2f\76\xa\40\x20\x20\x20\x20\x20\x3c\151\156\x70\x75\x74\40\164\171\160\x65\75\x22\x68\151\144\x64\x65\156\x22\x20\156\x61\x6d\145\75\42\122\x65\x6c\x61\171\x53\164\x61\x74\x65\x22\x20\166\141\x6c\165\145\x3d\x22" . $V8 . "\42\x20\57\x3e\12\x20\40\x20\x20\74\57\146\157\162\x6d\x3e\12\40\x20\x20\40\74\x73\143\162\x69\x70\x74\76\12\x20\x20\40\40\x20\x20\x64\157\x63\x75\x6d\145\156\x74\x2e\x67\x65\164\x45\x6c\145\155\145\156\164\102\171\x49\144\50\42\162\145\163\x70\x6f\x6e\x73\x65\146\157\162\x6d\42\x29\56\x73\165\142\155\151\x74\x28\x29\x3b\40\12\40\x20\x20\40\74\x2f\x73\x63\x72\151\x70\164\76";
        session_destroy();
        die;
    }
    public static function _send_logout_request($Fb, $V8, $L4)
    {
        $MQ = htmlspecialchars($Fb);
        echo "\74\146\x6f\162\155\x20\x69\144\75\42\162\x65\x71\165\x65\x73\164\x66\x6f\x72\x6d\x22\40\141\143\x74\151\157\156\75\x22" . $L4 . "\x22\40\155\x65\164\x68\157\x64\x3d\42\160\157\163\x74\x22\76\12\x20\40\x20\x20\40\x20\74\151\156\160\165\x74\40\x74\171\160\x65\75\x22\x68\151\144\144\x65\156\42\x20\x6e\141\x6d\x65\75\x22\123\101\x4d\114\122\x65\x71\x75\145\x73\164\42\40\166\141\154\x75\x65\75\42" . $MQ . "\x22\x20\x2f\x3e\xa\40\x20\40\40\x20\40\x3c\x69\156\x70\x75\164\40\164\171\x70\145\75\42\x68\151\144\x64\145\x6e\42\x20\x6e\x61\155\x65\x3d\42\122\x65\154\141\171\123\164\141\164\145\x22\x20\x76\141\x6c\x75\145\75\42" . $V8 . "\42\40\57\x3e\12\40\40\x20\x20\x3c\57\146\157\x72\155\x3e\12\40\x20\40\40\74\163\143\162\151\160\x74\76\xa\x20\40\40\x20\x20\x20\144\x6f\x63\x75\x6d\x65\156\164\56\x67\145\164\105\x6c\145\155\x65\156\x74\x42\x79\x49\x64\x28\42\162\145\161\165\145\x73\164\x66\157\x72\155\x22\x29\56\x73\165\142\x6d\151\x74\x28\x29\73\x20\40\xa\x20\40\x20\40\x3c\x2f\163\143\162\x69\160\164\76";
        session_destroy();
        die;
    }
    public static function createLogoutRequest($yM, $u0 = '', $L1, $vL, $Oj)
    {
        $Qo = "\x3c\77\170\x6d\154\x20\x76\145\x72\x73\x69\x6f\x6e\x3d\x22\61\x2e\60\42\x20\145\x6e\x63\x6f\144\x69\x6e\x67\75\x22\125\124\x46\x2d\70\42\x3f\76" . "\74\163\141\155\x6c\x70\x3a\114\x6f\x67\157\165\164\x52\145\x71\x75\145\x73\x74\40\170\x6d\x6c\156\163\x3a\x73\141\x6d\x6c\160\75\42\165\x72\x6e\72\157\x61\163\x69\x73\72\156\141\155\145\163\x3a\x74\x63\x3a\x53\101\115\x4c\72\62\56\60\72\x70\x72\157\164\157\143\x6f\x6c\x22\x20\x78\x6d\154\x6e\163\x3a\x73\141\155\154\75\42\x75\162\156\x3a\157\x61\163\151\x73\x3a\x6e\141\155\145\x73\72\164\143\x3a\x53\101\115\x4c\x3a\62\56\x30\x3a\x61\163\x73\x65\162\x74\151\157\156\42\x20\x49\x44\75\42" . self::generateID() . "\42\40\111\x73\x73\165\x65\x49\x6e\x73\x74\141\156\x74\x3d\42" . self::generateTimestamp() . "\42\40\x56\x65\162\x73\151\x6f\x6e\x3d\42\x32\x2e\x30\x22\40\104\x65\163\x74\x69\156\x61\x74\x69\x6f\156\75\42" . $vL . "\x22\76\12\x9\11\x9\11\x9\x9\74\x73\x61\x6d\x6c\72\x49\163\163\165\x65\x72\40\x78\x6d\154\156\163\x3a\163\141\x6d\154\75\x22\x75\x72\156\72\157\141\x73\x69\163\x3a\x6e\141\155\x65\163\x3a\164\143\x3a\x53\101\x4d\x4c\72\x32\56\60\x3a\x61\163\163\x65\x72\x74\x69\x6f\156\x22\x3e" . $L1 . "\x3c\x2f\x73\141\155\x6c\72\111\163\x73\165\x65\162\x3e\xa\x9\x9\x9\11\x9\11\74\163\x61\x6d\154\72\116\141\155\145\111\x44\40\170\x6d\x6c\x6e\163\72\163\141\x6d\154\75\42\165\162\x6e\72\x6f\141\163\x69\x73\x3a\156\x61\x6d\x65\x73\72\164\143\x3a\x53\x41\x4d\114\72\62\56\x30\72\x61\163\163\145\x72\164\x69\157\x6e\42\x3e" . $yM . "\74\57\163\x61\x6d\x6c\72\116\141\155\145\111\104\76";
        if (empty($u0)) {
            goto l2;
        }
        $Qo .= "\x3c\163\x61\155\x6c\x70\x3a\x53\145\163\x73\151\157\156\x49\156\x64\x65\170\76" . $u0 . "\x3c\x2f\163\141\x6d\154\160\x3a\x53\145\163\x73\x69\157\156\x49\156\x64\x65\170\76";
        l2:
        $Qo .= "\x3c\57\163\x61\x6d\154\160\x3a\x4c\x6f\147\157\x75\164\x52\x65\161\x75\x65\x73\164\76";
        if (!(empty($Oj) || $Oj == "\110\124\124\x50\55\122\x65\144\151\162\145\x63\164")) {
            goto HO;
        }
        $m5 = gzdeflate($Qo);
        $cS = base64_encode($m5);
        $Cs = urlencode($cS);
        $Qo = $Cs;
        HO:
        return $Qo;
    }
    public static function generateTimestamp($mu = NULL)
    {
        if (!($mu === NULL)) {
            goto Ll;
        }
        $mu = time();
        Ll:
        return gmdate("\131\x2d\x6d\x2d\144\x5c\x54\110\72\151\72\163\134\132", $mu);
    }
    public static function xpQuery(DOMNode $Bu, $bn)
    {
        static $g0 = NULL;
        if ($Bu instanceof DOMDocument) {
            goto bS;
        }
        $jF = $Bu->ownerDocument;
        goto cz;
        bS:
        $jF = $Bu;
        cz:
        if (!($g0 === NULL || !$g0->document->isSameNode($jF))) {
            goto IL;
        }
        $g0 = new DOMXPath($jF);
        $g0->registerNamespace("\x73\x6f\x61\x70\x2d\145\x6e\x76", "\150\x74\164\160\x3a\x2f\x2f\x73\x63\150\x65\x6d\141\163\56\x78\x6d\x6c\x73\157\141\x70\x2e\x6f\162\x67\57\163\157\141\x70\57\145\156\166\145\x6c\157\160\x65\x2f");
        $g0->registerNamespace("\x73\141\x6d\154\137\160\162\x6f\x74\157\143\x6f\x6c", "\165\x72\x6e\72\x6f\141\163\x69\163\72\156\141\x6d\145\163\x3a\164\x63\x3a\123\101\x4d\x4c\72\62\56\60\x3a\160\162\x6f\164\x6f\x63\157\x6c");
        $g0->registerNamespace("\x73\x61\155\154\137\141\x73\x73\145\x72\x74\x69\157\156", "\x75\x72\x6e\x3a\157\141\163\151\163\x3a\x6e\x61\155\145\163\72\164\143\x3a\123\x41\x4d\114\72\x32\56\60\x3a\141\x73\x73\145\x72\x74\151\157\156");
        $g0->registerNamespace("\x73\141\155\154\x5f\155\145\164\x61\144\141\164\141", "\x75\x72\156\x3a\x6f\x61\x73\x69\163\72\x6e\x61\155\x65\163\x3a\x74\143\x3a\x53\101\115\x4c\x3a\x32\56\60\x3a\155\x65\164\141\144\x61\x74\141");
        $g0->registerNamespace("\x64\163", "\150\x74\x74\x70\x3a\x2f\x2f\167\167\x77\x2e\x77\x33\x2e\x6f\x72\147\57\x32\x30\60\60\57\x30\x39\57\x78\x6d\154\144\x73\151\x67\x23");
        $g0->registerNamespace("\170\x65\x6e\143", "\x68\164\x74\x70\72\x2f\57\167\167\167\x2e\167\x33\x2e\157\x72\x67\x2f\x32\60\x30\x31\57\60\x34\57\170\155\154\x65\156\x63\43");
        IL:
        $HQ = $g0->query($bn, $Bu);
        $BE = array();
        $qK = 0;
        ej:
        if (!($qK < $HQ->length)) {
            goto bw;
        }
        $BE[$qK] = $HQ->item($qK);
        d4:
        $qK++;
        goto ej;
        bw:
        return $BE;
    }
    public static function parseNameId(DOMElement $RH)
    {
        $BE = array("\x56\x61\154\x75\145" => trim($RH->textContent));
        foreach (array("\116\141\x6d\145\x51\x75\x61\x6c\151\x66\151\x65\162", "\123\x50\116\141\x6d\145\121\x75\141\x6c\151\x66\151\x65\162", "\x46\157\162\155\x61\164") as $zI) {
            if (!$RH->hasAttribute($zI)) {
                goto wY;
            }
            $BE[$zI] = $RH->getAttribute($zI);
            wY:
            Pb:
        }
        mm:
        return $BE;
    }
    public static function xsDateTimeToTimestamp($TQ)
    {
        $ET = array();
        $gu = "\x2f\x5e\x28\134\x64\x5c\144\134\144\x5c\x64\x29\x2d\x28\134\144\x5c\144\x29\x2d\50\134\144\x5c\144\51\124\50\134\144\134\144\51\x3a\50\x5c\x64\x5c\x64\x29\72\x28\x5c\x64\134\144\51\50\x3f\72\x5c\56\x5c\x64\53\51\77\x5a\44\x2f\x44";
        if (!(preg_match($gu, $TQ, $ET) == 0)) {
            goto S9;
        }
        echo sprintf("\156\166\x61\x6c\x69\144\x20\123\x41\x4d\x4c\x32\40\x74\x69\155\145\x73\x74\141\155\160\x20\x70\x61\x73\163\x65\x64\40\x74\157\40\170\x73\104\x61\164\x65\124\151\155\x65\x54\157\124\151\155\145\163\164\x61\x6d\x70\x3a\x20" . $TQ);
        die;
        S9:
        $jw = intval($ET[1]);
        $Me = intval($ET[2]);
        $u_ = intval($ET[3]);
        $An = intval($ET[4]);
        $x9 = intval($ET[5]);
        $fu = intval($ET[6]);
        $fy = gmmktime($An, $x9, $fu, $Me, $u_, $jw);
        return $fy;
    }
    public static function extractStrings(DOMElement $FG, $lo, $VJ)
    {
        $BE = array();
        $Bu = $FG->firstChild;
        T3:
        if (!($Bu !== NULL)) {
            goto Jj;
        }
        if (!($Bu->namespaceURI !== $lo || $Bu->localName !== $VJ)) {
            goto Q9;
        }
        goto Ct;
        Q9:
        $BE[] = trim($Bu->textContent);
        Ct:
        $Bu = $Bu->nextSibling;
        goto T3;
        Jj:
        return $BE;
    }
    public static function validateElement(DOMElement $e0)
    {
        libraries_load("\170\155\154\x73\145\143\154\151\x62\x73");
        $WU = new XMLSecurityDSig();
        $WU->idKeys[] = "\x49\x44";
        $gT = self::xpQuery($e0, "\x2e\57\144\x73\72\x53\151\147\156\x61\x74\x75\162\145");
        if (count($gT) === 0) {
            goto P7;
        }
        if (count($gT) > 1) {
            goto Da;
        }
        goto u4;
        P7:
        return FALSE;
        goto u4;
        Da:
        echo sprintf("\x58\x4d\114\123\145\x63\72\x20\x6d\x6f\x72\x65\40\164\150\141\156\x20\157\x6e\x65\40\x73\x69\147\x6e\141\164\x75\x72\145\x20\145\154\x65\x6d\x65\x6e\x74\x20\x69\156\40\x72\157\157\164\x2e");
        die;
        u4:
        $gT = $gT[0];
        $WU->sigNode = $gT;
        $WU->canonicalizeSignedInfo();
        if ($WU->validateReference()) {
            goto Zl;
        }
        echo sprintf("\130\115\114\163\145\x63\x3a\x20\144\151\147\145\x73\164\40\x76\141\x6c\x69\x64\x61\x74\x69\x6f\156\x20\146\141\151\x6c\x65\x64");
        die;
        Zl:
        $Y2 = FALSE;
        foreach ($WU->getValidatedNodes() as $B8) {
            if ($B8->isSameNode($e0)) {
                goto sO;
            }
            if ($e0->parentNode instanceof DOMDocument && $B8->isSameNode($e0->ownerDocument)) {
                goto kd;
            }
            goto XX;
            sO:
            $Y2 = TRUE;
            goto Kx;
            goto XX;
            kd:
            $Y2 = TRUE;
            goto Kx;
            XX:
            z5:
        }
        Kx:
        if ($Y2) {
            goto un;
        }
        echo sprintf("\x58\115\114\123\145\143\x3a\40\x54\150\x65\40\162\x6f\157\x74\x20\x65\154\x65\155\145\x6e\164\40\151\163\x20\x6e\x6f\164\x20\163\x69\147\156\x65\144\x2e");
        die;
        un:
        $ce = array();
        foreach (self::xpQuery($gT, "\56\x2f\144\x73\x3a\x4b\145\171\111\156\x66\157\x2f\144\163\72\130\x35\x30\x39\104\141\x74\141\x2f\x64\163\72\x58\65\x30\x39\103\145\x72\x74\151\146\x69\143\141\x74\x65") as $Nl) {
            $wd = trim($Nl->textContent);
            $wd = str_replace(array("\xd", "\xa", "\11", "\x20"), '', $wd);
            $ce[] = $wd;
            jY:
        }
        Ab:
        $BE = array("\123\x69\147\x6e\x61\164\x75\x72\x65" => $WU, "\x43\145\162\164\151\x66\151\143\x61\x74\x65\x73" => $ce);
        return $BE;
    }
    public static function validateSignature(array $lJ, XMLSecurityKey $z6)
    {
        $WU = $lJ["\x53\151\x67\156\x61\164\165\162\x65"];
        $Ha = self::xpQuery($WU->sigNode, "\56\x2f\x64\x73\x3a\x53\151\x67\156\x65\x64\111\x6e\x66\157\57\144\163\x3a\x53\151\x67\156\x61\x74\165\162\x65\115\145\x74\x68\157\144");
        if (!empty($Ha)) {
            goto ey;
        }
        echo sprintf("\115\151\x73\x73\x69\x6e\x67\40\x53\x69\147\156\x61\x74\x75\162\x65\x4d\145\164\150\x6f\x64\40\x65\x6c\x65\x6d\145\156\x74");
        die;
        ey:
        $Ha = $Ha[0];
        if ($Ha->hasAttribute("\101\154\147\x6f\162\x69\164\x68\x6d")) {
            goto NP;
        }
        echo sprintf("\115\x69\163\x73\151\x6e\147\x20\x41\154\x67\157\162\151\x74\150\x6d\55\x61\164\x74\x72\151\x62\165\x74\145\40\x6f\156\x20\123\151\x67\156\x61\164\165\x72\145\115\145\x74\x68\x6f\x64\40\x65\154\145\x6d\145\x6e\x74\x2e");
        die;
        NP:
        $SE = $Ha->getAttribute("\101\154\147\x6f\162\x69\164\150\x6d");
        if (!($z6->type === XMLSecurityKey::RSA_SHA1 && $SE !== $z6->type)) {
            goto s6;
        }
        $z6 = self::castKey($z6, $SE);
        s6:
        if ($WU->verify($z6)) {
            goto j8;
        }
        echo sprintf("\125\156\x61\142\154\x65\x20\x74\157\40\x76\141\154\x69\144\x61\x74\x65\40\x53\147\x6e\141\x74\165\162\x65");
        die;
        j8:
    }
    public static function castKey(XMLSecurityKey $z6, $CP, $Pp = "\160\x75\142\154\151\143")
    {
        if (!($z6->type === $CP)) {
            goto xl;
        }
        return $z6;
        xl:
        $Sr = openssl_pkey_get_details($z6->key);
        if (!($Sr === FALSE)) {
            goto m3;
        }
        echo sprintf("\125\156\x61\142\x6c\145\40\x74\x6f\x20\x67\x65\164\x20\x6b\145\x79\40\x64\145\164\x61\x69\154\x73\40\x66\162\157\x6d\x20\x58\x4d\114\x53\145\143\x75\162\151\164\171\113\x65\x79\x2e");
        die;
        m3:
        if (isset($Sr["\x6b\145\171"])) {
            goto yV;
        }
        echo sprintf("\x4d\151\163\x73\x69\156\x67\40\153\145\171\40\151\x6e\x20\160\165\x62\154\x69\143\40\153\x65\171\40\x64\145\x74\141\151\154\163\56");
        die;
        yV:
        $Cv = new XMLSecurityKey($CP, array("\x74\x79\x70\x65" => $Pp));
        $Cv->loadKey($Sr["\x6b\145\171"]);
        return $Cv;
    }
    public static function processResponse($ay, $YT, $x_, SAML2_Response $S4)
    {
        $Y_ = $S4->getDestination();
        if (!($Y_ !== NULL && $Y_ !== $ay)) {
            goto zL;
        }
        echo sprintf("\x44\x65\x73\x74\151\x6e\x61\x74\x69\157\156\40\x69\x6e\40\162\x65\x73\x70\157\x6e\163\x65\40\144\x6f\145\x73\156\x27\x74\x20\x6d\141\x74\143\150\40\x74\x68\145\40\143\x75\162\x72\145\x6e\164\x20\125\x52\114\56\40\104\x65\x73\164\x69\156\x61\x74\x69\157\156\40\151\163\40\x22" . $Y_ . "\42\54\40\143\165\162\x72\145\x6e\164\40\x55\x52\114\x20\x69\163\40\42" . $ay . "\x22\x2e");
        die;
        zL:
        $Cj = self::checkSign($YT, $x_);
        return $Cj;
    }
    public static function processRequest($YT, $x_)
    {
        $Cj = self::checkSign($YT, $x_);
        return $Cj;
    }
    public static function checkSign($YT, $x_)
    {
        $ce = $x_["\x43\x65\x72\164\151\146\x69\143\x61\164\x65\163"];
        if (!(count($ce) === 0)) {
            goto VH;
        }
        return FALSE;
        VH:
        $gQ = array();
        $gQ[] = $YT;
        $U8 = self::findCertificate($gQ, $ce);
        $S2 = NULL;
        $z6 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\171\x70\145" => "\x70\x75\142\154\151\143"));
        $z6->loadKey($U8);
        try {
            self::validateSignature($x_, $z6);
            return TRUE;
        } catch (Exception $jC) {
            $S2 = $jC;
        }
        if ($S2 !== NULL) {
            goto Y_;
        }
        return FALSE;
        goto vp;
        Y_:
        throw $S2;
        vp:
    }
    public static function validateIssuerAndAudience($sZ, $ZK, $Vr)
    {
        $L1 = current($sZ->getAssertions())->getIssuer();
        $WN = current(current($sZ->getAssertions())->getValidAudiences());
        if (strcmp($Vr, $L1) === 0) {
            goto hU;
        }
        echo sprintf("\111\x73\x73\165\x65\x72\x20\x63\141\156\156\157\x74\40\142\145\x20\166\145\162\x69\x66\151\145\144\56");
        die;
        goto DY;
        hU:
        if (strcmp($WN, $ZK) === 0) {
            goto ss;
        }
        echo sprintf("\x49\156\x76\141\154\x69\144\x20\x61\x75\x64\151\x65\x6e\x63\x65");
        die;
        goto ti;
        ss:
        return TRUE;
        ti:
        DY:
    }
    private static function findCertificate(array $JP, array $ce)
    {
        $HJ = array();
        foreach ($ce as $Ls) {
            $Bj = strtolower(sha1(base64_decode($Ls)));
            if (in_array($Bj, $JP, TRUE)) {
                goto jc;
            }
            $HJ[] = $Bj;
            goto KA;
            jc:
            $Qn = "\x2d\55\x2d\x2d\55\102\105\x47\111\116\x20\x43\105\122\x54\111\x46\111\103\x41\x54\105\55\x2d\55\x2d\55\12" . chunk_split($Ls, 64) . "\x2d\x2d\55\55\55\x45\x4e\x44\40\x43\x45\x52\x54\x49\106\111\x43\x41\x54\105\55\x2d\55\x2d\x2d\xa";
            return $Qn;
            KA:
        }
        NL:
        echo sprintf("\125\x6e\x61\142\x6c\x65\x20\x74\157\x20\x66\151\156\x64\40\141\x20\x63\145\162\x74\151\x66\151\143\x61\x74\x65\x20\155\x61\164\x63\150\x69\156\x67\40\164\150\x65\40\x63\157\156\146\x69\x67\165\162\145\x64\40\146\151\156\x67\145\162\x70\162\x69\x6e\164\56");
        die;
    }
    private static function doDecryptElement(DOMElement $IK, XMLSecurityKey $o1, array &$WO)
    {
        $L0 = new XMLSecEnc();
        $L0->setNode($IK);
        $L0->type = $IK->getAttribute("\124\x79\160\x65");
        $aH = $L0->locateKey($IK);
        if ($aH) {
            goto cc;
        }
        echo sprintf("\103\157\x75\x6c\144\40\x6e\x6f\164\40\154\157\143\141\164\145\40\x6b\x65\171\x20\x61\x6c\147\x6f\162\x69\x74\150\x6d\x20\151\156\40\x65\156\143\162\171\x70\164\x65\144\40\144\x61\x74\141\x2e");
        die;
        cc:
        $J9 = $L0->locateKeyInfo($aH);
        if ($J9) {
            goto Er;
        }
        echo sprintf("\103\157\x75\154\144\x20\156\x6f\164\x20\154\x6f\143\x61\x74\x65\40\x3c\x64\x73\x69\x67\72\x4b\x65\x79\x49\x6e\x66\157\76\x20\x66\157\162\40\x74\x68\145\x20\145\156\x63\x72\x79\x70\x74\145\144\40\153\145\171\56");
        die;
        Er:
        $Ft = $o1->getAlgorith();
        if ($J9->isEncrypted) {
            goto Do1;
        }
        $jv = $aH->getAlgorith();
        if (!($Ft !== $jv)) {
            goto wM;
        }
        echo sprintf("\x41\154\147\157\162\x69\164\x68\x6d\x20\155\151\x73\155\141\164\143\150\40\x62\145\164\167\145\x65\156\x20\x69\x6e\x70\165\x74\x20\x6b\x65\x79\40\x61\x6e\x64\40\x6b\145\x79\x20\151\x6e\x20\155\x65\x73\163\141\x67\145\x2e\x20" . "\113\145\171\40\x77\141\x73\72\40" . var_export($Ft, TRUE) . "\73\40\x6d\x65\163\x73\x61\147\145\x20\x77\141\163\72\40" . var_export($jv, TRUE));
        die;
        wM:
        $aH = $o1;
        goto q3;
        Do1:
        $c8 = $J9->getAlgorith();
        if (!in_array($c8, $WO, TRUE)) {
            goto js;
        }
        echo sprintf("\x41\154\x67\157\162\151\164\x68\x6d\40\x64\x69\x73\141\142\x6c\145\144\72\x20" . var_export($c8, TRUE));
        die;
        js:
        if (!($c8 === XMLSecurityKey::RSA_OAEP_MGF1P && $Ft === XMLSecurityKey::RSA_1_5)) {
            goto Qd;
        }
        $Ft = XMLSecurityKey::RSA_OAEP_MGF1P;
        Qd:
        if (!($Ft !== $c8)) {
            goto gt;
        }
        echo sprintf("\x41\154\x67\157\x72\x69\164\x68\x6d\x20\155\151\163\x6d\141\x74\x63\x68\x20\142\x65\164\x77\145\145\156\x20\151\156\160\x75\x74\x20\x6b\x65\171\x20\x61\x6e\144\40\x6b\145\171\x20\165\x73\x65\x64\40\x74\x6f\40\x65\156\143\x72\171\160\x74\x20" . "\40\x74\x68\x65\40\163\171\155\x6d\145\164\162\151\143\40\153\x65\x79\40\x66\x6f\x72\40\x74\x68\145\x20\155\145\x73\x73\141\x67\x65\56\x20\113\x65\171\40\167\141\x73\72\x20" . var_export($Ft, TRUE) . "\x3b\40\155\x65\x73\x73\x61\x67\145\x20\167\141\x73\72\40" . var_export($c8, TRUE));
        die;
        gt:
        $Gb = $J9->encryptedCtx;
        $J9->key = $o1->key;
        $dk = $aH->getSymmetricKeySize();
        if (!($dk === NULL)) {
            goto XG;
        }
        echo sprintf("\x55\x6e\x6b\156\157\167\x6e\40\153\x65\x79\40\163\x69\172\x65\40\x66\x6f\x72\40\145\x6e\143\162\x79\160\164\151\x6f\156\x20\x61\154\147\157\162\151\x74\150\155\72\40" . var_export($aH->type, TRUE));
        die;
        XG:
        try {
            $z6 = $Gb->decryptKey($J9);
            if (!(strlen($z6) != $dk)) {
                goto Tz;
            }
            echo sprintf("\125\156\x65\170\160\145\x63\164\145\144\40\153\x65\x79\40\x73\151\172\x65\x20\x28" . strlen($z6) * 8 . "\x62\x69\164\x73\51\40\146\157\162\40\145\156\143\x72\171\x70\x74\x69\157\156\x20\141\154\x67\157\162\x69\x74\x68\155\72\x20" . var_export($aH->type, TRUE));
            die;
            Tz:
        } catch (Exception $jC) {
            $ER = $Gb->getCipherValue();
            $iz = openssl_pkey_get_details($J9->key);
            $iz = sha1(serialize($iz), TRUE);
            $z6 = sha1($ER . $iz, TRUE);
            if (strlen($z6) > $dk) {
                goto kN;
            }
            if (strlen($z6) < $dk) {
                goto W2;
            }
            goto jI;
            kN:
            $z6 = substr($z6, 0, $dk);
            goto jI;
            W2:
            $z6 = str_pad($z6, $dk);
            jI:
        }
        $aH->loadkey($z6);
        q3:
        $CP = $aH->getAlgorith();
        if (!in_array($CP, $WO, TRUE)) {
            goto GF;
        }
        echo sprintf("\x41\x6c\x67\157\x72\151\164\x68\x6d\40\144\151\163\141\142\x6c\x65\x64\72\x20" . var_export($CP, TRUE));
        die;
        GF:
        $SP = $L0->decryptNode($aH, FALSE);
        $RH = "\74\x72\157\x6f\x74\40\x78\x6d\x6c\156\x73\x3a\163\x61\x6d\x6c\x3d\42\165\x72\x6e\x3a\157\141\163\151\163\72\x6e\x61\155\x65\x73\x3a\x74\143\x3a\x53\x41\x4d\114\x3a\62\x2e\x30\72\141\163\x73\x65\x72\164\x69\157\156\x22\x20" . "\170\155\154\x6e\x73\72\170\163\x69\75\x22\150\x74\x74\160\x3a\x2f\57\x77\167\167\x2e\x77\x33\x2e\x6f\162\x67\57\x32\x30\60\x31\x2f\x58\115\x4c\123\x63\150\x65\x6d\141\x2d\151\x6e\x73\164\141\156\x63\x65\x22\76" . $SP . "\x3c\57\x72\157\157\x74\x3e";
        $JL = new DOMDocument();
        if (@$JL->loadXML($RH)) {
            goto pT;
        }
        echo sprintf("\x46\x61\151\154\x65\144\x20\x74\x6f\x20\160\x61\162\163\x65\40\144\x65\x63\x72\171\160\164\x65\x64\x20\130\115\114\56\x20\x4d\141\x79\x62\145\x20\x74\x68\145\x20\167\162\x6f\x6e\147\x20\163\150\x61\162\x65\x64\x6b\x65\171\x20\x77\141\163\40\165\x73\145\x64\77");
        throw new Exception("\x46\141\151\x6c\x65\144\x20\x74\157\x20\160\141\162\x73\x65\x20\144\x65\x63\162\x79\160\x74\145\x64\40\130\115\x4c\x2e\40\x4d\x61\171\x62\145\x20\x74\x68\145\40\x77\162\x6f\156\x67\x20\x73\150\x61\x72\145\x64\x6b\145\171\x20\x77\x61\163\x20\x75\x73\x65\x64\x3f");
        pT:
        $VO = $JL->firstChild->firstChild;
        if (!($VO === NULL)) {
            goto OD;
        }
        echo sprintf("\x4d\151\163\x73\151\156\x67\x20\x65\x6e\143\x72\x79\x70\x74\145\x64\x20\x65\x6c\x65\x6d\x65\156\164\56");
        throw new Exception("\115\151\x73\163\151\156\x67\x20\145\x6e\143\162\x79\160\x74\145\x64\x20\145\154\x65\x6d\145\x6e\x74\x2e");
        OD:
        if ($VO instanceof DOMElement) {
            goto k4;
        }
        echo sprintf("\x44\x65\143\162\171\160\164\x65\144\x20\145\x6c\x65\155\145\156\x74\40\x77\x61\x73\40\x6e\157\164\x20\141\x63\164\x75\x61\x6c\154\171\x20\141\x20\104\117\115\x45\x6c\x65\x6d\145\x6e\164\x2e");
        k4:
        return $VO;
    }
    public static function decryptElement(DOMElement $IK, XMLSecurityKey $o1, array $WO = array(), XMLSecurityKey $ue = NULL)
    {
        try {
            echo "\x74\162\x79\x69\x6e\x67\40\160\x72\151\x6d\x61\162\x79";
            return self::doDecryptElement($IK, $o1, $WO);
        } catch (Exception $jC) {
            try {
                echo "\x74\162\171\151\156\x67\40\x73\x65\x63\x6f\156\144\x61\x72\171";
                return self::doDecryptElement($IK, $ue, $WO);
            } catch (Exception $N4) {
            }
            echo sprintf("\106\141\x69\x6c\x65\x64\40\164\x6f\x20\144\145\x63\162\171\x70\x74\40\x58\115\114\40\x65\154\145\155\145\x6e\x74\x2e");
            die;
        }
    }
    public static function parseBoolean(DOMElement $Bu, $Vy, $XR = null)
    {
        if ($Bu->hasAttribute($Vy)) {
            goto vY;
        }
        return $XR;
        vY:
        $zf = $Bu->getAttribute($Vy);
        switch (strtolower($zf)) {
            case "\60":
            case "\x66\x61\154\x73\145":
                return false;
            case "\61":
            case "\x74\162\x75\145":
                return true;
            default:
                throw new Exception("\111\156\x76\x61\x6c\x69\144\40\x76\x61\x6c\165\x65\40\x6f\x66\x20\142\x6f\x6f\x6c\145\141\x6e\40\141\x74\x74\x72\151\x62\x75\x74\x65\40" . var_export($Vy, true) . "\x3a\x20" . var_export($zf, true));
        }
        UP:
        g9:
    }
    public static function get_mapped_groups($Dm, $Sy)
    {
        $rK = array();
        if (empty($Sy)) {
            goto rq;
        }
        $r1 = array();
        $qK = 1;
        Cp:
        if (!($qK < 10)) {
            goto bj;
        }
        $Jf = $Dm->get("\x67\x72\x6f\165\160" . $qK . "\137\x6d\x61\x70");
        $r1[$qK] = explode("\x3b", $Jf);
        $qK++;
        goto Cp;
        bj:
        rq:
        foreach ($Sy as $Y6) {
            if (empty($Y6)) {
                goto xB;
            }
            $qK = 0;
            $lG = false;
            g5:
            if (!($qK < 9 && !$lG)) {
                goto re;
            }
            if (!(!empty($r1[$qK]) && in_array($Y6, $r1[$qK]))) {
                goto PO;
            }
            $rK[] = $Dm->get("\147\162\157\x75\x70" . $qK);
            $lG = true;
            PO:
            $qK++;
            goto g5;
            re:
            xB:
            J8:
        }
        pg:
        return array_unique($rK);
    }
    public static function encrypt($Ta, $z6)
    {
        $z6 = openssl_digest($z6, "\x73\150\x61\x32\65\x36");
        $yW = "\x41\105\x53\55\x31\x32\x38\55\x45\103\102";
        $tp = openssl_cipher_iv_length($yW);
        $qM = openssl_random_pseudo_bytes($tp);
        $iO = openssl_encrypt($Ta, $yW, $z6, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $qM);
        return base64_encode($qM . $iO);
    }
    public static function decrypt($Ta, $z6)
    {
        $Nf = base64_decode($Ta);
        $z6 = openssl_digest($z6, "\x73\150\x61\x32\65\66");
        $yW = "\x41\105\123\x2d\61\x32\x38\x2d\x45\x43\x42";
        $tp = openssl_cipher_iv_length($yW);
        $qM = substr($Nf, 0, $tp);
        $Ta = substr($Nf, $tp);
        $in = openssl_decrypt($Ta, $yW, $z6, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $qM);
        return $in;
    }
    public static function is_extension_installed($nA)
    {
        if (in_array($nA, get_loaded_extensions())) {
            goto CQ;
        }
        return false;
        goto kI;
        CQ:
        return true;
        kI:
    }
    public static function getEncryptionAlgorithm($yW)
    {
        switch ($yW) {
            case "\150\x74\164\160\x3a\57\x2f\167\167\167\56\x77\63\56\x6f\162\147\57\x32\60\x30\x31\57\60\64\57\170\x6d\x6c\145\156\143\x23\x74\x72\x69\160\154\x65\144\145\x73\55\x63\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto KD;
            case "\x68\164\164\160\72\57\x2f\x77\x77\167\56\167\x33\x2e\157\162\147\x2f\62\60\60\x31\57\x30\x34\x2f\170\155\154\x65\156\x63\x23\x61\x65\x73\x31\x32\x38\55\x63\x62\143":
                return XMLSecurityKey::AES128_CBC;
            case "\150\164\x74\160\72\57\x2f\167\x77\167\56\167\63\56\157\x72\x67\x2f\x32\60\60\x31\x2f\x30\64\57\x78\x6d\x6c\145\156\143\43\x61\145\163\x31\71\x32\55\x63\x62\143":
                return XMLSecurityKey::AES192_CBC;
                goto KD;
            case "\150\x74\164\160\x3a\57\x2f\x77\167\x77\x2e\167\x33\56\x6f\x72\147\x2f\62\x30\60\61\x2f\x30\64\x2f\x78\x6d\154\145\x6e\x63\43\141\x65\x73\62\x35\x36\55\x63\x62\x63":
                return XMLSecurityKey::AES256_CBC;
                goto KD;
            case "\x68\x74\x74\x70\x3a\57\57\167\x77\167\x2e\x77\63\56\x6f\x72\x67\x2f\x32\60\x30\61\57\x30\x34\x2f\170\155\154\145\x6e\x63\43\162\x73\x61\55\x31\137\x35":
                return XMLSecurityKey::RSA_1_5;
                goto KD;
            case "\150\164\x74\x70\72\57\x2f\167\x77\x77\x2e\167\x33\x2e\157\x72\147\x2f\x32\x30\x30\x31\57\60\x34\x2f\170\155\154\145\x6e\143\43\x72\x73\x61\55\x6f\x61\145\x70\x2d\x6d\x67\146\61\x70":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto KD;
            case "\x68\164\x74\x70\72\57\57\167\x77\x77\56\167\x33\x2e\x6f\x72\x67\57\x32\60\x30\x30\57\x30\71\x2f\170\x6d\x6c\144\163\151\147\43\x64\x73\x61\x2d\x73\150\x61\61":
                return XMLSecurityKey::DSA_SHA1;
                goto KD;
            case "\x68\164\164\x70\72\57\57\x77\x77\x77\56\167\63\x2e\157\x72\x67\57\x32\x30\x30\x30\57\60\71\x2f\x78\x6d\154\144\x73\x69\147\x23\162\163\x61\x2d\x73\150\141\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto KD;
            case "\150\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\63\56\x6f\162\147\57\x32\60\60\61\57\60\x34\x2f\x78\155\x6c\144\x73\x69\147\55\x6d\157\x72\x65\43\x72\163\141\55\163\x68\141\x32\65\66":
                return XMLSecurityKey::RSA_SHA256;
                goto KD;
            case "\x68\164\164\160\x3a\57\x2f\x77\x77\167\56\167\x33\x2e\157\162\x67\x2f\x32\x30\60\x31\x2f\60\64\57\170\x6d\x6c\144\x73\151\147\x2d\155\157\162\x65\x23\162\x73\141\55\x73\150\141\63\70\64":
                return XMLSecurityKey::RSA_SHA384;
                goto KD;
            case "\x68\164\164\x70\72\57\57\167\x77\167\56\x77\63\56\157\162\147\x2f\62\60\x30\61\57\60\64\57\x78\155\x6c\144\x73\151\147\55\155\x6f\162\145\43\x72\x73\x61\x2d\x73\150\x61\x35\x31\x32":
                return XMLSecurityKey::RSA_SHA512;
                goto KD;
            default:
                echo sprintf("\111\156\x76\x61\x6c\x69\144\40\x45\156\x63\162\171\160\x74\151\x6f\156\x20\x4d\145\164\150\x6f\144\x3a\x20" . $yW);
                die;
                goto KD;
        }
        QY:
        KD:
    }
    public static function sanitize_certificate($kq)
    {
        $kq = preg_replace("\x2f\133\15\12\x5d\x2b\x2f", '', $kq);
        $kq = str_replace("\x2d", '', $kq);
        $kq = str_replace("\x42\x45\107\111\x4e\x20\x43\x45\x52\124\111\x46\x49\103\101\124\105", '', $kq);
        $kq = str_replace("\105\x4e\104\40\x43\105\122\x54\x49\106\x49\103\x41\124\x45", '', $kq);
        $kq = str_replace("\x20", '', $kq);
        $kq = chunk_split($kq, 64, "\xd\xa");
        $kq = "\x2d\55\x2d\x2d\55\x42\105\107\x49\116\x20\103\105\122\124\111\106\x49\103\x41\x54\x45\x2d\x2d\x2d\55\x2d\15\12" . $kq . "\55\x2d\55\55\x2d\105\x4e\104\40\103\x45\x52\x54\111\106\111\x43\101\x54\x45\55\55\x2d\x2d\55";
        return $kq;
    }
    public static function sanitize_private_key($Dr)
    {
        $Dr = preg_replace("\x2f\x5b\15\xa\135\53\x2f", '', $Dr);
        $Dr = str_replace("\55", '', $Dr);
        $Dr = str_replace("\x42\x45\x47\111\x4e\40\120\122\111\x56\x41\x54\105\x20\113\x45\131", '', $Dr);
        $Dr = str_replace("\x45\116\104\x20\x50\122\111\126\101\x54\x45\x20\113\105\x59", '', $Dr);
        $Dr = str_replace("\40", '', $Dr);
        $Dr = chunk_split($Dr, 64, "\xd\xa");
        $Dr = "\x2d\x2d\55\55\x2d\x42\105\x47\x49\116\x20\120\x52\x49\126\x41\x54\105\40\x4b\x45\x59\55\x2d\55\55\55\15\12" . $Dr . "\55\x2d\55\x2d\x2d\105\116\x44\40\120\122\111\126\101\124\x45\x20\x4b\x45\131\x2d\55\x2d\55\x2d";
        return $Dr;
    }
    public static function desanitize_certificate($kq)
    {
        $kq = preg_replace("\x2f\x5b\xd\xa\x5d\53\x2f", '', $kq);
        $kq = str_replace("\x2d\55\x2d\x2d\x2d\x42\105\x47\x49\116\x20\x43\x45\122\x54\111\x46\x49\103\101\x54\105\x2d\x2d\x2d\55\x2d", '', $kq);
        $kq = str_replace("\x2d\x2d\55\55\x2d\x45\x4e\104\x20\103\x45\x52\x54\111\106\111\103\101\x54\105\x2d\55\55\x2d\55", '', $kq);
        $kq = str_replace("\x20", '', $kq);
        return $kq;
    }
    public static function send_mail($tZ, $ME)
    {
        $n0 = MiniorangeSAMLIdpConstants::BASE_URL;
        $nk = MiniorangeSAMLIdpConstants::BASE_URL . "\57\x6d\157\141\x73\57\141\x70\151\57\156\x6f\x74\x69\146\x79\57\163\x65\156\x64";
        $MX = curl_init($nk);
        $Ue = variable_get("\x6d\x69\156\x69\157\x72\141\x6e\x67\x65\137\163\141\155\x6c\x5f\151\144\160\137\x63\165\163\x74\157\x6d\x65\x72\137\151\x64");
        $iW = variable_get("\x6d\x69\156\x69\157\162\141\x6e\147\145\137\x73\x61\155\x6c\137\x69\144\160\137\143\x75\x73\x74\157\155\x65\x72\137\141\160\x69\137\x6b\145\x79");
        $ND = variable_get("\x6d\x69\156\151\x6f\162\x61\156\x67\145\137\x73\x61\x6d\154\x5f\x69\144\x70\x5f\143\x75\x73\164\x6f\155\145\x72\137\x61\x64\155\x69\x6e\137\145\155\x61\x69\154", NULL);
        $rr = self::get_timestamp();
        $NR = $Ue . $rr . $iW;
        $ow = hash("\163\x68\x61\65\61\62", $NR);
        $E6 = "\x43\165\163\164\x6f\x6d\x65\162\x2d\113\145\x79\x3a\x20" . $Ue;
        $zV = "\124\x69\x6d\145\x73\x74\141\x6d\x70\72\x20" . $rr;
        $z0 = "\101\165\164\150\x6f\162\151\x7a\141\x74\x69\157\156\x3a\40" . $ow;
        $TB = $ND;
        $kU = "\x69\x6e\x66\157\x40\170\x65\x63\x75\162\151\x66\x79\x2e\x63\x6f\155";
        $lw = array("\x63\165\x73\164\157\x6d\x65\x72\113\145\x79" => $Ue, "\163\145\x6e\144\105\155\x61\x69\x6c" => true, "\x65\x6d\141\x69\x6c" => array("\x63\x75\x73\164\157\x6d\145\162\113\145\171" => $Ue, "\x66\162\157\155\x45\x6d\141\151\154" => $kU, "\142\x63\143\105\x6d\x61\151\154" => $kU, "\146\162\x6f\x6d\116\x61\x6d\145" => "\x6d\x69\156\x69\117\162\x61\156\x67\x65", "\164\157\105\x6d\x61\x69\x6c" => $TB, "\x74\157\116\141\155\145" => $TB, "\x73\x75\x62\x6a\x65\143\164" => $tZ, "\143\157\156\164\x65\156\x74" => $ME));
        $CW = json_encode($lw);
        curl_setopt($MX, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($MX, CURLOPT_ENCODING, '');
        curl_setopt($MX, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($MX, CURLOPT_AUTOREFERER, true);
        curl_setopt($MX, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($MX, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($MX, CURLOPT_MAXREDIRS, 10);
        curl_setopt($MX, CURLOPT_HTTPHEADER, array("\x43\x6f\156\x74\145\156\164\55\x54\x79\x70\145\x3a\40\141\160\160\x6c\151\143\141\164\x69\157\x6e\57\152\x73\x6f\156", $E6, $zV, $z0));
        curl_setopt($MX, CURLOPT_POST, true);
        curl_setopt($MX, CURLOPT_POSTFIELDS, $CW);
        $ME = curl_exec($MX);
        if (!curl_errno($MX)) {
            goto Dv;
        }
        return json_encode(array("\163\164\x61\164\x75\x73" => "\105\122\x52\117\x52", "\163\164\x61\x74\x75\x73\115\145\163\163\x61\147\145" => curl_error($MX)));
        Dv:
        curl_close($MX);
        return json_encode(array("\x73\x74\x61\164\165\163" => "\x53\125\103\x43\105\x53\123", "\x73\x74\141\x74\x75\163\x4d\145\x73\163\141\x67\x65" => "\x53\x55\103\x43\105\x53\123"));
    }
    public static function peruser($Wx, $jS)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\110\145\x6c\x6c\x6f\x2c\74\142\162\40\57\x3e\x3c\142\162\40\57\x3e\131\x6f\x75\40\x68\x61\166\x65\x20\160\x75\162\x63\150\x61\163\x65\144\40\x6c\x69\x63\x65\156\163\x65\x20\x66\157\162\x20\x44\x72\x75\x70\x61\x6c\x20\x53\x41\x4d\x4c\x20\111\104\120\x20\x53\151\156\147\x6c\145\40\x53\151\147\156\55\117\156\40\115\x6f\x64\x75\x6c\145\40\x66\x6f\x72\x20\x3c\x62\76\40" . $jS . "\40\165\x73\x65\x72\x73\74\57\142\76\56\12\x20\40\x20\40\40\x20\x20\x20\x20\40\x20\x20\101\163\40\156\x75\x6d\x62\145\x72\x20\157\x66\40\x75\163\x65\x72\163\x20\157\156\x20\171\157\x75\162\x20\x73\151\x74\145\40\150\141\166\145\40\x67\x72\157\x77\x6e\x20\164\x6f\40\155\x6f\162\145\x20\164\150\x61\156\40" . $Wx . "\40\x70\x65\x72\x63\x65\156\164\x20\x6f\146\40" . $jS . "\x20\x75\163\145\x72\163\x20\x6e\157\167\54\40\171\x6f\165\x20\163\x68\157\165\154\144\40\165\160\x67\x72\x61\x64\145\40\171\157\165\162\x20\x6c\151\x63\x65\156\163\x65\x20\146\x6f\162\x20\155\151\156\x69\x4f\x72\141\156\147\x65\x20\155\157\x64\x75\154\145\x20\x6f\156\40\x79\x6f\x75\x72\40\x77\x65\x62\163\x69\x74\145\x3a\40\74\142\x3e" . $U4 . "\74\x2f\x62\x3e\56\xa\40\40\40\x20\40\x20\x20\40\x20\40\x20\x20\x3c\x62\162\x20\57\76\74\x62\162\x20\57\76\40\x43\154\151\x63\x6b\40\x3c\141\40\x68\x72\145\x66\75\x27\150\164\x74\x70\163\72\57\57\x6c\x6f\147\151\x6e\56\x78\145\143\x75\x72\151\146\171\x2e\143\157\x6d\x2f\x6d\x6f\x61\163\x2f\x6c\157\x67\x69\x6e\77\162\145\144\x69\x72\145\x63\164\125\x72\x6c\75\150\x74\164\x70\163\x3a\x2f\57\154\x6f\x67\x69\x6e\x2e\x78\145\143\x75\162\151\x66\171\x2e\143\x6f\155\57\x6d\x6f\141\163\x2f\x69\x6e\151\x74\151\141\154\151\x7a\x65\x70\141\x79\155\x65\x6e\x74\46\162\x65\x71\x75\x65\163\x74\x4f\162\x69\147\x69\x6e\75\62\146\141\137\141\144\144\x5f\x75\x73\x65\x72\x5f\160\154\x61\156\x27\76\x68\x65\x72\145\74\57\x61\76\x20\164\x6f\40\x75\x70\147\x72\x61\144\145\x20\x74\x68\145\40\154\x69\143\145\156\163\x65\x2e\x3c\142\x72\40\57\x3e\xa\40\x20\40\x20\40\40\x20\x20\x20\x20\40\x20\74\x62\x72\40\57\76\x54\150\x61\x6e\x6b\x73\x2c\74\x62\162\40\x2f\76\155\151\x6e\x69\x4f\x72\x61\x6e\147\x65\x20\124\x65\141\x6d";
        $tZ = "\x4c\x69\x63\x65\156\x73\x65\x20\114\x69\155\151\164\x20\122\x65\x61\143\x68\145\144\40" . $Wx . "\x20\x70\x65\x72\143\145\x6e\x74\40\x4f\146\x20\x41\x6c\154\x6f\167\x65\144\40\x4e\x6f\x20\x4f\146\40\125\x73\x65\x72\163\40\55\x20\104\x72\x75\160\x61\154\x2d\x37\x20\x49\x44\120\x20\123\x41\x4d\114\40\123\151\156\x67\154\x65\x20\123\x69\x67\156\x2d\x4f\156\x20\x7c\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function tenuser($jS, $oA)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\x48\x65\x6c\x6c\157\x2c\74\142\162\x20\x2f\x3e\74\142\162\x20\57\x3e\131\x6f\165\40\x68\141\166\x65\40\160\x75\x72\x63\150\141\x73\x65\144\40\x6c\x69\143\x65\156\x73\x65\x20\x66\157\162\40\x44\x72\165\160\x61\x6c\x20\123\101\x4d\114\40\111\104\x50\40\123\151\x6e\147\x6c\145\x20\x53\151\x67\x6e\55\117\x6e\x20\x4d\157\x64\x75\154\x65\x20\146\x6f\x72\x20\x3c\x62\x3e\x20" . $jS . "\x75\x73\145\162\x73\x3c\x2f\142\x3e\56\12\x20\x20\40\40\40\40\x20\40\x20\40\40\40\x41\x73\x20\x6e\x75\x6d\142\x65\162\x20\x6f\x66\x20\165\x73\145\162\x73\x20\x6f\156\40\x79\x6f\x75\162\40\163\x69\x74\x65\x20\x68\141\166\x65\40\x67\x72\157\167\156\x20\164\157\40" . $oA . "\x20\x75\x73\145\162\163\x20\x6e\157\x77\x2c\x20\x79\x6f\165\x20\x73\150\157\x75\x6c\x64\x20\x75\160\147\162\x61\144\145\40\171\157\165\x72\40\x6c\x69\143\x65\156\x73\x65\40\146\157\x72\40\x6d\x69\156\x69\x4f\162\141\156\x67\145\40\155\x6f\x64\165\x6c\x65\x20\157\x6e\x20\x79\157\x75\x72\40\x77\x65\x62\x73\151\164\x65\x3a\x20\74\142\76" . $U4 . "\x3c\57\142\76\56\12\40\40\40\x20\x20\x20\x20\x20\x20\x20\40\40\x3c\142\x72\x2f\76\74\142\x72\40\57\76\40\103\x6c\151\x63\x6b\40\x3c\x61\x20\150\162\x65\x66\75\x27\150\164\x74\160\163\72\x2f\x2f\154\157\x67\151\156\56\170\145\x63\x75\x72\x69\146\x79\x2e\143\x6f\x6d\x2f\155\x6f\141\163\57\154\x6f\147\151\x6e\77\x72\145\x64\151\162\x65\143\x74\125\x72\154\75\150\x74\x74\x70\x73\72\57\57\154\157\147\151\156\56\x78\x65\x63\x75\x72\151\x66\x79\x2e\143\x6f\x6d\57\155\x6f\141\163\57\x69\156\x69\x74\151\141\x6c\x69\172\x65\x70\x61\171\x6d\145\156\164\x26\x72\145\161\165\145\x73\x74\117\x72\x69\x67\151\156\x3d\x32\146\x61\137\x61\x64\x64\137\x75\163\x65\x72\137\x70\x6c\x61\x6e\47\x3e\x68\x65\x72\x65\x3c\x2f\141\x3e\x20\164\x6f\40\165\160\x67\162\141\x64\x65\x20\x74\x68\145\x20\x6c\151\x63\x65\x6e\163\145\56\x3c\x62\162\x20\x2f\76\12\x20\x20\40\x20\x20\x20\40\x20\x20\x20\x20\x20\74\x62\162\40\57\76\x54\x68\141\156\153\x73\54\x3c\x62\162\40\57\x3e\155\x69\x6e\151\117\162\x61\x6e\147\x65\40\x54\x65\141\155";
        $tZ = "\x54\145\156\x20\165\163\145\162\x73\x20\154\x65\146\x74\x20\x74\x6f\40\x72\x65\141\143\x68\x20\114\x69\155\x69\164\40\x4f\x66\x20\101\154\x6c\x6f\x77\145\x64\40\x4e\157\x20\x4f\x66\x20\125\x73\145\x72\163\x20\55\40\104\x72\x75\160\x61\x6c\55\67\40\x49\104\120\x20\x53\101\115\114\40\x53\151\156\x67\154\x65\x20\x53\151\x67\156\x2d\x4f\156\x20\x7c\40" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function limitreach($jS, $oA)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\x48\x65\x6c\x6c\157\x2c\74\x62\162\x20\57\76\74\142\162\40\57\x3e\131\157\165\x20\150\141\166\145\x20\160\165\x72\x63\x68\x61\x73\145\144\40\154\151\x63\145\x6e\163\145\40\146\x6f\x72\x20\104\x72\165\160\x61\x6c\x20\123\x41\115\114\x20\111\x44\120\x20\123\151\156\147\154\x65\x20\123\x69\x67\156\x2d\x4f\156\40\x4d\x6f\144\x75\154\x65\40\146\x6f\x72\40\74\142\x3e\40" . $jS . "\40\x75\x73\x65\x72\163\x3c\x2f\142\76\x2e\40\xa\x20\40\40\x20\40\40\x20\x20\40\x20\40\x20\x41\163\40\x6e\x75\x6d\142\x65\162\x20\x6f\146\x20\165\163\x65\x72\163\x20\x6f\x6e\40\171\x6f\x75\162\x20\x73\x69\x74\145\x20\x68\141\163\40\162\145\141\143\x68\x65\x64" . $oA . "\x20\x75\163\145\162\163\40\156\157\x77\x2c\x20\171\x6f\x75\x20\163\150\157\x75\154\x64\x20\x75\x70\147\162\x61\x64\145\40\x79\157\165\162\40\154\x69\x63\145\x6e\x73\x65\40\146\157\162\x20\155\x69\x6e\151\x4f\x72\x61\156\x67\x65\40\155\x6f\x64\165\154\145\x20\x6f\156\40\171\x6f\165\x72\x20\167\145\142\163\x69\164\x65\72\x20\74\142\x3e" . $U4 . "\74\57\x62\76\x2e\74\142\162\57\x3e\111\146\x20\x79\157\165\x20\x66\x61\x69\154\x20\x74\x6f\40\x75\x70\147\x72\x61\144\x65\40\x74\x68\145\40\x6c\151\x63\145\156\x73\x65\40\x77\x69\x74\150\x69\156\40\x6e\145\170\x74\x20\x33\x30\40\144\x61\x79\x73\54\40\164\150\x65\x20\x6e\x65\167\40\165\163\145\162\163\40\x62\x65\171\157\x6e\144\40\164\x68\145\x20\x6c\151\x63\145\x6e\x73\145\40\154\151\155\151\x74\40\x77\x6f\x75\x6c\x64\x20\156\x6f\x74\x20\x62\145\40\141\142\x6c\x65\x20\x74\157\40\123\x69\x6e\147\154\x65\40\123\x69\147\x6e\55\117\x6e\56\12\x20\40\40\40\x20\40\40\40\x20\40\40\40\74\x62\162\40\x2f\x3e\74\x62\162\x20\57\x3e\x20\x43\154\x69\143\x6b\40\x3c\x61\40\x68\x72\145\x66\75\47\150\164\164\x70\163\x3a\57\x2f\154\157\x67\x69\x6e\x2e\x78\x65\143\x75\x72\x69\x66\x79\56\143\x6f\155\x2f\155\157\x61\163\x2f\154\157\x67\x69\x6e\x3f\x72\145\x64\x69\x72\145\x63\164\x55\162\x6c\75\150\x74\x74\160\x73\x3a\57\x2f\154\157\x67\151\x6e\56\x78\x65\143\x75\162\x69\146\x79\56\143\157\x6d\x2f\155\x6f\x61\163\x2f\151\156\151\164\151\x61\154\x69\x7a\145\160\141\171\x6d\145\x6e\164\x26\162\x65\x71\x75\x65\x73\x74\117\x72\151\147\151\156\x3d\x32\146\x61\137\x61\x64\144\137\165\163\x65\x72\x5f\160\x6c\x61\x6e\x27\76\150\x65\x72\145\74\x2f\141\76\40\x74\157\40\165\x70\147\x72\141\144\145\40\164\150\145\x20\154\x69\143\x65\156\x73\145\x2e\74\142\162\x20\57\x3e\xa\x20\x20\40\x20\x20\x20\40\x20\40\x20\x20\40\x3c\x62\x72\40\57\x3e\x54\150\141\x6e\153\x73\x2c\74\142\x72\40\x2f\76\155\x69\156\151\117\162\141\x6e\147\145\x20\x54\145\x61\x6d";
        $tZ = "\122\145\x61\x63\x68\145\144\40\x4c\x69\x63\145\156\163\145\x20\x4c\151\x6d\151\x74\x20\106\x6f\x72\x20\116\x6f\40\117\x66\40\x55\163\145\162\x73\40\55\x20\x44\162\165\160\x61\x6c\55\67\40\111\x44\120\x20\x53\101\115\114\x20\x53\151\x6e\x67\154\x65\x20\123\151\147\x6e\55\x4f\x6e\x20\x7c\40" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function limitmid($jS)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\110\x65\x6c\154\157\x2c\x3c\142\162\x20\57\76\74\142\x72\x20\57\76\x59\157\165\x20\150\x61\166\x65\40\160\165\162\143\x68\x61\163\145\x64\40\x6c\151\x63\145\156\x73\x65\x20\146\x6f\162\x20\104\x72\x75\x70\141\x6c\x20\123\101\115\114\40\x49\104\120\40\x53\151\x6e\147\154\x65\x20\123\151\147\x6e\x2d\x4f\156\x20\x4d\x6f\144\x75\154\145\40\146\x6f\x72\x20\x3c\142\x3e" . $jS . "\x20\165\x73\145\162\x73\74\57\x62\76\x2e\x20\xa\40\40\x20\40\40\40\x20\40\x20\x20\x20\40\x54\x68\x65\x20\156\165\x6d\142\x65\x72\40\157\x66\x20\165\163\145\162\x73\x20\157\156\40\171\157\165\162\x20\163\151\164\x65\x20\x68\x61\x73\40\x65\x78\x63\x65\145\x64\145\144\x20\x74\x68\145\x20\x6c\x69\x63\145\156\x73\x65\40\x6c\151\155\x69\x74\x20\61\x35\x20\144\141\171\x73\40\141\x67\x6f\x2e\x20\x59\x6f\x75\x20\x73\150\x6f\x75\x6c\x64\x20\165\160\x67\162\x61\144\x65\x20\x79\157\x75\162\40\x6c\151\x63\145\x6e\x73\145\x20\146\157\162\40\164\x68\x65\40\155\x6f\x64\x75\154\145\40\x6f\x6e\x20\x79\157\165\162\40\x77\x65\x62\x73\x69\x74\145\x3a\x20\x3c\142\76\x20" . $U4 . "\x3c\x2f\x62\x3e\56\12\x20\x20\x20\x20\40\x20\x20\40\x20\x20\x20\40\x3c\142\x72\x2f\x3e\111\x66\40\x79\157\165\x20\146\x61\151\154\x20\x74\157\x20\x75\160\x67\x72\x61\x64\x65\x20\164\x68\x65\40\154\151\x63\145\x6e\x73\x65\x20\167\151\x74\x68\151\156\x20\x6e\145\x78\x74\x20\61\65\40\144\x61\x79\163\54\40\x74\x68\145\40\x6e\145\167\x20\x75\163\145\x72\x73\x20\x62\x65\171\157\x6e\144\x20\164\x68\145\x20\154\151\x63\x65\x6e\163\145\x20\x6c\x69\x6d\151\164\40\167\x6f\x75\x6c\144\x20\156\x6f\164\40\142\x65\40\141\142\x6c\x65\x20\164\x6f\40\123\151\x6e\x67\x6c\x65\40\123\x69\147\156\55\117\156\x2e\74\x62\x72\40\57\76\x20\12\40\x20\x20\40\x20\x20\40\40\40\x20\40\40\74\x62\x72\40\x2f\76\x20\103\154\x69\x63\x6b\x20\74\141\x20\150\162\x65\x66\x3d\x27\x68\x74\x74\x70\x73\72\57\x2f\154\x6f\x67\x69\156\56\170\145\143\x75\x72\151\146\x79\56\x63\157\x6d\57\x6d\157\141\x73\57\x6c\x6f\147\151\156\x3f\162\145\x64\x69\162\x65\143\164\x55\162\154\x3d\x68\x74\x74\160\163\72\57\57\154\x6f\x67\151\x6e\56\170\145\x63\165\x72\151\146\171\x2e\143\157\x6d\x2f\155\x6f\x61\x73\x2f\151\156\151\164\151\141\154\151\172\x65\x70\x61\171\x6d\x65\156\x74\46\x72\x65\161\x75\145\163\164\x4f\x72\151\x67\x69\x6e\x3d\62\146\141\137\141\x64\144\137\165\163\x65\x72\x5f\x70\154\141\x6e\x27\x3e\150\x65\x72\x65\74\57\x61\76\40\x74\157\x20\x75\160\147\x72\x61\144\x65\40\164\150\x65\40\154\x69\143\x65\x6e\x73\145\x2e\74\142\162\x20\x2f\76\12\40\40\x20\x20\40\x20\x20\40\40\40\40\40\74\x62\162\x20\57\x3e\124\x68\141\156\153\163\x2c\74\x62\162\x20\57\76\x6d\151\x6e\x69\x4f\x72\141\x6e\x67\145\40\124\x65\141\155";
        $tZ = "\105\170\x63\x65\145\x64\x65\x64\x20\x4c\151\143\x65\x6e\163\145\x20\x4c\x69\155\x69\164\x20\x46\x6f\x72\40\116\x6f\40\117\x66\40\x55\x73\x65\x72\163\x20\55\40\104\x72\165\160\x61\x6c\55\67\x20\111\104\x50\40\123\x41\115\x4c\40\123\151\x6e\x67\x6c\x65\40\x53\x69\147\156\55\117\x6e\x20\174\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function limitend($jS)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\x48\x65\154\154\157\54\x3c\x62\162\x20\x2f\x3e\x3c\x62\162\x20\57\76\x59\x6f\165\40\150\141\166\145\40\160\x75\162\x63\x68\x61\163\145\x64\40\x6c\151\143\x65\x6e\163\x65\x20\x66\x6f\162\40\x44\x72\x75\x70\141\154\x20\x53\x41\115\x4c\40\111\104\x50\40\x53\x69\x6e\x67\x6c\x65\40\123\x69\147\x6e\55\x4f\156\x20\x4d\x6f\144\165\154\145\x20\x66\157\x72\x20\74\x62\x3e" . $jS . "\165\x73\x65\x72\x73\74\x2f\142\76\56\40\12\40\x20\40\x20\x20\40\x20\x20\x20\x20\40\x20\x54\x68\x65\x20\156\165\155\142\x65\x72\x20\157\146\40\165\x73\x65\x72\x73\x20\157\x6e\x20\x79\x6f\165\162\40\163\151\x74\145\40\150\x61\x73\40\x65\x78\143\x65\145\x64\145\144\x20\164\x68\x65\x20\154\151\x63\x65\156\x73\145\40\x6c\151\x6d\151\164\x20\63\x30\40\x64\x61\x79\x73\40\141\x67\x6f\x2e\40\131\157\x75\x20\150\x61\x76\145\40\156\157\x74\40\x75\160\x67\x72\141\144\x65\144\x20\x79\x6f\165\162\x20\154\151\x63\x65\156\163\145\x20\x69\x6e\x20\x74\x68\145\x20\x33\x30\40\x64\x61\x79\x73\40\x67\x72\141\x63\x65\40\160\145\x72\151\x6f\x64\40\160\x72\x6f\166\151\x64\145\144\x20\x74\157\40\171\157\165\56\x20\124\150\145\x20\x6e\145\167\x20\x75\163\145\162\x73\40\x62\x65\x79\157\x6e\144\x20\164\150\145\40\x6c\x69\143\x65\156\163\x65\x20\154\x69\x6d\151\164\40\167\157\x75\x6c\144\40\x6e\x6f\164\40\x62\x65\40\141\142\x6c\145\40\x74\x6f\x20\123\151\156\x67\x6c\145\x20\123\x69\147\156\55\x4f\156\40\x6e\157\167\56\xa\x20\x20\40\x20\40\x20\x20\40\40\40\40\40\74\142\x72\40\57\x3e\74\x62\x72\40\57\76\40\x43\x6c\151\x63\x6b\40\74\x61\40\x68\x72\x65\x66\x3d\47\150\164\164\160\x73\72\x2f\x2f\154\157\147\151\x6e\x2e\x78\x65\x63\x75\162\x69\x66\171\56\x63\x6f\x6d\57\155\x6f\141\163\57\154\157\147\151\x6e\77\162\x65\144\151\x72\145\143\x74\125\x72\154\75\x68\164\x74\x70\x73\72\57\57\154\157\x67\151\156\x2e\170\145\143\165\x72\151\146\171\56\x63\x6f\155\57\155\x6f\x61\x73\57\x69\156\151\x74\x69\x61\x6c\x69\x7a\x65\x70\x61\x79\155\145\x6e\164\x26\162\145\x71\x75\145\x73\164\x4f\x72\151\x67\151\156\75\62\x66\141\x5f\141\x64\144\x5f\x75\163\x65\162\x5f\x70\154\x61\x6e\x27\x3e\150\145\162\x65\x3c\x2f\141\x3e\40\x74\157\40\x75\160\x67\x72\x61\x64\x65\40\164\x68\x65\x20\x6c\x69\x63\x65\x6e\163\x65\x2e\74\x62\162\40\57\x3e\12\40\x20\40\40\40\x20\40\40\x20\x20\40\x20\74\142\x72\40\57\x3e\124\150\x61\x6e\153\163\54\74\142\162\x20\x2f\76\155\151\x6e\151\117\162\x61\x6e\147\x65\x20\x54\x65\141\155";
        $tZ = "\x45\170\x63\x65\x65\144\x65\x64\40\x4c\x69\143\145\x6e\x73\145\x20\x4c\x69\x6d\151\x74\x20\106\157\x72\x20\x4e\x6f\40\x4f\x66\40\x55\163\145\x72\163\x20\55\x20\104\x72\x75\x70\141\x6c\x2d\x37\40\111\x44\120\40\x53\x41\x4d\114\40\123\151\x6e\147\154\145\x20\123\x69\x67\156\55\117\x6e\40\174\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function dayleft($JY)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\x48\x65\x6c\x6c\x6f\54\74\x62\162\x20\x2f\76\74\x62\162\x20\57\76\x54\150\x69\163\x20\145\x6d\141\151\154\x20\151\x73\40\x74\157\x20\x6e\157\x74\151\x66\171\x20\171\157\165\40\164\150\141\x74\40\171\157\x75\x72\x20\x31\x20\171\x65\141\162\40\154\x69\x63\145\156\163\x65\40\x66\x6f\162\40\104\x72\165\160\141\x6c\x20\x53\101\x4d\x4c\x20\x49\104\120\40\x53\151\156\x67\x6c\x65\40\x53\151\x67\156\x2d\117\156\x20\x4d\x6f\x64\x75\x6c\x65\40\167\x69\x6c\154\40\x65\170\160\x69\x72\145\x20\151\156\x20\74\x62\76" . $JY . "\144\x61\x79\x73\x3c\57\142\76\x2e\x20\xa\40\x20\40\x20\40\40\x20\40\40\40\40\40\x54\x68\x65\40\155\x6f\x64\x75\154\x65\x20\x77\x69\x6c\x6c\40\163\164\157\160\40\167\x6f\x72\153\x69\156\x67\40\x61\146\164\x65\162\40\164\150\x65\40\154\x69\x63\x65\x6e\x73\145\x64\x20\160\x65\162\151\157\x64\40\145\170\x70\151\x72\145\x73\x2e\x3c\x62\162\40\57\76\x3c\x62\x72\x20\x2f\x3e\131\x6f\165\40\167\x69\154\154\x20\x6e\x65\145\144\x20\164\157\x20\x72\145\156\145\167\x20\x79\x6f\165\162\x20\154\151\143\145\156\163\x65\40\164\157\x20\x63\x6f\156\164\x69\x6e\165\145\x20\x75\163\151\156\147\40\x74\150\x65\x20\x6d\157\x64\x75\154\145\x20\x6f\x6e\x20\x79\x6f\165\162\40\x77\x65\142\x73\151\x74\x65\72\x20\x3c\x62\76" . $U4 . "\x3c\x2f\142\x3e\56\12\40\x20\x20\40\x20\x20\x20\x20\40\40\x20\40\74\142\162\x20\x2f\76\74\x62\x72\40\57\x3e\x43\x6c\x69\x63\153\x20\74\x61\x20\150\162\x65\x66\75\x27\x68\x74\x74\160\x73\72\57\x2f\154\x6f\147\x69\x6e\x2e\170\145\143\165\x72\151\x66\x79\x2e\143\157\155\x2f\x6d\157\141\163\57\x6c\x6f\x67\151\156\77\x72\145\x64\151\x72\145\143\164\125\162\x6c\x3d\x68\164\x74\x70\x73\72\57\x2f\x6c\157\147\x69\156\x2e\x78\145\143\165\162\151\x66\171\x2e\x63\x6f\x6d\57\x6d\157\141\x73\x2f\x69\156\x69\164\x69\141\x6c\151\172\145\x70\141\171\x6d\x65\156\x74\x26\162\x65\x71\x75\x65\x73\x74\117\x72\151\147\x69\x6e\75\162\x65\x6e\145\x77\137\165\x73\x65\x72\137\x6c\x69\x63\x65\x6e\163\145\x27\x3e\150\145\x72\145\x3c\x2f\141\x3e\40\164\157\40\162\145\x6e\x65\x77\40\x74\150\x65\x20\154\151\x63\x65\156\163\145\x2e\74\142\x72\x20\57\76\12\x20\x20\x20\40\40\x20\x20\40\x20\40\40\x20\74\142\162\40\x2f\76\124\150\141\x6e\x6b\163\54\x3c\142\162\40\x2f\x3e\155\151\156\x69\117\162\141\x6e\147\x65\x20\124\145\141\x6d";
        $tZ = "\x4c\151\x63\x65\156\163\145\40\x45\x78\160\x69\x72\x79\x20\55\x20\104\x72\x75\x70\141\x6c\55\x37\40\x49\x44\x50\40\x53\x41\x4d\114\40\123\151\156\147\x6c\145\x20\123\151\x67\x6e\55\x4f\156\x20\115\x6f\x64\165\x6c\x65\x20\x7c\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function limit($qQ)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\110\145\154\154\157\x2c\74\x62\x72\40\57\x3e\74\142\162\40\57\76\x59\x6f\x75\x72\x20\x31\x20\171\145\141\x72\40\154\x69\x63\x65\156\x73\145\x20\x66\157\x72\40\x44\162\165\x70\141\154\40\111\x44\x50\40\123\x41\115\114\40\123\x69\x6e\147\x6c\145\x20\123\x69\147\x6e\55\x4f\x6e\40\115\x6f\144\x75\154\145\40\x68\141\x73\40\x65\170\160\x69\x72\x65\x64\40\x6f\x6e\x20\74\142\x3e" . $qQ . "\x3c\x2f\142\x3e\56\x20\x49\x66\40\171\x6f\165\40\144\x6f\x20\x6e\x6f\164\x20\162\x65\x6e\x65\x77\x20\171\x6f\x75\x72\40\154\x69\143\145\x6e\163\145\x20\x73\x6f\x6f\x6e\x2e\x20\124\x68\145\40\x6d\x6f\144\x75\154\145\x20\167\x69\x6c\x6c\x20\142\145\40\x64\x65\x61\x63\164\x69\166\141\164\x65\144\x20\x6f\x6e\40\171\157\x75\162\40\167\x65\142\x73\x69\164\145\40\74\x62\40\x2f\x3e" . $U4 . "\74\57\x62\x3e\56\xa\x20\40\x20\40\x20\40\x20\x20\x20\40\40\x20\x3c\142\162\40\x2f\x3e\x3c\142\162\x20\x2f\x3e\x43\154\151\x63\x6b\x20\74\141\40\x68\x72\145\146\75\x27\150\x74\164\160\163\72\x2f\57\x6c\157\147\x69\156\56\x78\x65\143\165\x72\x69\x66\x79\x2e\143\157\x6d\x2f\155\157\x61\163\57\154\157\147\151\156\x3f\x72\145\x64\151\x72\x65\143\x74\125\x72\154\75\x68\x74\164\160\163\72\x2f\57\154\x6f\x67\x69\156\56\170\145\143\165\x72\x69\x66\x79\x2e\x63\157\155\x2f\x6d\x6f\x61\163\57\151\x6e\151\x74\x69\141\154\151\172\x65\x70\141\171\x6d\x65\x6e\x74\46\x72\145\161\x75\145\x73\x74\117\x72\151\147\x69\156\x3d\162\145\x6e\x65\x77\137\165\163\145\x72\x5f\x6c\x69\143\x65\156\163\145\x27\x3e\150\145\x72\x65\74\57\x61\76\x20\x74\x6f\x20\162\x65\156\x65\167\x20\x74\150\x65\x20\154\x69\143\145\156\163\x65\56\74\142\162\x20\x2f\x3e\12\x20\x20\40\x20\40\40\x20\x20\x20\x20\x20\x20\x3c\142\162\x20\x2f\76\124\x68\141\156\153\x73\54\74\142\x72\40\x2f\76\155\151\156\151\117\162\x61\156\x67\145\x20\x54\145\x61\x6d";
        $tZ = "\x4c\151\143\145\x6e\163\145\x20\105\x78\160\x69\x72\x65\x64\40\55\40\104\162\x75\x70\141\154\55\x37\40\111\104\120\x20\x53\x41\115\114\x20\x53\x69\x6e\x67\154\x65\x20\123\151\x67\156\55\117\x6e\40\115\x6f\x64\x75\x6c\x65\x20\174\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function dexdmid($qQ)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\110\x65\154\154\157\54\74\x62\162\x20\x2f\x3e\x3c\142\x72\x20\57\x3e\x59\157\x75\162\x20\x31\40\171\x65\141\x72\x20\154\x69\x63\145\x6e\163\x65\40\x66\x6f\x72\40\104\x72\x75\160\x61\154\40\x49\104\x50\x20\123\101\115\114\40\x53\x69\x6e\x67\154\145\40\x53\x69\x67\x6e\x2d\117\156\40\115\x6f\x64\165\154\145\x20\146\157\162\40\x79\x6f\165\x72\40\167\145\142\163\151\x74\145\x20\74\142\76" . $U4 . "\74\57\x62\x3e\40\x65\170\x70\151\162\x65\x64\40\157\156\74\x62\76\40" . $qQ . "\74\57\142\76\56\xa\x20\x20\x20\40\x20\x20\x20\x20\40\x20\40\x20\x49\x66\x20\x79\x6f\x75\162\40\x6c\x69\143\x65\x6e\x73\145\40\151\x73\40\x6e\157\x74\x20\162\x65\156\x65\167\x65\x64\40\x73\x6f\157\x6e\54\40\164\150\x65\x20\x6d\x6f\144\x75\x6c\145\x20\167\x69\154\x6c\x20\x62\x65\x20\144\145\x61\143\x74\151\166\x61\164\x65\x64\x2e\x3c\142\162\40\x2f\76\x3c\x62\x72\40\x2f\76\103\x6c\x69\x63\153\x20\x3c\x61\x20\x68\162\x65\x66\75\x27\150\164\164\160\163\x3a\57\57\x6c\x6f\147\151\x6e\x2e\x78\x65\143\165\162\x69\146\x79\56\x63\x6f\x6d\57\155\x6f\141\163\x2f\154\x6f\147\x69\156\77\x72\x65\144\x69\x72\x65\x63\x74\125\x72\x6c\x3d\x68\164\164\x70\x73\x3a\x2f\57\154\157\147\x69\x6e\x2e\x78\145\143\165\x72\x69\x66\171\56\143\157\155\x2f\x6d\x6f\x61\x73\57\x69\x6e\151\x74\x69\141\154\151\x7a\145\160\141\171\x6d\x65\156\164\x26\162\x65\x71\x75\x65\163\164\x4f\162\x69\147\x69\x6e\75\x72\x65\156\x65\167\x5f\x75\x73\145\162\137\154\x69\143\x65\156\x73\145\47\76\150\x65\162\x65\x3c\57\x61\x3e\x20\164\x6f\40\162\145\x6e\x65\167\x20\x74\x68\x65\x20\154\x69\143\x65\156\x73\145\56\x3c\x62\162\x20\x2f\x3e\12\x20\x20\40\40\40\40\40\40\x20\x20\x20\40\x3c\x62\162\x20\57\x3e\x54\x68\141\156\x6b\163\x2c\74\142\162\40\57\76\155\x69\x6e\x69\117\162\141\156\x67\x65\40\124\x65\x61\x6d";
        $tZ = "\114\x69\143\145\x6e\x73\x65\x20\105\x78\x70\151\162\x65\144\40\x2d\40\104\162\165\x70\141\x6c\55\67\x20\111\x44\x50\40\x53\x41\x4d\x4c\40\123\x69\x6e\x67\154\x65\40\x53\151\147\156\55\117\x6e\40\x4d\157\x64\165\x6c\145\40\174\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function dexdend($qQ)
    {
        global $base_url;
        $U4 = $base_url;
        $ME = "\x48\145\154\x6c\157\x2c\74\x62\162\x20\x2f\x3e\x3c\142\162\40\x2f\x3e\x59\x6f\x75\x72\40\61\40\171\x65\141\x72\40\154\x69\143\x65\x6e\163\x65\40\x66\x6f\x72\x20\x44\x72\x75\x70\141\154\40\x49\104\x50\x20\123\x41\x4d\114\x20\x53\x69\x6e\x67\x6c\x65\x20\x53\x69\147\x6e\55\x4f\156\40\x4d\157\x64\x75\154\145\x20\x68\x61\163\40\x65\170\x70\151\x72\x65\x64\x20\x6f\156\x20\x3c\142\x3e" . $qQ . "\74\57\x62\x3e\x2e\x20\x59\157\165\x20\x68\141\x76\145\x20\x6e\x6f\164\x20\x72\145\x6e\145\x77\145\x64\x20\x79\157\x75\162\40\154\x69\x63\145\156\163\145\40\x77\x69\164\150\151\156\40\x74\x68\x65\x20\x33\60\40\x64\141\171\x73\40\x67\162\141\x63\145\40\x70\145\162\151\157\x64\40\147\x69\x76\145\156\x20\164\157\40\x79\157\165\56\x20\124\x68\145\x20\155\157\x64\165\154\145\40\x68\141\163\40\x62\145\x65\156\40\144\145\141\143\164\151\166\141\164\145\144\x20\157\x6e\40\171\157\x75\162\x20\x77\145\x62\163\151\x74\145\40\x3c\142\x3e" . $U4 . "\74\57\x62\x3e\56\xa\40\40\40\40\x20\x20\x20\x20\40\x20\40\x20\x3c\142\x72\40\57\76\74\142\x72\40\57\x3e\x43\154\x69\x63\x6b\x20\x3c\x61\x20\150\x72\x65\146\75\x27\150\164\164\x70\x73\x3a\57\57\x6c\x6f\x67\151\156\x2e\170\145\x63\x75\x72\151\x66\x79\56\143\157\x6d\x2f\x6d\x6f\141\x73\57\x6c\157\147\x69\156\77\x72\x65\144\151\x72\x65\143\x74\x55\162\x6c\75\x68\x74\164\160\163\72\x2f\57\154\157\147\151\156\56\x78\145\143\x75\162\x69\146\x79\x2e\143\x6f\155\x2f\x6d\157\141\163\x2f\151\156\151\x74\151\141\x6c\151\x7a\145\x70\x61\171\155\145\156\164\x26\x72\145\x71\165\x65\x73\164\117\x72\x69\x67\x69\156\x3d\x72\145\156\x65\x77\x5f\x75\x73\145\162\x5f\x6c\x69\x63\145\x6e\x73\145\47\76\x68\145\x72\x65\x3c\x2f\141\76\x20\164\157\x20\162\145\156\145\167\x20\164\x68\145\x20\154\x69\143\145\x6e\x73\145\56\xa\40\40\x20\x20\40\40\x20\40\40\40\40\40\x3c\x62\x72\x20\57\x3e\x3c\x62\162\x20\57\x3e\x54\150\141\x6e\x6b\163\x2c\74\x62\162\x20\x2f\76\x6d\151\156\151\x4f\162\141\x6e\x67\145\40\x54\x65\x61\x6d";
        $tZ = "\114\x69\x63\145\x6e\x73\145\40\105\x78\x70\x69\x72\145\x64\x20\55\40\104\162\165\x70\141\154\55\67\40\111\x44\120\40\123\x41\x4d\114\x20\x53\151\156\147\x6c\145\x20\x53\x69\x67\x6e\55\x4f\156\x20\x4d\157\144\165\x6c\x65\40\x7c\x20" . $U4;
        $ek = json_decode(Utilities::send_mail($tZ, $ME), true);
    }
    public static function checkupdate($l0)
    {
        $rz = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $ME = json_decode($rz->ccl(), true);
        $zv = $ME["\x6e\x6f\x4f\x66\125\x73\145\x72\x73"];
        if ($zv != $l0) {
            goto B1;
        }
        return FALSE;
        goto Rx;
        B1:
        variable_set("\x6d\x69\x6e\151\x4f\x72\141\x6e\x67\145\137\x73\141\155\x6c\x5f\151\144\160\x5f\x75\163\145\x72\x5f\x63\157\165\x6e\164", $zv);
        return TRUE;
        Rx:
    }
    public static function licensevalidity($iu)
    {
        $rz = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $ME = json_decode($rz->ccl(), true);
        $LA = strtotime($ME["\154\x69\143\x65\x6e\163\145\105\x78\x70\x69\162\x79"]);
        if ($LA > $iu) {
            goto PK;
        }
        return FALSE;
        goto Et;
        PK:
        variable_set("\x6d\151\156\151\x4f\162\141\x6e\147\x65\x5f\163\x61\x6d\x6c\137\151\144\x70\x5f\154\x5f\x65\170\160", $LA);
        $Kj = db_update("\x6d\151\156\151\x6f\162\141\x6e\147\x65\x5f\163\141\155\154\x5f\151\144\x70\137\x75\x73\145\162")->fields(array("\125\x73\145\x72\x49\x6e" => 0))->execute();
        return TRUE;
        Et:
    }
    public static function get_timestamp()
    {
        $nk = MiniorangeSAMLIdpConstants::BASE_URL . "\57\x6d\157\x61\x73\x2f\x72\x65\x73\164\57\x6d\x6f\x62\x69\154\x65\57\147\145\x74\x2d\x74\x69\x6d\x65\x73\164\141\155\160";
        $MX = curl_init($nk);
        curl_setopt($MX, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($MX, CURLOPT_ENCODING, '');
        curl_setopt($MX, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($MX, CURLOPT_AUTOREFERER, true);
        curl_setopt($MX, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($MX, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($MX, CURLOPT_MAXREDIRS, 10);
        curl_setopt($MX, CURLOPT_POST, true);
        $ME = curl_exec($MX);
        if (!curl_errno($MX)) {
            goto dl;
        }
        echo "\105\x72\162\157\x72\x20\151\156\x20\x73\x65\x6e\144\151\156\147\40\x63\165\x72\x6c\40\x52\145\x71\x75\x65\x73\164";
        die;
        dl:
        curl_close($MX);
        return $ME;
    }
    public static function freelicensekey()
    {
        variable_del("\x6d\x69\x6e\151\157\162\x61\156\x67\145\137\163\x61\155\x6c\x5f\151\x64\160\x5f\x73\x6d\154\137\x6c\x6b");
    }
}
?>
